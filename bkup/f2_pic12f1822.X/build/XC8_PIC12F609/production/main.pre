
# 1 "main.c"


# 21 "/Applications/microchip/xc8/v1.30/include/htc.h"
#pragma intrinsic(__builtin_software_breakpoint)
extern void __builtin_software_breakpoint(void);

# 44 "/Applications/microchip/xc8/v1.30/include/pic12f609.h"
extern volatile unsigned char INDF @ 0x000;

asm("INDF equ 00h");



extern volatile unsigned char TMR0 @ 0x001;

asm("TMR0 equ 01h");



extern volatile unsigned char PCL @ 0x002;

asm("PCL equ 02h");



extern volatile unsigned char STATUS @ 0x003;

asm("STATUS equ 03h");


typedef union {
struct {
unsigned C :1;
unsigned DC :1;
unsigned Z :1;
unsigned nPD :1;
unsigned nTO :1;
unsigned RP :2;
unsigned IRP :1;
};
struct {
unsigned :5;
unsigned RP0 :1;
unsigned RP1 :1;
};
struct {
unsigned CARRY :1;
};
struct {
unsigned :2;
unsigned ZERO :1;
};
} STATUSbits_t;
extern volatile STATUSbits_t STATUSbits @ 0x003;

# 149
extern volatile unsigned char FSR @ 0x004;

asm("FSR equ 04h");



extern volatile unsigned char GPIO @ 0x005;

asm("GPIO equ 05h");


extern volatile unsigned char PORTA @ 0x005;

asm("PORTA equ 05h");


typedef union {
struct {
unsigned GP0 :1;
unsigned GP1 :1;
unsigned GP2 :1;
unsigned GP3 :1;
unsigned GP4 :1;
unsigned GP5 :1;
};
struct {
unsigned GPIO0 :1;
unsigned GPIO1 :1;
unsigned GPIO2 :1;
unsigned GPIO3 :1;
unsigned GPIO4 :1;
unsigned GPIO5 :1;
};
struct {
unsigned RA0 :1;
unsigned RA1 :1;
unsigned RA2 :1;
unsigned RA3 :1;
unsigned RA4 :1;
unsigned RA5 :1;
};
} GPIObits_t;
extern volatile GPIObits_t GPIObits @ 0x005;

# 284
typedef union {
struct {
unsigned GP0 :1;
unsigned GP1 :1;
unsigned GP2 :1;
unsigned GP3 :1;
unsigned GP4 :1;
unsigned GP5 :1;
};
struct {
unsigned GPIO0 :1;
unsigned GPIO1 :1;
unsigned GPIO2 :1;
unsigned GPIO3 :1;
unsigned GPIO4 :1;
unsigned GPIO5 :1;
};
struct {
unsigned RA0 :1;
unsigned RA1 :1;
unsigned RA2 :1;
unsigned RA3 :1;
unsigned RA4 :1;
unsigned RA5 :1;
};
} PORTAbits_t;
extern volatile PORTAbits_t PORTAbits @ 0x005;

# 404
extern volatile unsigned char PCLATH @ 0x00A;

asm("PCLATH equ 0Ah");



extern volatile unsigned char INTCON @ 0x00B;

asm("INTCON equ 0Bh");


typedef union {
struct {
unsigned GPIF :1;
unsigned INTF :1;
unsigned TMR0IF :1;
unsigned GPIE :1;
unsigned INTE :1;
unsigned TMR0IE :1;
unsigned PEIE :1;
unsigned GIE :1;
};
struct {
unsigned :2;
unsigned T0IF :1;
unsigned :2;
unsigned T0IE :1;
};
} INTCONbits_t;
extern volatile INTCONbits_t INTCONbits @ 0x00B;

# 487
extern volatile unsigned char PIR1 @ 0x00C;

asm("PIR1 equ 0Ch");


typedef union {
struct {
unsigned TMR1IF :1;
unsigned :2;
unsigned C1IF :1;
};
struct {
unsigned T1IF :1;
unsigned :2;
unsigned CMIF :1;
};
} PIR1bits_t;
extern volatile PIR1bits_t PIR1bits @ 0x00C;

# 528
extern volatile unsigned short TMR1 @ 0x00E;

asm("TMR1 equ 0Eh");



extern volatile unsigned char TMR1L @ 0x00E;

asm("TMR1L equ 0Eh");



extern volatile unsigned char TMR1H @ 0x00F;

asm("TMR1H equ 0Fh");



extern volatile unsigned char T1CON @ 0x010;

asm("T1CON equ 010h");


typedef union {
struct {
unsigned TMR1ON :1;
unsigned TMR1CS :1;
unsigned nT1SYNC :1;
unsigned T1OSCEN :1;
unsigned T1CKPS :2;
unsigned TMR1GE :1;
unsigned T1GINV :1;
};
struct {
unsigned :4;
unsigned T1CKPS0 :1;
unsigned T1CKPS1 :1;
};
} T1CONbits_t;
extern volatile T1CONbits_t T1CONbits @ 0x010;

# 616
extern volatile unsigned char VRCON @ 0x019;

asm("VRCON equ 019h");


typedef union {
struct {
unsigned VR :4;
unsigned FBREN :1;
unsigned VRR :1;
unsigned :1;
unsigned C1VREN :1;
};
struct {
unsigned VR0 :1;
unsigned VR1 :1;
unsigned VR2 :1;
unsigned VR3 :1;
unsigned FVREN :1;
unsigned :2;
unsigned CMVREN :1;
};
struct {
unsigned :4;
unsigned VP6EN :1;
};
} VRCONbits_t;
extern volatile VRCONbits_t VRCONbits @ 0x019;

# 702
extern volatile unsigned char CMCON0 @ 0x01A;

asm("CMCON0 equ 01Ah");


typedef union {
struct {
unsigned C1CH :1;
unsigned :1;
unsigned C1R :1;
unsigned :1;
unsigned C1POL :1;
unsigned C1OE :1;
unsigned C1OUT :1;
unsigned C1ON :1;
};
struct {
unsigned C1CH0 :1;
unsigned :1;
unsigned CMR :1;
unsigned :1;
unsigned CMPOL :1;
unsigned CMOE :1;
unsigned COUT :1;
unsigned CMON :1;
};
struct {
unsigned CMCH :1;
};
} CMCON0bits_t;
extern volatile CMCON0bits_t CMCON0bits @ 0x01A;

# 801
extern volatile unsigned char CMCON1 @ 0x01C;

asm("CMCON1 equ 01Ch");


typedef union {
struct {
unsigned C1SYNC :1;
unsigned T1GSS :1;
unsigned :1;
unsigned C1HYS :1;
unsigned T1ACS :1;
};
struct {
unsigned CMSYNC :1;
unsigned :2;
unsigned CMHYS :1;
};
} CMCON1bits_t;
extern volatile CMCON1bits_t CMCON1bits @ 0x01C;

# 854
extern volatile unsigned char OPTION_REG @ 0x081;

asm("OPTION_REG equ 081h");


typedef union {
struct {
unsigned PS :3;
unsigned PSA :1;
unsigned T0SE :1;
unsigned T0CS :1;
unsigned INTEDG :1;
unsigned nGPPU :1;
};
struct {
unsigned PS0 :1;
unsigned PS1 :1;
unsigned PS2 :1;
};
} OPTION_REGbits_t;
extern volatile OPTION_REGbits_t OPTION_REGbits @ 0x081;

# 923
extern volatile unsigned char TRISIO @ 0x085;

asm("TRISIO equ 085h");


extern volatile unsigned char TRISA @ 0x085;

asm("TRISA equ 085h");


typedef union {
struct {
unsigned TRISIO0 :1;
unsigned TRISIO1 :1;
unsigned TRISIO2 :1;
unsigned TRISIO3 :1;
unsigned TRISIO4 :1;
unsigned TRISIO5 :1;
};
struct {
unsigned TRISA0 :1;
unsigned TRISA1 :1;
unsigned TRISA2 :1;
unsigned TRISA3 :1;
unsigned TRISA4 :1;
unsigned TRISA5 :1;
};
} TRISIObits_t;
extern volatile TRISIObits_t TRISIObits @ 0x085;

# 1014
typedef union {
struct {
unsigned TRISIO0 :1;
unsigned TRISIO1 :1;
unsigned TRISIO2 :1;
unsigned TRISIO3 :1;
unsigned TRISIO4 :1;
unsigned TRISIO5 :1;
};
struct {
unsigned TRISA0 :1;
unsigned TRISA1 :1;
unsigned TRISA2 :1;
unsigned TRISA3 :1;
unsigned TRISA4 :1;
unsigned TRISA5 :1;
};
} TRISAbits_t;
extern volatile TRISAbits_t TRISAbits @ 0x085;

# 1096
extern volatile unsigned char PIE1 @ 0x08C;

asm("PIE1 equ 08Ch");


typedef union {
struct {
unsigned TMR1IE :1;
unsigned :2;
unsigned C1IE :1;
};
struct {
unsigned T1IE :1;
unsigned :2;
unsigned CMIE :1;
};
} PIE1bits_t;
extern volatile PIE1bits_t PIE1bits @ 0x08C;

# 1137
extern volatile unsigned char PCON @ 0x08E;

asm("PCON equ 08Eh");


typedef union {
struct {
unsigned nBOR :1;
unsigned nPOR :1;
};
struct {
unsigned nBOD :1;
};
} PCONbits_t;
extern volatile PCONbits_t PCONbits @ 0x08E;

# 1170
extern volatile unsigned char OSCTUNE @ 0x090;

asm("OSCTUNE equ 090h");


typedef union {
struct {
unsigned TUN :5;
};
struct {
unsigned TUN0 :1;
unsigned TUN1 :1;
unsigned TUN2 :1;
unsigned TUN3 :1;
unsigned TUN4 :1;
};
} OSCTUNEbits_t;
extern volatile OSCTUNEbits_t OSCTUNEbits @ 0x090;

# 1221
extern volatile unsigned char WPU @ 0x095;

asm("WPU equ 095h");


extern volatile unsigned char WPUA @ 0x095;

asm("WPUA equ 095h");


typedef union {
struct {
unsigned WPUA0 :1;
unsigned WPUA1 :1;
unsigned WPUA2 :1;
unsigned :1;
unsigned WPUA4 :1;
unsigned WPUA5 :1;
};
struct {
unsigned WPU0 :1;
unsigned WPU1 :1;
unsigned WPU2 :1;
unsigned :1;
unsigned WPU4 :1;
unsigned WPU5 :1;
};
} WPUbits_t;
extern volatile WPUbits_t WPUbits @ 0x095;

# 1302
typedef union {
struct {
unsigned WPUA0 :1;
unsigned WPUA1 :1;
unsigned WPUA2 :1;
unsigned :1;
unsigned WPUA4 :1;
unsigned WPUA5 :1;
};
struct {
unsigned WPU0 :1;
unsigned WPU1 :1;
unsigned WPU2 :1;
unsigned :1;
unsigned WPU4 :1;
unsigned WPU5 :1;
};
} WPUAbits_t;
extern volatile WPUAbits_t WPUAbits @ 0x095;

# 1374
extern volatile unsigned char IOC @ 0x096;

asm("IOC equ 096h");


extern volatile unsigned char IOCA @ 0x096;

asm("IOCA equ 096h");


typedef union {
struct {
unsigned IOC0 :1;
unsigned IOC1 :1;
unsigned IOC2 :1;
unsigned IOC3 :1;
unsigned IOC4 :1;
unsigned IOC5 :1;
};
struct {
unsigned IOCA0 :1;
unsigned IOCA1 :1;
unsigned IOCA2 :1;
unsigned IOCA3 :1;
unsigned IOCA4 :1;
unsigned IOCA5 :1;
};
} IOCbits_t;
extern volatile IOCbits_t IOCbits @ 0x096;

# 1465
typedef union {
struct {
unsigned IOC0 :1;
unsigned IOC1 :1;
unsigned IOC2 :1;
unsigned IOC3 :1;
unsigned IOC4 :1;
unsigned IOC5 :1;
};
struct {
unsigned IOCA0 :1;
unsigned IOCA1 :1;
unsigned IOCA2 :1;
unsigned IOCA3 :1;
unsigned IOCA4 :1;
unsigned IOCA5 :1;
};
} IOCAbits_t;
extern volatile IOCAbits_t IOCAbits @ 0x096;

# 1547
extern volatile unsigned char ANSEL @ 0x09F;

asm("ANSEL equ 09Fh");


typedef union {
struct {
unsigned ANS :4;
unsigned ADCS :3;
};
struct {
unsigned ANS0 :1;
unsigned ANS1 :1;
unsigned :1;
unsigned ANS3 :1;
};
} ANSELbits_t;
extern volatile ANSELbits_t ANSELbits @ 0x09F;

# 1599
extern volatile __bit ANS0 @ (((unsigned) &ANSEL)*8) + 0;

extern volatile __bit ANS1 @ (((unsigned) &ANSEL)*8) + 1;

extern volatile __bit ANS3 @ (((unsigned) &ANSEL)*8) + 3;

extern volatile __bit C1CH @ (((unsigned) &CMCON0)*8) + 0;

extern volatile __bit C1CH0 @ (((unsigned) &CMCON0)*8) + 0;

extern volatile __bit C1HYS @ (((unsigned) &CMCON1)*8) + 3;

extern volatile __bit C1IE @ (((unsigned) &PIE1)*8) + 3;

extern volatile __bit C1IF @ (((unsigned) &PIR1)*8) + 3;

extern volatile __bit C1OE @ (((unsigned) &CMCON0)*8) + 5;

extern volatile __bit C1ON @ (((unsigned) &CMCON0)*8) + 7;

extern volatile __bit C1OUT @ (((unsigned) &CMCON0)*8) + 6;

extern volatile __bit C1POL @ (((unsigned) &CMCON0)*8) + 4;

extern volatile __bit C1R @ (((unsigned) &CMCON0)*8) + 2;

extern volatile __bit C1SYNC @ (((unsigned) &CMCON1)*8) + 0;

extern volatile __bit C1VREN @ (((unsigned) &VRCON)*8) + 7;

extern volatile __bit CARRY @ (((unsigned) &STATUS)*8) + 0;

extern volatile __bit CMCH @ (((unsigned) &CMCON0)*8) + 0;

extern volatile __bit CMHYS @ (((unsigned) &CMCON1)*8) + 3;

extern volatile __bit CMIE @ (((unsigned) &PIE1)*8) + 3;

extern volatile __bit CMIF @ (((unsigned) &PIR1)*8) + 3;

extern volatile __bit CMOE @ (((unsigned) &CMCON0)*8) + 5;

extern volatile __bit CMON @ (((unsigned) &CMCON0)*8) + 7;

extern volatile __bit CMPOL @ (((unsigned) &CMCON0)*8) + 4;

extern volatile __bit CMR @ (((unsigned) &CMCON0)*8) + 2;

extern volatile __bit CMSYNC @ (((unsigned) &CMCON1)*8) + 0;

extern volatile __bit CMVREN @ (((unsigned) &VRCON)*8) + 7;

extern volatile __bit COUT @ (((unsigned) &CMCON0)*8) + 6;

extern volatile __bit DC @ (((unsigned) &STATUS)*8) + 1;

extern volatile __bit FBREN @ (((unsigned) &VRCON)*8) + 4;

extern volatile __bit FVREN @ (((unsigned) &VRCON)*8) + 4;

extern volatile __bit GIE @ (((unsigned) &INTCON)*8) + 7;

extern volatile __bit GP0 @ (((unsigned) &GPIO)*8) + 0;

extern volatile __bit GP1 @ (((unsigned) &GPIO)*8) + 1;

extern volatile __bit GP2 @ (((unsigned) &GPIO)*8) + 2;

extern volatile __bit GP3 @ (((unsigned) &GPIO)*8) + 3;

extern volatile __bit GP4 @ (((unsigned) &GPIO)*8) + 4;

extern volatile __bit GP5 @ (((unsigned) &GPIO)*8) + 5;

extern volatile __bit GPIE @ (((unsigned) &INTCON)*8) + 3;

extern volatile __bit GPIF @ (((unsigned) &INTCON)*8) + 0;

extern volatile __bit GPIO0 @ (((unsigned) &GPIO)*8) + 0;

extern volatile __bit GPIO1 @ (((unsigned) &GPIO)*8) + 1;

extern volatile __bit GPIO2 @ (((unsigned) &GPIO)*8) + 2;

extern volatile __bit GPIO3 @ (((unsigned) &GPIO)*8) + 3;

extern volatile __bit GPIO4 @ (((unsigned) &GPIO)*8) + 4;

extern volatile __bit GPIO5 @ (((unsigned) &GPIO)*8) + 5;

extern volatile __bit INTE @ (((unsigned) &INTCON)*8) + 4;

extern volatile __bit INTEDG @ (((unsigned) &OPTION_REG)*8) + 6;

extern volatile __bit INTF @ (((unsigned) &INTCON)*8) + 1;

extern volatile __bit IOC0 @ (((unsigned) &IOC)*8) + 0;

extern volatile __bit IOC1 @ (((unsigned) &IOC)*8) + 1;

extern volatile __bit IOC2 @ (((unsigned) &IOC)*8) + 2;

extern volatile __bit IOC3 @ (((unsigned) &IOC)*8) + 3;

extern volatile __bit IOC4 @ (((unsigned) &IOC)*8) + 4;

extern volatile __bit IOC5 @ (((unsigned) &IOC)*8) + 5;

extern volatile __bit IOCA0 @ (((unsigned) &IOC)*8) + 0;

extern volatile __bit IOCA1 @ (((unsigned) &IOC)*8) + 1;

extern volatile __bit IOCA2 @ (((unsigned) &IOC)*8) + 2;

extern volatile __bit IOCA3 @ (((unsigned) &IOC)*8) + 3;

extern volatile __bit IOCA4 @ (((unsigned) &IOC)*8) + 4;

extern volatile __bit IOCA5 @ (((unsigned) &IOC)*8) + 5;

extern volatile __bit IRP @ (((unsigned) &STATUS)*8) + 7;

extern volatile __bit PEIE @ (((unsigned) &INTCON)*8) + 6;

extern volatile __bit PS0 @ (((unsigned) &OPTION_REG)*8) + 0;

extern volatile __bit PS1 @ (((unsigned) &OPTION_REG)*8) + 1;

extern volatile __bit PS2 @ (((unsigned) &OPTION_REG)*8) + 2;

extern volatile __bit PSA @ (((unsigned) &OPTION_REG)*8) + 3;

extern volatile __bit RA0 @ (((unsigned) &GPIO)*8) + 0;

extern volatile __bit RA1 @ (((unsigned) &GPIO)*8) + 1;

extern volatile __bit RA2 @ (((unsigned) &GPIO)*8) + 2;

extern volatile __bit RA3 @ (((unsigned) &GPIO)*8) + 3;

extern volatile __bit RA4 @ (((unsigned) &GPIO)*8) + 4;

extern volatile __bit RA5 @ (((unsigned) &GPIO)*8) + 5;

extern volatile __bit RP0 @ (((unsigned) &STATUS)*8) + 5;

extern volatile __bit RP1 @ (((unsigned) &STATUS)*8) + 6;

extern volatile __bit T0CS @ (((unsigned) &OPTION_REG)*8) + 5;

extern volatile __bit T0IE @ (((unsigned) &INTCON)*8) + 5;

extern volatile __bit T0IF @ (((unsigned) &INTCON)*8) + 2;

extern volatile __bit T0SE @ (((unsigned) &OPTION_REG)*8) + 4;

extern volatile __bit T1ACS @ (((unsigned) &CMCON1)*8) + 4;

extern volatile __bit T1CKPS0 @ (((unsigned) &T1CON)*8) + 4;

extern volatile __bit T1CKPS1 @ (((unsigned) &T1CON)*8) + 5;

extern volatile __bit T1GINV @ (((unsigned) &T1CON)*8) + 7;

extern volatile __bit T1GSS @ (((unsigned) &CMCON1)*8) + 1;

extern volatile __bit T1IE @ (((unsigned) &PIE1)*8) + 0;

extern volatile __bit T1IF @ (((unsigned) &PIR1)*8) + 0;

extern volatile __bit T1OSCEN @ (((unsigned) &T1CON)*8) + 3;

extern volatile __bit TMR0IE @ (((unsigned) &INTCON)*8) + 5;

extern volatile __bit TMR0IF @ (((unsigned) &INTCON)*8) + 2;

extern volatile __bit TMR1CS @ (((unsigned) &T1CON)*8) + 1;

extern volatile __bit TMR1GE @ (((unsigned) &T1CON)*8) + 6;

extern volatile __bit TMR1IE @ (((unsigned) &PIE1)*8) + 0;

extern volatile __bit TMR1IF @ (((unsigned) &PIR1)*8) + 0;

extern volatile __bit TMR1ON @ (((unsigned) &T1CON)*8) + 0;

extern volatile __bit TRISA0 @ (((unsigned) &TRISIO)*8) + 0;

extern volatile __bit TRISA1 @ (((unsigned) &TRISIO)*8) + 1;

extern volatile __bit TRISA2 @ (((unsigned) &TRISIO)*8) + 2;

extern volatile __bit TRISA3 @ (((unsigned) &TRISIO)*8) + 3;

extern volatile __bit TRISA4 @ (((unsigned) &TRISIO)*8) + 4;

extern volatile __bit TRISA5 @ (((unsigned) &TRISIO)*8) + 5;

extern volatile __bit TRISIO0 @ (((unsigned) &TRISIO)*8) + 0;

extern volatile __bit TRISIO1 @ (((unsigned) &TRISIO)*8) + 1;

extern volatile __bit TRISIO2 @ (((unsigned) &TRISIO)*8) + 2;

extern volatile __bit TRISIO3 @ (((unsigned) &TRISIO)*8) + 3;

extern volatile __bit TRISIO4 @ (((unsigned) &TRISIO)*8) + 4;

extern volatile __bit TRISIO5 @ (((unsigned) &TRISIO)*8) + 5;

extern volatile __bit TUN0 @ (((unsigned) &OSCTUNE)*8) + 0;

extern volatile __bit TUN1 @ (((unsigned) &OSCTUNE)*8) + 1;

extern volatile __bit TUN2 @ (((unsigned) &OSCTUNE)*8) + 2;

extern volatile __bit TUN3 @ (((unsigned) &OSCTUNE)*8) + 3;

extern volatile __bit TUN4 @ (((unsigned) &OSCTUNE)*8) + 4;

extern volatile __bit VP6EN @ (((unsigned) &VRCON)*8) + 4;

extern volatile __bit VR0 @ (((unsigned) &VRCON)*8) + 0;

extern volatile __bit VR1 @ (((unsigned) &VRCON)*8) + 1;

extern volatile __bit VR2 @ (((unsigned) &VRCON)*8) + 2;

extern volatile __bit VR3 @ (((unsigned) &VRCON)*8) + 3;

extern volatile __bit VRR @ (((unsigned) &VRCON)*8) + 5;

extern volatile __bit WPU0 @ (((unsigned) &WPU)*8) + 0;

extern volatile __bit WPU1 @ (((unsigned) &WPU)*8) + 1;

extern volatile __bit WPU2 @ (((unsigned) &WPU)*8) + 2;

extern volatile __bit WPU4 @ (((unsigned) &WPU)*8) + 4;

extern volatile __bit WPU5 @ (((unsigned) &WPU)*8) + 5;

extern volatile __bit WPUA0 @ (((unsigned) &WPU)*8) + 0;

extern volatile __bit WPUA1 @ (((unsigned) &WPU)*8) + 1;

extern volatile __bit WPUA2 @ (((unsigned) &WPU)*8) + 2;

extern volatile __bit WPUA4 @ (((unsigned) &WPU)*8) + 4;

extern volatile __bit WPUA5 @ (((unsigned) &WPU)*8) + 5;

extern volatile __bit ZERO @ (((unsigned) &STATUS)*8) + 2;

extern volatile __bit nBOD @ (((unsigned) &PCON)*8) + 0;

extern volatile __bit nBOR @ (((unsigned) &PCON)*8) + 0;

extern volatile __bit nGPPU @ (((unsigned) &OPTION_REG)*8) + 7;

extern volatile __bit nPD @ (((unsigned) &STATUS)*8) + 3;

extern volatile __bit nPOR @ (((unsigned) &PCON)*8) + 1;

extern volatile __bit nT1SYNC @ (((unsigned) &T1CON)*8) + 2;

extern volatile __bit nTO @ (((unsigned) &STATUS)*8) + 4;


# 27 "/Applications/microchip/xc8/v1.30/include/pic.h"
#pragma intrinsic(__nop)
extern void __nop(void);

# 80
extern unsigned int flash_read(unsigned short addr);


# 153
#pragma intrinsic(_delay)
extern __nonreentrant void _delay(unsigned long);

# 4 "/Applications/microchip/xc8/v1.30/include/stdlib.h"
typedef int ptrdiff_t;
typedef unsigned size_t;
typedef unsigned short wchar_t;

# 16
extern int errno;

# 27
typedef struct {
int rem;
int quot;
} div_t;
typedef struct {
unsigned rem;
unsigned quot;
} udiv_t;
typedef struct {
long quot;
long rem;
} ldiv_t;
typedef struct {
unsigned long quot;
unsigned long rem;
} uldiv_t;

# 65
extern double atof(const char *);
extern double strtod(const char *, const char **);
extern int atoi(const char *);
extern unsigned xtoi(const char *);
extern long atol(const char *);
extern long strtol(const char *, char **, int);

extern int rand(void);
extern void srand(unsigned int);
extern void * calloc(size_t, size_t);
extern div_t div(int numer, int denom);
extern udiv_t udiv(unsigned numer, unsigned denom);
extern ldiv_t ldiv(long numer, long denom);
extern uldiv_t uldiv(unsigned long numer,unsigned long denom);
extern unsigned long _lrotl(unsigned long value, unsigned int shift);
extern unsigned long _lrotr(unsigned long value, unsigned int shift);
extern unsigned int _rotl(unsigned int value, unsigned int shift);
extern unsigned int _rotr(unsigned int value, unsigned int shift);




extern void * malloc(size_t);
extern void free(void *);
extern void * realloc(void *, size_t);

extern void abort(void);
extern void exit(int);
extern int atexit(void (*)(void));
extern char * getenv(const char *);
extern char ** environ;
extern int system(char *);
extern void qsort(void *, size_t, size_t, int (*)(const void *, const void *));
extern void * bsearch(const void *, void *, size_t, size_t, int(*)(const void *, const void *));
extern int abs(int);
extern long labs(long);


extern char * itoa(char * buf, int val, int base);
extern char * utoa(char * buf, unsigned val, int base);




extern char * ltoa(char * buf, long val, int base);
extern char * ultoa(char * buf, unsigned long val, int base);

extern char * ftoa(float f, int * status);

# 7 "main.c"
__config("__CONFIG", "pic", "FOSC_INTOSC & WDTE_OFF & PWRTE_OFF & MCLRE_OFF & CP_OFF & CPD_OFF & BOREN_OFF & CLKOUTEN_OFF & IESO_OFF & FCMEN_OFF");

# 12
__config("__CONFIG", "pic", "WRT_OFF & PLLEN_ON & STVREN_OFF & LVP_OFF");

# 21
extern const unsigned char sinwave[];
extern const unsigned char envelopeTable[];
extern const unsigned char onkai_d[];
extern const unsigned char onkai_f[];
extern unsigned char waveTable[];
extern unsigned int ENV_DELAY;
extern unsigned int dpos;



const unsigned char onkai_d[] = {
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
2,
2,
2,
2,
2,
2,
2,
3,
3,
3,
3,
3,
4,
4,
4,
5,
5,
5,
5,
6,
6,
7,
7,
7,
8,
8,
9,
10,
10,
11,
11,
12,
13,
14,
14,
15,
16,
17,
18,
20,
21,
22,
23,
25,
26,
28,
29,
31,
33,
35,
37,
40,
42,
44,
47,
50,
53,
56,
59,
63,
67,
71
};



const unsigned char onkai_f[] = {
143,
151,
160,
169,
180,
190,
201,
213,
226,
239,
254,
14,
30,
47,
64,
83,
104,
125,
147,
171,
197,
223,
252,
27,
59,
93,
128,
166,
207,
249,
39,
87,
138,
191,
248,
53,
117,
185,
1,
77,
158,
243,
78,
174,
20,
127,
241,
106,
234,
114,
2,
154,
60,
230,
156,
92,
40,
254,
226,
212,
213,
228,
4,
53,
119,
205,
56,
183,
79,
253,
134,
104,
170,
127,
8,
105,
238,
155,
112,
111,
157,
250,
139,
83,
84
};


unsigned int waveData;
unsigned char voice_on;
unsigned char synth_waveData;
unsigned char env;
unsigned int envelopeCount;
unsigned char envelopeValue;

unsigned char dat_d;
unsigned char dat_f;
unsigned int pos_d;
unsigned int pos_f;
unsigned char pos;


unsigned int pitch;
unsigned int count;
unsigned int ENV_DELAY;


char scale[] = {

# 235
66, 68, 70, 71, 73, 75, 77, 78, 80, 82

# 248
};




void soundPlay(char onkai) {

dat_d = onkai_d[onkai];

dat_f = onkai_f[onkai];

env = 0;
envelopeCount = 0;

voice_on = 1;
}


char UART_Buffer[4];
int UART_Buffer_inptr;
int UART_Buffer_outptr;

unsigned int UART_Read() {
unsigned int ans;


if (UART_Buffer_inptr == UART_Buffer_outptr) return 0xffff;

ans = UART_Buffer[UART_Buffer_inptr];

UART_Buffer_inptr = (UART_Buffer_inptr + 1) % 4;

return ans;
}

int UART_Available() {
return (UART_Buffer_outptr + 4 - UART_Buffer_inptr) % 4;
}

void InitUART(int rx, int tx, char brg) {
RXDTSEL = 0;
TXCKSEL = 0;
if (rx == 2) RXDTSEL = 1;
if (tx == 3) TXCKSEL = 1;


TXSTA = 0b00100100;
RCSTA = 0b10010000;
SPBRG = brg;
RCIF = 0;
RCIE = 1;
PEIE = 1;

UART_Buffer_inptr = 0;
UART_Buffer_outptr = 0;
}

void main(void) {

int i;
int j;

int data;

OSCCON = 0b01110000;
LATA = 0;
TRISA = 0b00100000;
LATA = 0b00000000;




InitUART(2, 3, 34);


ANSELA = 0;

CCP1SEL = 0;
CCP1CON = 0b00001100;
T2CON = 0b00000000;
CCPR1L = 0;
CCPR1H = 0;
TMR2 = 0;
PR2 = 255;
TMR2ON = 1;



OPTION_REG = 0;
TMR0 = 0;
T0IE = 0;
T0IF = 0;


T0IE = 1;
GIE = 1;


pitch = 0;
count = 0;


voice_on = 0;
env = 0;
envelopeCount = 0;
pos_d = 0;
pos_f = 0;

ENV_DELAY = 300;
while (1) {


if (UART_Available() != 0) {

data = UART_Read();

if (data >= 'a' && data < ('a' + (int) sizeof (scale))) {
soundPlay(scale[data - 'a']);
}

}
}

}

# 376
void interrupt GlobalInt(void) {
int i;
int x;
char dt;

if (RCIF == 1) {

dt = RCREG;
x = (UART_Buffer_outptr + 1) % 4;
if (x != UART_Buffer_inptr) {

UART_Buffer[UART_Buffer_outptr] = dt;

UART_Buffer_outptr = x;
}


if (OERR == 1) {
CREN = 0;
while (OERR);
CREN = 1;
}


RCIF = 0;
}


if (T0IF) {

waveData = 0;


if (voice_on) {


synth_waveData = waveTable[pos];



if (envelopeCount == 0) {


envelopeValue = envelopeTable[env++];


envelopeCount = ENV_DELAY;


if (env == 255) {

voice_on = 0;
}

}
else {

envelopeCount--;
}




pos_d += dat_d;

pos_f += dat_f;



pos = (pos_d + (pos_f >> 8)) & 0xFF;

}



waveData = synth_waveData * envelopeValue >> 7;


CCPR1L = waveData;
T0IF = 0;
}


}
