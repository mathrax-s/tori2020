

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sun Jul 25 17:31:43 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBIGRAM,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,inline,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text21,local,class=CODE,merge=1,inline,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,inline,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2
    52                           	psect	text38,local,class=CODE,merge=1,delta=2
    53                           	psect	text39,local,class=CODE,merge=1,delta=2
    54                           	psect	text40,local,class=CODE,merge=1,delta=2
    55                           	psect	text41,local,class=CODE,merge=1,delta=2
    56                           	psect	text42,local,class=CODE,merge=1,delta=2
    57                           	psect	text43,local,class=CODE,merge=1,delta=2
    58                           	psect	text44,local,class=CODE,merge=1,delta=2
    59                           	psect	text45,local,class=CODE,merge=1,delta=2
    60                           	psect	text46,local,class=CODE,merge=1,delta=2
    61                           	psect	text47,local,class=CODE,merge=1,delta=2
    62                           	psect	text48,local,class=CODE,merge=1,delta=2
    63                           	psect	text49,local,class=CODE,merge=1,delta=2
    64                           	psect	text50,local,class=CODE,merge=1,delta=2
    65                           	psect	text51,local,class=CODE,merge=1,delta=2
    66                           	psect	text52,local,class=CODE,merge=1,delta=2
    67                           	psect	text53,local,class=CODE,merge=1,delta=2
    68                           	psect	text54,local,class=CODE,merge=1,inline,delta=2
    69                           	psect	text55,local,class=CODE,merge=1,delta=2
    70                           	psect	text56,local,class=CODE,merge=1,delta=2
    71                           	psect	text57,local,class=CODE,merge=1,delta=2,group=2
    72                           	psect	text58,local,class=CODE,merge=1,delta=2
    73                           	psect	text59,local,class=CODE,merge=1,delta=2
    74                           	psect	text60,local,class=CODE,merge=1,delta=2
    75                           	psect	text61,local,class=CODE,merge=1,delta=2
    76                           	psect	text62,local,class=CODE,merge=1,delta=2
    77                           	psect	text63,local,class=CODE,merge=1,delta=2
    78                           	psect	text64,local,class=CODE,merge=1,delta=2
    79                           	psect	text65,local,class=CODE,merge=1,delta=2
    80                           	psect	text66,local,class=CODE,merge=1,delta=2
    81                           	psect	text67,local,class=CODE,merge=1,delta=2
    82                           	psect	text68,local,class=CODE,merge=1,delta=2
    83                           	psect	text69,local,class=CODE,merge=1,delta=2
    84                           	psect	text70,local,class=CODE,merge=1,delta=2
    85                           	psect	text71,local,class=CODE,merge=1,delta=2
    86                           	psect	text72,local,class=CODE,merge=1,delta=2
    87                           	psect	text73,local,class=CODE,merge=1,delta=2
    88                           	psect	text74,local,class=CODE,merge=1,delta=2
    89                           	psect	text75,local,class=CODE,merge=1,delta=2,group=1
    90                           	psect	text76,local,class=CODE,merge=1,delta=2
    91                           	psect	text77,local,class=CODE,merge=1,delta=2
    92                           	psect	text78,local,class=CODE,merge=1,delta=2
    93                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    94                           	dabs	1,0x220,48
    95                           	dabs	1,0x1A0,80
    96                           	dabs	1,0x146,42
    97                           	dabs	1,0x120,38
    98                           	dabs	1,0xBC,52
    99                           	dabs	1,0x20C6,0,_mtouch_button
   100                           	dabs	1,0x206C,0,_mtouch_sensor
   101                           	dabs	1,0x7E,2
   102  0000                     
   103                           ; Version 2.20
   104                           ; Generated 09/04/2020 GMT
   105                           ; 
   106                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   107                           ; All rights reserved.
   108                           ; 
   109                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   110                           ; 
   111                           ; Redistribution and use in source and binary forms, with or without modification, are
   112                           ; permitted provided that the following conditions are met:
   113                           ; 
   114                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   115                           ;        conditions and the following disclaimer.
   116                           ; 
   117                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   118                           ;        of conditions and the following disclaimer in the documentation and/or other
   119                           ;        materials provided with the distribution.
   120                           ; 
   121                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   122                           ;        software without specific prior written permission.
   123                           ; 
   124                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   125                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   126                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   127                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   128                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   129                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   130                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   131                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   132                           ; 
   133                           ; 
   134                           ; Code-generator required, PIC16F1827 Definitions
   135                           ; 
   136                           ; SFR Addresses
   137  0000                     	;# 
   138  0001                     	;# 
   139  0002                     	;# 
   140  0003                     	;# 
   141  0004                     	;# 
   142  0005                     	;# 
   143  0006                     	;# 
   144  0007                     	;# 
   145  0008                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  008C                     	;# 
   167  008D                     	;# 
   168  0091                     	;# 
   169  0092                     	;# 
   170  0093                     	;# 
   171  0094                     	;# 
   172  0095                     	;# 
   173  0096                     	;# 
   174  0097                     	;# 
   175  0098                     	;# 
   176  0099                     	;# 
   177  009A                     	;# 
   178  009B                     	;# 
   179  009B                     	;# 
   180  009C                     	;# 
   181  009D                     	;# 
   182  009E                     	;# 
   183  010C                     	;# 
   184  010D                     	;# 
   185  0111                     	;# 
   186  0112                     	;# 
   187  0113                     	;# 
   188  0114                     	;# 
   189  0115                     	;# 
   190  0116                     	;# 
   191  0117                     	;# 
   192  0118                     	;# 
   193  0119                     	;# 
   194  011A                     	;# 
   195  011B                     	;# 
   196  011D                     	;# 
   197  011E                     	;# 
   198  018C                     	;# 
   199  018D                     	;# 
   200  0191                     	;# 
   201  0191                     	;# 
   202  0192                     	;# 
   203  0193                     	;# 
   204  0193                     	;# 
   205  0193                     	;# 
   206  0194                     	;# 
   207  0195                     	;# 
   208  0196                     	;# 
   209  0199                     	;# 
   210  019A                     	;# 
   211  019B                     	;# 
   212  019B                     	;# 
   213  019B                     	;# 
   214  019B                     	;# 
   215  019C                     	;# 
   216  019C                     	;# 
   217  019D                     	;# 
   218  019E                     	;# 
   219  019F                     	;# 
   220  020C                     	;# 
   221  020D                     	;# 
   222  0211                     	;# 
   223  0211                     	;# 
   224  0212                     	;# 
   225  0212                     	;# 
   226  0213                     	;# 
   227  0213                     	;# 
   228  0214                     	;# 
   229  0214                     	;# 
   230  0215                     	;# 
   231  0215                     	;# 
   232  0215                     	;# 
   233  0216                     	;# 
   234  0216                     	;# 
   235  0217                     	;# 
   236  0217                     	;# 
   237  0219                     	;# 
   238  021A                     	;# 
   239  021B                     	;# 
   240  021C                     	;# 
   241  021D                     	;# 
   242  021E                     	;# 
   243  021F                     	;# 
   244  0291                     	;# 
   245  0291                     	;# 
   246  0292                     	;# 
   247  0293                     	;# 
   248  0294                     	;# 
   249  0295                     	;# 
   250  0295                     	;# 
   251  0296                     	;# 
   252  0298                     	;# 
   253  0298                     	;# 
   254  0299                     	;# 
   255  029A                     	;# 
   256  029B                     	;# 
   257  029C                     	;# 
   258  029C                     	;# 
   259  029D                     	;# 
   260  029E                     	;# 
   261  029E                     	;# 
   262  0311                     	;# 
   263  0311                     	;# 
   264  0312                     	;# 
   265  0313                     	;# 
   266  0318                     	;# 
   267  0318                     	;# 
   268  0319                     	;# 
   269  031A                     	;# 
   270  0394                     	;# 
   271  0395                     	;# 
   272  0396                     	;# 
   273  039A                     	;# 
   274  039C                     	;# 
   275  039D                     	;# 
   276  039E                     	;# 
   277  039F                     	;# 
   278  0415                     	;# 
   279  0416                     	;# 
   280  0417                     	;# 
   281  041C                     	;# 
   282  041D                     	;# 
   283  041E                     	;# 
   284  0FE4                     	;# 
   285  0FE5                     	;# 
   286  0FE6                     	;# 
   287  0FE7                     	;# 
   288  0FE8                     	;# 
   289  0FE9                     	;# 
   290  0FEA                     	;# 
   291  0FEB                     	;# 
   292  0FED                     	;# 
   293  0FEE                     	;# 
   294  0FEF                     	;# 
   295  0000                     	;# 
   296  0001                     	;# 
   297  0002                     	;# 
   298  0003                     	;# 
   299  0004                     	;# 
   300  0005                     	;# 
   301  0006                     	;# 
   302  0007                     	;# 
   303  0008                     	;# 
   304  0009                     	;# 
   305  000A                     	;# 
   306  000B                     	;# 
   307  000C                     	;# 
   308  000D                     	;# 
   309  0011                     	;# 
   310  0012                     	;# 
   311  0013                     	;# 
   312  0014                     	;# 
   313  0015                     	;# 
   314  0016                     	;# 
   315  0016                     	;# 
   316  0017                     	;# 
   317  0018                     	;# 
   318  0019                     	;# 
   319  001A                     	;# 
   320  001B                     	;# 
   321  001C                     	;# 
   322  001E                     	;# 
   323  001F                     	;# 
   324  008C                     	;# 
   325  008D                     	;# 
   326  0091                     	;# 
   327  0092                     	;# 
   328  0093                     	;# 
   329  0094                     	;# 
   330  0095                     	;# 
   331  0096                     	;# 
   332  0097                     	;# 
   333  0098                     	;# 
   334  0099                     	;# 
   335  009A                     	;# 
   336  009B                     	;# 
   337  009B                     	;# 
   338  009C                     	;# 
   339  009D                     	;# 
   340  009E                     	;# 
   341  010C                     	;# 
   342  010D                     	;# 
   343  0111                     	;# 
   344  0112                     	;# 
   345  0113                     	;# 
   346  0114                     	;# 
   347  0115                     	;# 
   348  0116                     	;# 
   349  0117                     	;# 
   350  0118                     	;# 
   351  0119                     	;# 
   352  011A                     	;# 
   353  011B                     	;# 
   354  011D                     	;# 
   355  011E                     	;# 
   356  018C                     	;# 
   357  018D                     	;# 
   358  0191                     	;# 
   359  0191                     	;# 
   360  0192                     	;# 
   361  0193                     	;# 
   362  0193                     	;# 
   363  0193                     	;# 
   364  0194                     	;# 
   365  0195                     	;# 
   366  0196                     	;# 
   367  0199                     	;# 
   368  019A                     	;# 
   369  019B                     	;# 
   370  019B                     	;# 
   371  019B                     	;# 
   372  019B                     	;# 
   373  019C                     	;# 
   374  019C                     	;# 
   375  019D                     	;# 
   376  019E                     	;# 
   377  019F                     	;# 
   378  020C                     	;# 
   379  020D                     	;# 
   380  0211                     	;# 
   381  0211                     	;# 
   382  0212                     	;# 
   383  0212                     	;# 
   384  0213                     	;# 
   385  0213                     	;# 
   386  0214                     	;# 
   387  0214                     	;# 
   388  0215                     	;# 
   389  0215                     	;# 
   390  0215                     	;# 
   391  0216                     	;# 
   392  0216                     	;# 
   393  0217                     	;# 
   394  0217                     	;# 
   395  0219                     	;# 
   396  021A                     	;# 
   397  021B                     	;# 
   398  021C                     	;# 
   399  021D                     	;# 
   400  021E                     	;# 
   401  021F                     	;# 
   402  0291                     	;# 
   403  0291                     	;# 
   404  0292                     	;# 
   405  0293                     	;# 
   406  0294                     	;# 
   407  0295                     	;# 
   408  0295                     	;# 
   409  0296                     	;# 
   410  0298                     	;# 
   411  0298                     	;# 
   412  0299                     	;# 
   413  029A                     	;# 
   414  029B                     	;# 
   415  029C                     	;# 
   416  029C                     	;# 
   417  029D                     	;# 
   418  029E                     	;# 
   419  029E                     	;# 
   420  0311                     	;# 
   421  0311                     	;# 
   422  0312                     	;# 
   423  0313                     	;# 
   424  0318                     	;# 
   425  0318                     	;# 
   426  0319                     	;# 
   427  031A                     	;# 
   428  0394                     	;# 
   429  0395                     	;# 
   430  0396                     	;# 
   431  039A                     	;# 
   432  039C                     	;# 
   433  039D                     	;# 
   434  039E                     	;# 
   435  039F                     	;# 
   436  0415                     	;# 
   437  0416                     	;# 
   438  0417                     	;# 
   439  041C                     	;# 
   440  041D                     	;# 
   441  041E                     	;# 
   442  0FE4                     	;# 
   443  0FE5                     	;# 
   444  0FE6                     	;# 
   445  0FE7                     	;# 
   446  0FE8                     	;# 
   447  0FE9                     	;# 
   448  0FEA                     	;# 
   449  0FEB                     	;# 
   450  0FED                     	;# 
   451  0FEE                     	;# 
   452  0FEF                     	;# 
   453  0000                     	;# 
   454  0001                     	;# 
   455  0002                     	;# 
   456  0003                     	;# 
   457  0004                     	;# 
   458  0005                     	;# 
   459  0006                     	;# 
   460  0007                     	;# 
   461  0008                     	;# 
   462  0009                     	;# 
   463  000A                     	;# 
   464  000B                     	;# 
   465  000C                     	;# 
   466  000D                     	;# 
   467  0011                     	;# 
   468  0012                     	;# 
   469  0013                     	;# 
   470  0014                     	;# 
   471  0015                     	;# 
   472  0016                     	;# 
   473  0016                     	;# 
   474  0017                     	;# 
   475  0018                     	;# 
   476  0019                     	;# 
   477  001A                     	;# 
   478  001B                     	;# 
   479  001C                     	;# 
   480  001E                     	;# 
   481  001F                     	;# 
   482  008C                     	;# 
   483  008D                     	;# 
   484  0091                     	;# 
   485  0092                     	;# 
   486  0093                     	;# 
   487  0094                     	;# 
   488  0095                     	;# 
   489  0096                     	;# 
   490  0097                     	;# 
   491  0098                     	;# 
   492  0099                     	;# 
   493  009A                     	;# 
   494  009B                     	;# 
   495  009B                     	;# 
   496  009C                     	;# 
   497  009D                     	;# 
   498  009E                     	;# 
   499  010C                     	;# 
   500  010D                     	;# 
   501  0111                     	;# 
   502  0112                     	;# 
   503  0113                     	;# 
   504  0114                     	;# 
   505  0115                     	;# 
   506  0116                     	;# 
   507  0117                     	;# 
   508  0118                     	;# 
   509  0119                     	;# 
   510  011A                     	;# 
   511  011B                     	;# 
   512  011D                     	;# 
   513  011E                     	;# 
   514  018C                     	;# 
   515  018D                     	;# 
   516  0191                     	;# 
   517  0191                     	;# 
   518  0192                     	;# 
   519  0193                     	;# 
   520  0193                     	;# 
   521  0193                     	;# 
   522  0194                     	;# 
   523  0195                     	;# 
   524  0196                     	;# 
   525  0199                     	;# 
   526  019A                     	;# 
   527  019B                     	;# 
   528  019B                     	;# 
   529  019B                     	;# 
   530  019B                     	;# 
   531  019C                     	;# 
   532  019C                     	;# 
   533  019D                     	;# 
   534  019E                     	;# 
   535  019F                     	;# 
   536  020C                     	;# 
   537  020D                     	;# 
   538  0211                     	;# 
   539  0211                     	;# 
   540  0212                     	;# 
   541  0212                     	;# 
   542  0213                     	;# 
   543  0213                     	;# 
   544  0214                     	;# 
   545  0214                     	;# 
   546  0215                     	;# 
   547  0215                     	;# 
   548  0215                     	;# 
   549  0216                     	;# 
   550  0216                     	;# 
   551  0217                     	;# 
   552  0217                     	;# 
   553  0219                     	;# 
   554  021A                     	;# 
   555  021B                     	;# 
   556  021C                     	;# 
   557  021D                     	;# 
   558  021E                     	;# 
   559  021F                     	;# 
   560  0291                     	;# 
   561  0291                     	;# 
   562  0292                     	;# 
   563  0293                     	;# 
   564  0294                     	;# 
   565  0295                     	;# 
   566  0295                     	;# 
   567  0296                     	;# 
   568  0298                     	;# 
   569  0298                     	;# 
   570  0299                     	;# 
   571  029A                     	;# 
   572  029B                     	;# 
   573  029C                     	;# 
   574  029C                     	;# 
   575  029D                     	;# 
   576  029E                     	;# 
   577  029E                     	;# 
   578  0311                     	;# 
   579  0311                     	;# 
   580  0312                     	;# 
   581  0313                     	;# 
   582  0318                     	;# 
   583  0318                     	;# 
   584  0319                     	;# 
   585  031A                     	;# 
   586  0394                     	;# 
   587  0395                     	;# 
   588  0396                     	;# 
   589  039A                     	;# 
   590  039C                     	;# 
   591  039D                     	;# 
   592  039E                     	;# 
   593  039F                     	;# 
   594  0415                     	;# 
   595  0416                     	;# 
   596  0417                     	;# 
   597  041C                     	;# 
   598  041D                     	;# 
   599  041E                     	;# 
   600  0FE4                     	;# 
   601  0FE5                     	;# 
   602  0FE6                     	;# 
   603  0FE7                     	;# 
   604  0FE8                     	;# 
   605  0FE9                     	;# 
   606  0FEA                     	;# 
   607  0FEB                     	;# 
   608  0FED                     	;# 
   609  0FEE                     	;# 
   610  0FEF                     	;# 
   611  0000                     	;# 
   612  0001                     	;# 
   613  0002                     	;# 
   614  0003                     	;# 
   615  0004                     	;# 
   616  0005                     	;# 
   617  0006                     	;# 
   618  0007                     	;# 
   619  0008                     	;# 
   620  0009                     	;# 
   621  000A                     	;# 
   622  000B                     	;# 
   623  000C                     	;# 
   624  000D                     	;# 
   625  0011                     	;# 
   626  0012                     	;# 
   627  0013                     	;# 
   628  0014                     	;# 
   629  0015                     	;# 
   630  0016                     	;# 
   631  0016                     	;# 
   632  0017                     	;# 
   633  0018                     	;# 
   634  0019                     	;# 
   635  001A                     	;# 
   636  001B                     	;# 
   637  001C                     	;# 
   638  001E                     	;# 
   639  001F                     	;# 
   640  008C                     	;# 
   641  008D                     	;# 
   642  0091                     	;# 
   643  0092                     	;# 
   644  0093                     	;# 
   645  0094                     	;# 
   646  0095                     	;# 
   647  0096                     	;# 
   648  0097                     	;# 
   649  0098                     	;# 
   650  0099                     	;# 
   651  009A                     	;# 
   652  009B                     	;# 
   653  009B                     	;# 
   654  009C                     	;# 
   655  009D                     	;# 
   656  009E                     	;# 
   657  010C                     	;# 
   658  010D                     	;# 
   659  0111                     	;# 
   660  0112                     	;# 
   661  0113                     	;# 
   662  0114                     	;# 
   663  0115                     	;# 
   664  0116                     	;# 
   665  0117                     	;# 
   666  0118                     	;# 
   667  0119                     	;# 
   668  011A                     	;# 
   669  011B                     	;# 
   670  011D                     	;# 
   671  011E                     	;# 
   672  018C                     	;# 
   673  018D                     	;# 
   674  0191                     	;# 
   675  0191                     	;# 
   676  0192                     	;# 
   677  0193                     	;# 
   678  0193                     	;# 
   679  0193                     	;# 
   680  0194                     	;# 
   681  0195                     	;# 
   682  0196                     	;# 
   683  0199                     	;# 
   684  019A                     	;# 
   685  019B                     	;# 
   686  019B                     	;# 
   687  019B                     	;# 
   688  019B                     	;# 
   689  019C                     	;# 
   690  019C                     	;# 
   691  019D                     	;# 
   692  019E                     	;# 
   693  019F                     	;# 
   694  020C                     	;# 
   695  020D                     	;# 
   696  0211                     	;# 
   697  0211                     	;# 
   698  0212                     	;# 
   699  0212                     	;# 
   700  0213                     	;# 
   701  0213                     	;# 
   702  0214                     	;# 
   703  0214                     	;# 
   704  0215                     	;# 
   705  0215                     	;# 
   706  0215                     	;# 
   707  0216                     	;# 
   708  0216                     	;# 
   709  0217                     	;# 
   710  0217                     	;# 
   711  0219                     	;# 
   712  021A                     	;# 
   713  021B                     	;# 
   714  021C                     	;# 
   715  021D                     	;# 
   716  021E                     	;# 
   717  021F                     	;# 
   718  0291                     	;# 
   719  0291                     	;# 
   720  0292                     	;# 
   721  0293                     	;# 
   722  0294                     	;# 
   723  0295                     	;# 
   724  0295                     	;# 
   725  0296                     	;# 
   726  0298                     	;# 
   727  0298                     	;# 
   728  0299                     	;# 
   729  029A                     	;# 
   730  029B                     	;# 
   731  029C                     	;# 
   732  029C                     	;# 
   733  029D                     	;# 
   734  029E                     	;# 
   735  029E                     	;# 
   736  0311                     	;# 
   737  0311                     	;# 
   738  0312                     	;# 
   739  0313                     	;# 
   740  0318                     	;# 
   741  0318                     	;# 
   742  0319                     	;# 
   743  031A                     	;# 
   744  0394                     	;# 
   745  0395                     	;# 
   746  0396                     	;# 
   747  039A                     	;# 
   748  039C                     	;# 
   749  039D                     	;# 
   750  039E                     	;# 
   751  039F                     	;# 
   752  0415                     	;# 
   753  0416                     	;# 
   754  0417                     	;# 
   755  041C                     	;# 
   756  041D                     	;# 
   757  041E                     	;# 
   758  0FE4                     	;# 
   759  0FE5                     	;# 
   760  0FE6                     	;# 
   761  0FE7                     	;# 
   762  0FE8                     	;# 
   763  0FE9                     	;# 
   764  0FEA                     	;# 
   765  0FEB                     	;# 
   766  0FED                     	;# 
   767  0FEE                     	;# 
   768  0FEF                     	;# 
   769  0000                     	;# 
   770  0001                     	;# 
   771  0002                     	;# 
   772  0003                     	;# 
   773  0004                     	;# 
   774  0005                     	;# 
   775  0006                     	;# 
   776  0007                     	;# 
   777  0008                     	;# 
   778  0009                     	;# 
   779  000A                     	;# 
   780  000B                     	;# 
   781  000C                     	;# 
   782  000D                     	;# 
   783  0011                     	;# 
   784  0012                     	;# 
   785  0013                     	;# 
   786  0014                     	;# 
   787  0015                     	;# 
   788  0016                     	;# 
   789  0016                     	;# 
   790  0017                     	;# 
   791  0018                     	;# 
   792  0019                     	;# 
   793  001A                     	;# 
   794  001B                     	;# 
   795  001C                     	;# 
   796  001E                     	;# 
   797  001F                     	;# 
   798  008C                     	;# 
   799  008D                     	;# 
   800  0091                     	;# 
   801  0092                     	;# 
   802  0093                     	;# 
   803  0094                     	;# 
   804  0095                     	;# 
   805  0096                     	;# 
   806  0097                     	;# 
   807  0098                     	;# 
   808  0099                     	;# 
   809  009A                     	;# 
   810  009B                     	;# 
   811  009B                     	;# 
   812  009C                     	;# 
   813  009D                     	;# 
   814  009E                     	;# 
   815  010C                     	;# 
   816  010D                     	;# 
   817  0111                     	;# 
   818  0112                     	;# 
   819  0113                     	;# 
   820  0114                     	;# 
   821  0115                     	;# 
   822  0116                     	;# 
   823  0117                     	;# 
   824  0118                     	;# 
   825  0119                     	;# 
   826  011A                     	;# 
   827  011B                     	;# 
   828  011D                     	;# 
   829  011E                     	;# 
   830  018C                     	;# 
   831  018D                     	;# 
   832  0191                     	;# 
   833  0191                     	;# 
   834  0192                     	;# 
   835  0193                     	;# 
   836  0193                     	;# 
   837  0193                     	;# 
   838  0194                     	;# 
   839  0195                     	;# 
   840  0196                     	;# 
   841  0199                     	;# 
   842  019A                     	;# 
   843  019B                     	;# 
   844  019B                     	;# 
   845  019B                     	;# 
   846  019B                     	;# 
   847  019C                     	;# 
   848  019C                     	;# 
   849  019D                     	;# 
   850  019E                     	;# 
   851  019F                     	;# 
   852  020C                     	;# 
   853  020D                     	;# 
   854  0211                     	;# 
   855  0211                     	;# 
   856  0212                     	;# 
   857  0212                     	;# 
   858  0213                     	;# 
   859  0213                     	;# 
   860  0214                     	;# 
   861  0214                     	;# 
   862  0215                     	;# 
   863  0215                     	;# 
   864  0215                     	;# 
   865  0216                     	;# 
   866  0216                     	;# 
   867  0217                     	;# 
   868  0217                     	;# 
   869  0219                     	;# 
   870  021A                     	;# 
   871  021B                     	;# 
   872  021C                     	;# 
   873  021D                     	;# 
   874  021E                     	;# 
   875  021F                     	;# 
   876  0291                     	;# 
   877  0291                     	;# 
   878  0292                     	;# 
   879  0293                     	;# 
   880  0294                     	;# 
   881  0295                     	;# 
   882  0295                     	;# 
   883  0296                     	;# 
   884  0298                     	;# 
   885  0298                     	;# 
   886  0299                     	;# 
   887  029A                     	;# 
   888  029B                     	;# 
   889  029C                     	;# 
   890  029C                     	;# 
   891  029D                     	;# 
   892  029E                     	;# 
   893  029E                     	;# 
   894  0311                     	;# 
   895  0311                     	;# 
   896  0312                     	;# 
   897  0313                     	;# 
   898  0318                     	;# 
   899  0318                     	;# 
   900  0319                     	;# 
   901  031A                     	;# 
   902  0394                     	;# 
   903  0395                     	;# 
   904  0396                     	;# 
   905  039A                     	;# 
   906  039C                     	;# 
   907  039D                     	;# 
   908  039E                     	;# 
   909  039F                     	;# 
   910  0415                     	;# 
   911  0416                     	;# 
   912  0417                     	;# 
   913  041C                     	;# 
   914  041D                     	;# 
   915  041E                     	;# 
   916  0FE4                     	;# 
   917  0FE5                     	;# 
   918  0FE6                     	;# 
   919  0FE7                     	;# 
   920  0FE8                     	;# 
   921  0FE9                     	;# 
   922  0FEA                     	;# 
   923  0FEB                     	;# 
   924  0FED                     	;# 
   925  0FEE                     	;# 
   926  0FEF                     	;# 
   927  0000                     	;# 
   928  0001                     	;# 
   929  0002                     	;# 
   930  0003                     	;# 
   931  0004                     	;# 
   932  0005                     	;# 
   933  0006                     	;# 
   934  0007                     	;# 
   935  0008                     	;# 
   936  0009                     	;# 
   937  000A                     	;# 
   938  000B                     	;# 
   939  000C                     	;# 
   940  000D                     	;# 
   941  0011                     	;# 
   942  0012                     	;# 
   943  0013                     	;# 
   944  0014                     	;# 
   945  0015                     	;# 
   946  0016                     	;# 
   947  0016                     	;# 
   948  0017                     	;# 
   949  0018                     	;# 
   950  0019                     	;# 
   951  001A                     	;# 
   952  001B                     	;# 
   953  001C                     	;# 
   954  001E                     	;# 
   955  001F                     	;# 
   956  008C                     	;# 
   957  008D                     	;# 
   958  0091                     	;# 
   959  0092                     	;# 
   960  0093                     	;# 
   961  0094                     	;# 
   962  0095                     	;# 
   963  0096                     	;# 
   964  0097                     	;# 
   965  0098                     	;# 
   966  0099                     	;# 
   967  009A                     	;# 
   968  009B                     	;# 
   969  009B                     	;# 
   970  009C                     	;# 
   971  009D                     	;# 
   972  009E                     	;# 
   973  010C                     	;# 
   974  010D                     	;# 
   975  0111                     	;# 
   976  0112                     	;# 
   977  0113                     	;# 
   978  0114                     	;# 
   979  0115                     	;# 
   980  0116                     	;# 
   981  0117                     	;# 
   982  0118                     	;# 
   983  0119                     	;# 
   984  011A                     	;# 
   985  011B                     	;# 
   986  011D                     	;# 
   987  011E                     	;# 
   988  018C                     	;# 
   989  018D                     	;# 
   990  0191                     	;# 
   991  0191                     	;# 
   992  0192                     	;# 
   993  0193                     	;# 
   994  0193                     	;# 
   995  0193                     	;# 
   996  0194                     	;# 
   997  0195                     	;# 
   998  0196                     	;# 
   999  0199                     	;# 
  1000  019A                     	;# 
  1001  019B                     	;# 
  1002  019B                     	;# 
  1003  019B                     	;# 
  1004  019B                     	;# 
  1005  019C                     	;# 
  1006  019C                     	;# 
  1007  019D                     	;# 
  1008  019E                     	;# 
  1009  019F                     	;# 
  1010  020C                     	;# 
  1011  020D                     	;# 
  1012  0211                     	;# 
  1013  0211                     	;# 
  1014  0212                     	;# 
  1015  0212                     	;# 
  1016  0213                     	;# 
  1017  0213                     	;# 
  1018  0214                     	;# 
  1019  0214                     	;# 
  1020  0215                     	;# 
  1021  0215                     	;# 
  1022  0215                     	;# 
  1023  0216                     	;# 
  1024  0216                     	;# 
  1025  0217                     	;# 
  1026  0217                     	;# 
  1027  0219                     	;# 
  1028  021A                     	;# 
  1029  021B                     	;# 
  1030  021C                     	;# 
  1031  021D                     	;# 
  1032  021E                     	;# 
  1033  021F                     	;# 
  1034  0291                     	;# 
  1035  0291                     	;# 
  1036  0292                     	;# 
  1037  0293                     	;# 
  1038  0294                     	;# 
  1039  0295                     	;# 
  1040  0295                     	;# 
  1041  0296                     	;# 
  1042  0298                     	;# 
  1043  0298                     	;# 
  1044  0299                     	;# 
  1045  029A                     	;# 
  1046  029B                     	;# 
  1047  029C                     	;# 
  1048  029C                     	;# 
  1049  029D                     	;# 
  1050  029E                     	;# 
  1051  029E                     	;# 
  1052  0311                     	;# 
  1053  0311                     	;# 
  1054  0312                     	;# 
  1055  0313                     	;# 
  1056  0318                     	;# 
  1057  0318                     	;# 
  1058  0319                     	;# 
  1059  031A                     	;# 
  1060  0394                     	;# 
  1061  0395                     	;# 
  1062  0396                     	;# 
  1063  039A                     	;# 
  1064  039C                     	;# 
  1065  039D                     	;# 
  1066  039E                     	;# 
  1067  039F                     	;# 
  1068  0415                     	;# 
  1069  0416                     	;# 
  1070  0417                     	;# 
  1071  041C                     	;# 
  1072  041D                     	;# 
  1073  041E                     	;# 
  1074  0FE4                     	;# 
  1075  0FE5                     	;# 
  1076  0FE6                     	;# 
  1077  0FE7                     	;# 
  1078  0FE8                     	;# 
  1079  0FE9                     	;# 
  1080  0FEA                     	;# 
  1081  0FEB                     	;# 
  1082  0FED                     	;# 
  1083  0FEE                     	;# 
  1084  0FEF                     	;# 
  1085  0000                     	;# 
  1086  0001                     	;# 
  1087  0002                     	;# 
  1088  0003                     	;# 
  1089  0004                     	;# 
  1090  0005                     	;# 
  1091  0006                     	;# 
  1092  0007                     	;# 
  1093  0008                     	;# 
  1094  0009                     	;# 
  1095  000A                     	;# 
  1096  000B                     	;# 
  1097  000C                     	;# 
  1098  000D                     	;# 
  1099  0011                     	;# 
  1100  0012                     	;# 
  1101  0013                     	;# 
  1102  0014                     	;# 
  1103  0015                     	;# 
  1104  0016                     	;# 
  1105  0016                     	;# 
  1106  0017                     	;# 
  1107  0018                     	;# 
  1108  0019                     	;# 
  1109  001A                     	;# 
  1110  001B                     	;# 
  1111  001C                     	;# 
  1112  001E                     	;# 
  1113  001F                     	;# 
  1114  008C                     	;# 
  1115  008D                     	;# 
  1116  0091                     	;# 
  1117  0092                     	;# 
  1118  0093                     	;# 
  1119  0094                     	;# 
  1120  0095                     	;# 
  1121  0096                     	;# 
  1122  0097                     	;# 
  1123  0098                     	;# 
  1124  0099                     	;# 
  1125  009A                     	;# 
  1126  009B                     	;# 
  1127  009B                     	;# 
  1128  009C                     	;# 
  1129  009D                     	;# 
  1130  009E                     	;# 
  1131  010C                     	;# 
  1132  010D                     	;# 
  1133  0111                     	;# 
  1134  0112                     	;# 
  1135  0113                     	;# 
  1136  0114                     	;# 
  1137  0115                     	;# 
  1138  0116                     	;# 
  1139  0117                     	;# 
  1140  0118                     	;# 
  1141  0119                     	;# 
  1142  011A                     	;# 
  1143  011B                     	;# 
  1144  011D                     	;# 
  1145  011E                     	;# 
  1146  018C                     	;# 
  1147  018D                     	;# 
  1148  0191                     	;# 
  1149  0191                     	;# 
  1150  0192                     	;# 
  1151  0193                     	;# 
  1152  0193                     	;# 
  1153  0193                     	;# 
  1154  0194                     	;# 
  1155  0195                     	;# 
  1156  0196                     	;# 
  1157  0199                     	;# 
  1158  019A                     	;# 
  1159  019B                     	;# 
  1160  019B                     	;# 
  1161  019B                     	;# 
  1162  019B                     	;# 
  1163  019C                     	;# 
  1164  019C                     	;# 
  1165  019D                     	;# 
  1166  019E                     	;# 
  1167  019F                     	;# 
  1168  020C                     	;# 
  1169  020D                     	;# 
  1170  0211                     	;# 
  1171  0211                     	;# 
  1172  0212                     	;# 
  1173  0212                     	;# 
  1174  0213                     	;# 
  1175  0213                     	;# 
  1176  0214                     	;# 
  1177  0214                     	;# 
  1178  0215                     	;# 
  1179  0215                     	;# 
  1180  0215                     	;# 
  1181  0216                     	;# 
  1182  0216                     	;# 
  1183  0217                     	;# 
  1184  0217                     	;# 
  1185  0219                     	;# 
  1186  021A                     	;# 
  1187  021B                     	;# 
  1188  021C                     	;# 
  1189  021D                     	;# 
  1190  021E                     	;# 
  1191  021F                     	;# 
  1192  0291                     	;# 
  1193  0291                     	;# 
  1194  0292                     	;# 
  1195  0293                     	;# 
  1196  0294                     	;# 
  1197  0295                     	;# 
  1198  0295                     	;# 
  1199  0296                     	;# 
  1200  0298                     	;# 
  1201  0298                     	;# 
  1202  0299                     	;# 
  1203  029A                     	;# 
  1204  029B                     	;# 
  1205  029C                     	;# 
  1206  029C                     	;# 
  1207  029D                     	;# 
  1208  029E                     	;# 
  1209  029E                     	;# 
  1210  0311                     	;# 
  1211  0311                     	;# 
  1212  0312                     	;# 
  1213  0313                     	;# 
  1214  0318                     	;# 
  1215  0318                     	;# 
  1216  0319                     	;# 
  1217  031A                     	;# 
  1218  0394                     	;# 
  1219  0395                     	;# 
  1220  0396                     	;# 
  1221  039A                     	;# 
  1222  039C                     	;# 
  1223  039D                     	;# 
  1224  039E                     	;# 
  1225  039F                     	;# 
  1226  0415                     	;# 
  1227  0416                     	;# 
  1228  0417                     	;# 
  1229  041C                     	;# 
  1230  041D                     	;# 
  1231  041E                     	;# 
  1232  0FE4                     	;# 
  1233  0FE5                     	;# 
  1234  0FE6                     	;# 
  1235  0FE7                     	;# 
  1236  0FE8                     	;# 
  1237  0FE9                     	;# 
  1238  0FEA                     	;# 
  1239  0FEB                     	;# 
  1240  0FED                     	;# 
  1241  0FEE                     	;# 
  1242  0FEF                     	;# 
  1243  0000                     	;# 
  1244  0001                     	;# 
  1245  0002                     	;# 
  1246  0003                     	;# 
  1247  0004                     	;# 
  1248  0005                     	;# 
  1249  0006                     	;# 
  1250  0007                     	;# 
  1251  0008                     	;# 
  1252  0009                     	;# 
  1253  000A                     	;# 
  1254  000B                     	;# 
  1255  000C                     	;# 
  1256  000D                     	;# 
  1257  0011                     	;# 
  1258  0012                     	;# 
  1259  0013                     	;# 
  1260  0014                     	;# 
  1261  0015                     	;# 
  1262  0016                     	;# 
  1263  0016                     	;# 
  1264  0017                     	;# 
  1265  0018                     	;# 
  1266  0019                     	;# 
  1267  001A                     	;# 
  1268  001B                     	;# 
  1269  001C                     	;# 
  1270  001E                     	;# 
  1271  001F                     	;# 
  1272  008C                     	;# 
  1273  008D                     	;# 
  1274  0091                     	;# 
  1275  0092                     	;# 
  1276  0093                     	;# 
  1277  0094                     	;# 
  1278  0095                     	;# 
  1279  0096                     	;# 
  1280  0097                     	;# 
  1281  0098                     	;# 
  1282  0099                     	;# 
  1283  009A                     	;# 
  1284  009B                     	;# 
  1285  009B                     	;# 
  1286  009C                     	;# 
  1287  009D                     	;# 
  1288  009E                     	;# 
  1289  010C                     	;# 
  1290  010D                     	;# 
  1291  0111                     	;# 
  1292  0112                     	;# 
  1293  0113                     	;# 
  1294  0114                     	;# 
  1295  0115                     	;# 
  1296  0116                     	;# 
  1297  0117                     	;# 
  1298  0118                     	;# 
  1299  0119                     	;# 
  1300  011A                     	;# 
  1301  011B                     	;# 
  1302  011D                     	;# 
  1303  011E                     	;# 
  1304  018C                     	;# 
  1305  018D                     	;# 
  1306  0191                     	;# 
  1307  0191                     	;# 
  1308  0192                     	;# 
  1309  0193                     	;# 
  1310  0193                     	;# 
  1311  0193                     	;# 
  1312  0194                     	;# 
  1313  0195                     	;# 
  1314  0196                     	;# 
  1315  0199                     	;# 
  1316  019A                     	;# 
  1317  019B                     	;# 
  1318  019B                     	;# 
  1319  019B                     	;# 
  1320  019B                     	;# 
  1321  019C                     	;# 
  1322  019C                     	;# 
  1323  019D                     	;# 
  1324  019E                     	;# 
  1325  019F                     	;# 
  1326  020C                     	;# 
  1327  020D                     	;# 
  1328  0211                     	;# 
  1329  0211                     	;# 
  1330  0212                     	;# 
  1331  0212                     	;# 
  1332  0213                     	;# 
  1333  0213                     	;# 
  1334  0214                     	;# 
  1335  0214                     	;# 
  1336  0215                     	;# 
  1337  0215                     	;# 
  1338  0215                     	;# 
  1339  0216                     	;# 
  1340  0216                     	;# 
  1341  0217                     	;# 
  1342  0217                     	;# 
  1343  0219                     	;# 
  1344  021A                     	;# 
  1345  021B                     	;# 
  1346  021C                     	;# 
  1347  021D                     	;# 
  1348  021E                     	;# 
  1349  021F                     	;# 
  1350  0291                     	;# 
  1351  0291                     	;# 
  1352  0292                     	;# 
  1353  0293                     	;# 
  1354  0294                     	;# 
  1355  0295                     	;# 
  1356  0295                     	;# 
  1357  0296                     	;# 
  1358  0298                     	;# 
  1359  0298                     	;# 
  1360  0299                     	;# 
  1361  029A                     	;# 
  1362  029B                     	;# 
  1363  029C                     	;# 
  1364  029C                     	;# 
  1365  029D                     	;# 
  1366  029E                     	;# 
  1367  029E                     	;# 
  1368  0311                     	;# 
  1369  0311                     	;# 
  1370  0312                     	;# 
  1371  0313                     	;# 
  1372  0318                     	;# 
  1373  0318                     	;# 
  1374  0319                     	;# 
  1375  031A                     	;# 
  1376  0394                     	;# 
  1377  0395                     	;# 
  1378  0396                     	;# 
  1379  039A                     	;# 
  1380  039C                     	;# 
  1381  039D                     	;# 
  1382  039E                     	;# 
  1383  039F                     	;# 
  1384  0415                     	;# 
  1385  0416                     	;# 
  1386  0417                     	;# 
  1387  041C                     	;# 
  1388  041D                     	;# 
  1389  041E                     	;# 
  1390  0FE4                     	;# 
  1391  0FE5                     	;# 
  1392  0FE6                     	;# 
  1393  0FE7                     	;# 
  1394  0FE8                     	;# 
  1395  0FE9                     	;# 
  1396  0FEA                     	;# 
  1397  0FEB                     	;# 
  1398  0FED                     	;# 
  1399  0FEE                     	;# 
  1400  0FEF                     	;# 
  1401  0000                     	;# 
  1402  0001                     	;# 
  1403  0002                     	;# 
  1404  0003                     	;# 
  1405  0004                     	;# 
  1406  0005                     	;# 
  1407  0006                     	;# 
  1408  0007                     	;# 
  1409  0008                     	;# 
  1410  0009                     	;# 
  1411  000A                     	;# 
  1412  000B                     	;# 
  1413  000C                     	;# 
  1414  000D                     	;# 
  1415  0011                     	;# 
  1416  0012                     	;# 
  1417  0013                     	;# 
  1418  0014                     	;# 
  1419  0015                     	;# 
  1420  0016                     	;# 
  1421  0016                     	;# 
  1422  0017                     	;# 
  1423  0018                     	;# 
  1424  0019                     	;# 
  1425  001A                     	;# 
  1426  001B                     	;# 
  1427  001C                     	;# 
  1428  001E                     	;# 
  1429  001F                     	;# 
  1430  008C                     	;# 
  1431  008D                     	;# 
  1432  0091                     	;# 
  1433  0092                     	;# 
  1434  0093                     	;# 
  1435  0094                     	;# 
  1436  0095                     	;# 
  1437  0096                     	;# 
  1438  0097                     	;# 
  1439  0098                     	;# 
  1440  0099                     	;# 
  1441  009A                     	;# 
  1442  009B                     	;# 
  1443  009B                     	;# 
  1444  009C                     	;# 
  1445  009D                     	;# 
  1446  009E                     	;# 
  1447  010C                     	;# 
  1448  010D                     	;# 
  1449  0111                     	;# 
  1450  0112                     	;# 
  1451  0113                     	;# 
  1452  0114                     	;# 
  1453  0115                     	;# 
  1454  0116                     	;# 
  1455  0117                     	;# 
  1456  0118                     	;# 
  1457  0119                     	;# 
  1458  011A                     	;# 
  1459  011B                     	;# 
  1460  011D                     	;# 
  1461  011E                     	;# 
  1462  018C                     	;# 
  1463  018D                     	;# 
  1464  0191                     	;# 
  1465  0191                     	;# 
  1466  0192                     	;# 
  1467  0193                     	;# 
  1468  0193                     	;# 
  1469  0193                     	;# 
  1470  0194                     	;# 
  1471  0195                     	;# 
  1472  0196                     	;# 
  1473  0199                     	;# 
  1474  019A                     	;# 
  1475  019B                     	;# 
  1476  019B                     	;# 
  1477  019B                     	;# 
  1478  019B                     	;# 
  1479  019C                     	;# 
  1480  019C                     	;# 
  1481  019D                     	;# 
  1482  019E                     	;# 
  1483  019F                     	;# 
  1484  020C                     	;# 
  1485  020D                     	;# 
  1486  0211                     	;# 
  1487  0211                     	;# 
  1488  0212                     	;# 
  1489  0212                     	;# 
  1490  0213                     	;# 
  1491  0213                     	;# 
  1492  0214                     	;# 
  1493  0214                     	;# 
  1494  0215                     	;# 
  1495  0215                     	;# 
  1496  0215                     	;# 
  1497  0216                     	;# 
  1498  0216                     	;# 
  1499  0217                     	;# 
  1500  0217                     	;# 
  1501  0219                     	;# 
  1502  021A                     	;# 
  1503  021B                     	;# 
  1504  021C                     	;# 
  1505  021D                     	;# 
  1506  021E                     	;# 
  1507  021F                     	;# 
  1508  0291                     	;# 
  1509  0291                     	;# 
  1510  0292                     	;# 
  1511  0293                     	;# 
  1512  0294                     	;# 
  1513  0295                     	;# 
  1514  0295                     	;# 
  1515  0296                     	;# 
  1516  0298                     	;# 
  1517  0298                     	;# 
  1518  0299                     	;# 
  1519  029A                     	;# 
  1520  029B                     	;# 
  1521  029C                     	;# 
  1522  029C                     	;# 
  1523  029D                     	;# 
  1524  029E                     	;# 
  1525  029E                     	;# 
  1526  0311                     	;# 
  1527  0311                     	;# 
  1528  0312                     	;# 
  1529  0313                     	;# 
  1530  0318                     	;# 
  1531  0318                     	;# 
  1532  0319                     	;# 
  1533  031A                     	;# 
  1534  0394                     	;# 
  1535  0395                     	;# 
  1536  0396                     	;# 
  1537  039A                     	;# 
  1538  039C                     	;# 
  1539  039D                     	;# 
  1540  039E                     	;# 
  1541  039F                     	;# 
  1542  0415                     	;# 
  1543  0416                     	;# 
  1544  0417                     	;# 
  1545  041C                     	;# 
  1546  041D                     	;# 
  1547  041E                     	;# 
  1548  0FE4                     	;# 
  1549  0FE5                     	;# 
  1550  0FE6                     	;# 
  1551  0FE7                     	;# 
  1552  0FE8                     	;# 
  1553  0FE9                     	;# 
  1554  0FEA                     	;# 
  1555  0FEB                     	;# 
  1556  0FED                     	;# 
  1557  0FEE                     	;# 
  1558  0FEF                     	;# 
  1559  0000                     	;# 
  1560  0001                     	;# 
  1561  0002                     	;# 
  1562  0003                     	;# 
  1563  0004                     	;# 
  1564  0005                     	;# 
  1565  0006                     	;# 
  1566  0007                     	;# 
  1567  0008                     	;# 
  1568  0009                     	;# 
  1569  000A                     	;# 
  1570  000B                     	;# 
  1571  000C                     	;# 
  1572  000D                     	;# 
  1573  0011                     	;# 
  1574  0012                     	;# 
  1575  0013                     	;# 
  1576  0014                     	;# 
  1577  0015                     	;# 
  1578  0016                     	;# 
  1579  0016                     	;# 
  1580  0017                     	;# 
  1581  0018                     	;# 
  1582  0019                     	;# 
  1583  001A                     	;# 
  1584  001B                     	;# 
  1585  001C                     	;# 
  1586  001E                     	;# 
  1587  001F                     	;# 
  1588  008C                     	;# 
  1589  008D                     	;# 
  1590  0091                     	;# 
  1591  0092                     	;# 
  1592  0093                     	;# 
  1593  0094                     	;# 
  1594  0095                     	;# 
  1595  0096                     	;# 
  1596  0097                     	;# 
  1597  0098                     	;# 
  1598  0099                     	;# 
  1599  009A                     	;# 
  1600  009B                     	;# 
  1601  009B                     	;# 
  1602  009C                     	;# 
  1603  009D                     	;# 
  1604  009E                     	;# 
  1605  010C                     	;# 
  1606  010D                     	;# 
  1607  0111                     	;# 
  1608  0112                     	;# 
  1609  0113                     	;# 
  1610  0114                     	;# 
  1611  0115                     	;# 
  1612  0116                     	;# 
  1613  0117                     	;# 
  1614  0118                     	;# 
  1615  0119                     	;# 
  1616  011A                     	;# 
  1617  011B                     	;# 
  1618  011D                     	;# 
  1619  011E                     	;# 
  1620  018C                     	;# 
  1621  018D                     	;# 
  1622  0191                     	;# 
  1623  0191                     	;# 
  1624  0192                     	;# 
  1625  0193                     	;# 
  1626  0193                     	;# 
  1627  0193                     	;# 
  1628  0194                     	;# 
  1629  0195                     	;# 
  1630  0196                     	;# 
  1631  0199                     	;# 
  1632  019A                     	;# 
  1633  019B                     	;# 
  1634  019B                     	;# 
  1635  019B                     	;# 
  1636  019B                     	;# 
  1637  019C                     	;# 
  1638  019C                     	;# 
  1639  019D                     	;# 
  1640  019E                     	;# 
  1641  019F                     	;# 
  1642  020C                     	;# 
  1643  020D                     	;# 
  1644  0211                     	;# 
  1645  0211                     	;# 
  1646  0212                     	;# 
  1647  0212                     	;# 
  1648  0213                     	;# 
  1649  0213                     	;# 
  1650  0214                     	;# 
  1651  0214                     	;# 
  1652  0215                     	;# 
  1653  0215                     	;# 
  1654  0215                     	;# 
  1655  0216                     	;# 
  1656  0216                     	;# 
  1657  0217                     	;# 
  1658  0217                     	;# 
  1659  0219                     	;# 
  1660  021A                     	;# 
  1661  021B                     	;# 
  1662  021C                     	;# 
  1663  021D                     	;# 
  1664  021E                     	;# 
  1665  021F                     	;# 
  1666  0291                     	;# 
  1667  0291                     	;# 
  1668  0292                     	;# 
  1669  0293                     	;# 
  1670  0294                     	;# 
  1671  0295                     	;# 
  1672  0295                     	;# 
  1673  0296                     	;# 
  1674  0298                     	;# 
  1675  0298                     	;# 
  1676  0299                     	;# 
  1677  029A                     	;# 
  1678  029B                     	;# 
  1679  029C                     	;# 
  1680  029C                     	;# 
  1681  029D                     	;# 
  1682  029E                     	;# 
  1683  029E                     	;# 
  1684  0311                     	;# 
  1685  0311                     	;# 
  1686  0312                     	;# 
  1687  0313                     	;# 
  1688  0318                     	;# 
  1689  0318                     	;# 
  1690  0319                     	;# 
  1691  031A                     	;# 
  1692  0394                     	;# 
  1693  0395                     	;# 
  1694  0396                     	;# 
  1695  039A                     	;# 
  1696  039C                     	;# 
  1697  039D                     	;# 
  1698  039E                     	;# 
  1699  039F                     	;# 
  1700  0415                     	;# 
  1701  0416                     	;# 
  1702  0417                     	;# 
  1703  041C                     	;# 
  1704  041D                     	;# 
  1705  041E                     	;# 
  1706  0FE4                     	;# 
  1707  0FE5                     	;# 
  1708  0FE6                     	;# 
  1709  0FE7                     	;# 
  1710  0FE8                     	;# 
  1711  0FE9                     	;# 
  1712  0FEA                     	;# 
  1713  0FEB                     	;# 
  1714  0FED                     	;# 
  1715  0FEE                     	;# 
  1716  0FEF                     	;# 
  1717  0000                     	;# 
  1718  0001                     	;# 
  1719  0002                     	;# 
  1720  0003                     	;# 
  1721  0004                     	;# 
  1722  0005                     	;# 
  1723  0006                     	;# 
  1724  0007                     	;# 
  1725  0008                     	;# 
  1726  0009                     	;# 
  1727  000A                     	;# 
  1728  000B                     	;# 
  1729  000C                     	;# 
  1730  000D                     	;# 
  1731  0011                     	;# 
  1732  0012                     	;# 
  1733  0013                     	;# 
  1734  0014                     	;# 
  1735  0015                     	;# 
  1736  0016                     	;# 
  1737  0016                     	;# 
  1738  0017                     	;# 
  1739  0018                     	;# 
  1740  0019                     	;# 
  1741  001A                     	;# 
  1742  001B                     	;# 
  1743  001C                     	;# 
  1744  001E                     	;# 
  1745  001F                     	;# 
  1746  008C                     	;# 
  1747  008D                     	;# 
  1748  0091                     	;# 
  1749  0092                     	;# 
  1750  0093                     	;# 
  1751  0094                     	;# 
  1752  0095                     	;# 
  1753  0096                     	;# 
  1754  0097                     	;# 
  1755  0098                     	;# 
  1756  0099                     	;# 
  1757  009A                     	;# 
  1758  009B                     	;# 
  1759  009B                     	;# 
  1760  009C                     	;# 
  1761  009D                     	;# 
  1762  009E                     	;# 
  1763  010C                     	;# 
  1764  010D                     	;# 
  1765  0111                     	;# 
  1766  0112                     	;# 
  1767  0113                     	;# 
  1768  0114                     	;# 
  1769  0115                     	;# 
  1770  0116                     	;# 
  1771  0117                     	;# 
  1772  0118                     	;# 
  1773  0119                     	;# 
  1774  011A                     	;# 
  1775  011B                     	;# 
  1776  011D                     	;# 
  1777  011E                     	;# 
  1778  018C                     	;# 
  1779  018D                     	;# 
  1780  0191                     	;# 
  1781  0191                     	;# 
  1782  0192                     	;# 
  1783  0193                     	;# 
  1784  0193                     	;# 
  1785  0193                     	;# 
  1786  0194                     	;# 
  1787  0195                     	;# 
  1788  0196                     	;# 
  1789  0199                     	;# 
  1790  019A                     	;# 
  1791  019B                     	;# 
  1792  019B                     	;# 
  1793  019B                     	;# 
  1794  019B                     	;# 
  1795  019C                     	;# 
  1796  019C                     	;# 
  1797  019D                     	;# 
  1798  019E                     	;# 
  1799  019F                     	;# 
  1800  020C                     	;# 
  1801  020D                     	;# 
  1802  0211                     	;# 
  1803  0211                     	;# 
  1804  0212                     	;# 
  1805  0212                     	;# 
  1806  0213                     	;# 
  1807  0213                     	;# 
  1808  0214                     	;# 
  1809  0214                     	;# 
  1810  0215                     	;# 
  1811  0215                     	;# 
  1812  0215                     	;# 
  1813  0216                     	;# 
  1814  0216                     	;# 
  1815  0217                     	;# 
  1816  0217                     	;# 
  1817  0219                     	;# 
  1818  021A                     	;# 
  1819  021B                     	;# 
  1820  021C                     	;# 
  1821  021D                     	;# 
  1822  021E                     	;# 
  1823  021F                     	;# 
  1824  0291                     	;# 
  1825  0291                     	;# 
  1826  0292                     	;# 
  1827  0293                     	;# 
  1828  0294                     	;# 
  1829  0295                     	;# 
  1830  0295                     	;# 
  1831  0296                     	;# 
  1832  0298                     	;# 
  1833  0298                     	;# 
  1834  0299                     	;# 
  1835  029A                     	;# 
  1836  029B                     	;# 
  1837  029C                     	;# 
  1838  029C                     	;# 
  1839  029D                     	;# 
  1840  029E                     	;# 
  1841  029E                     	;# 
  1842  0311                     	;# 
  1843  0311                     	;# 
  1844  0312                     	;# 
  1845  0313                     	;# 
  1846  0318                     	;# 
  1847  0318                     	;# 
  1848  0319                     	;# 
  1849  031A                     	;# 
  1850  0394                     	;# 
  1851  0395                     	;# 
  1852  0396                     	;# 
  1853  039A                     	;# 
  1854  039C                     	;# 
  1855  039D                     	;# 
  1856  039E                     	;# 
  1857  039F                     	;# 
  1858  0415                     	;# 
  1859  0416                     	;# 
  1860  0417                     	;# 
  1861  041C                     	;# 
  1862  041D                     	;# 
  1863  041E                     	;# 
  1864  0FE4                     	;# 
  1865  0FE5                     	;# 
  1866  0FE6                     	;# 
  1867  0FE7                     	;# 
  1868  0FE8                     	;# 
  1869  0FE9                     	;# 
  1870  0FEA                     	;# 
  1871  0FEB                     	;# 
  1872  0FED                     	;# 
  1873  0FEE                     	;# 
  1874  0FEF                     	;_mtouch_sensor
  1875                           
  1876 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  1877  0000                     
  1878 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  1879  0000                     
  1880 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  1881  0000                     
  1882                           	psect	idataBIGRAM
  1883  02A2                     __pidataBIGRAM:
  1884                           
  1885                           ;initializer for _mtouch_sensor
  1886  02A2  3400               	retlw	0
  1887  02A3  3419               	retlw	low _MTOUCH_CVD_ScanA_0
  1888  02A4  340D               	retlw	high _MTOUCH_CVD_ScanA_0
  1889  02A5  3459               	retlw	low _MTOUCH_CVD_ScanB_0
  1890  02A6  340E               	retlw	high _MTOUCH_CVD_ScanB_0
  1891  02A7  3420               	retlw	32
  1892  02A8  3400               	retlw	0
  1893  02A9  3400               	retlw	0
  1894  02AA  3400               	retlw	0
  1895  02AB  3401               	retlw	1
  1896  02AC  3439               	retlw	low _MTOUCH_CVD_ScanA_1
  1897  02AD  340D               	retlw	high _MTOUCH_CVD_ScanA_1
  1898  02AE  3479               	retlw	low _MTOUCH_CVD_ScanB_1
  1899  02AF  340E               	retlw	high _MTOUCH_CVD_ScanB_1
  1900  02B0  3420               	retlw	32
  1901  02B1  3400               	retlw	0
  1902  02B2  3400               	retlw	0
  1903  02B3  3400               	retlw	0
  1904  02B4  3402               	retlw	2
  1905  02B5  3459               	retlw	low _MTOUCH_CVD_ScanA_2
  1906  02B6  340D               	retlw	high _MTOUCH_CVD_ScanA_2
  1907  02B7  3499               	retlw	low _MTOUCH_CVD_ScanB_2
  1908  02B8  340E               	retlw	high _MTOUCH_CVD_ScanB_2
  1909  02B9  3420               	retlw	32
  1910  02BA  3400               	retlw	0
  1911  02BB  3400               	retlw	0
  1912  02BC  3400               	retlw	0
  1913  02BD  3403               	retlw	3
  1914  02BE  3479               	retlw	low _MTOUCH_CVD_ScanA_3
  1915  02BF  340D               	retlw	high _MTOUCH_CVD_ScanA_3
  1916  02C0  34B9               	retlw	low _MTOUCH_CVD_ScanB_3
  1917  02C1  340E               	retlw	high _MTOUCH_CVD_ScanB_3
  1918  02C2  3420               	retlw	32
  1919  02C3  3400               	retlw	0
  1920  02C4  3400               	retlw	0
  1921  02C5  3400               	retlw	0
  1922  02C6  3404               	retlw	4
  1923  02C7  3499               	retlw	low _MTOUCH_CVD_ScanA_4
  1924  02C8  340D               	retlw	high _MTOUCH_CVD_ScanA_4
  1925  02C9  34D9               	retlw	low _MTOUCH_CVD_ScanB_4
  1926  02CA  340E               	retlw	high _MTOUCH_CVD_ScanB_4
  1927  02CB  3420               	retlw	32
  1928  02CC  3400               	retlw	0
  1929  02CD  3400               	retlw	0
  1930  02CE  3400               	retlw	0
  1931  02CF  3405               	retlw	5
  1932  02D0  34B9               	retlw	low _MTOUCH_CVD_ScanA_5
  1933  02D1  340D               	retlw	high _MTOUCH_CVD_ScanA_5
  1934  02D2  34F9               	retlw	low _MTOUCH_CVD_ScanB_5
  1935  02D3  340E               	retlw	high _MTOUCH_CVD_ScanB_5
  1936  02D4  3420               	retlw	32
  1937  02D5  3400               	retlw	0
  1938  02D6  3400               	retlw	0
  1939  02D7  3400               	retlw	0
  1940  02D8  3406               	retlw	6
  1941  02D9  34D9               	retlw	low _MTOUCH_CVD_ScanA_6
  1942  02DA  340D               	retlw	high _MTOUCH_CVD_ScanA_6
  1943  02DB  3419               	retlw	low _MTOUCH_CVD_ScanB_6
  1944  02DC  340F               	retlw	high _MTOUCH_CVD_ScanB_6
  1945  02DD  3420               	retlw	32
  1946  02DE  3400               	retlw	0
  1947  02DF  3400               	retlw	0
  1948  02E0  3400               	retlw	0
  1949  02E1  3407               	retlw	7
  1950  02E2  34F9               	retlw	low _MTOUCH_CVD_ScanA_7
  1951  02E3  340D               	retlw	high _MTOUCH_CVD_ScanA_7
  1952  02E4  3439               	retlw	low _MTOUCH_CVD_ScanB_7
  1953  02E5  340F               	retlw	high _MTOUCH_CVD_ScanB_7
  1954  02E6  3420               	retlw	32
  1955  02E7  3400               	retlw	0
  1956  02E8  3400               	retlw	0
  1957  02E9  3400               	retlw	0
  1958  02EA  3408               	retlw	8
  1959  02EB  3419               	retlw	low _MTOUCH_CVD_ScanA_8
  1960  02EC  340E               	retlw	high _MTOUCH_CVD_ScanA_8
  1961  02ED  3459               	retlw	low _MTOUCH_CVD_ScanB_8
  1962  02EE  340F               	retlw	high _MTOUCH_CVD_ScanB_8
  1963  02EF  3420               	retlw	32
  1964  02F0  3400               	retlw	0
  1965  02F1  3400               	retlw	0
  1966  02F2  3400               	retlw	0
  1967  02F3  3409               	retlw	9
  1968  02F4  34F9               	retlw	low _MTOUCH_CVD_ScanA_9
  1969  02F5  340C               	retlw	high _MTOUCH_CVD_ScanA_9
  1970  02F6  3439               	retlw	low _MTOUCH_CVD_ScanB_9
  1971  02F7  340E               	retlw	high _MTOUCH_CVD_ScanB_9
  1972  02F8  3420               	retlw	32
  1973  02F9  3400               	retlw	0
  1974  02FA  3400               	retlw	0
  1975  02FB  3400               	retlw	0
  1976                           
  1977                           	psect	idataBANK0
  1978  0C01                     __pidataBANK0:
  1979                           
  1980                           ;initializer for _Button_StateMachine
  1981  0C01  34A5               	retlw	low _Button_State_Initializing
  1982  0C02  3404               	retlw	high _Button_State_Initializing
  1983  0C03  341B               	retlw	low _Button_State_NotPressed
  1984  0C04  3407               	retlw	high _Button_State_NotPressed
  1985  0C05  3487               	retlw	low _Button_State_Pressed
  1986  0C06  3405               	retlw	high _Button_State_Pressed
  1987                           
  1988                           ;initializer for _callback_notPressed
  1989  0C07  3454               	retlw	low _Button_DefaultCallback
  1990  0C08  340B               	retlw	high _Button_DefaultCallback
  1991                           
  1992                           ;initializer for _callback_pressed
  1993  0C09  3454               	retlw	low _Button_DefaultCallback
  1994  0C0A  340B               	retlw	high _Button_DefaultCallback
  1995                           
  1996                           ;initializer for _Sensor_scanB
  1997  0C0B  3459               	retlw	low _MTOUCH_CVD_ScanB_0
  1998  0C0C  340E               	retlw	high _MTOUCH_CVD_ScanB_0
  1999                           
  2000                           ;initializer for _Sensor_scanA
  2001  0C0D  3419               	retlw	low _MTOUCH_CVD_ScanA_0
  2002  0C0E  340D               	retlw	high _MTOUCH_CVD_ScanA_0
  2003                           
  2004                           ;initializer for _callback_sampled
  2005  0C0F  3456               	retlw	low _Sensor_DefaultCallback
  2006  0C10  340B               	retlw	high _Sensor_DefaultCallback
  2007                           
  2008                           	psect	stringtext1
  2009  0800                     __pstringtext1:
  2010  0800                     _mtouch_button_init:
  2011  0800  3400               	retlw	0
  2012  0801  3400               	retlw	0
  2013  0802  3400               	retlw	0
  2014  0803  3400               	retlw	0
  2015  0804  3400               	retlw	0
  2016  0805  3400               	retlw	0
  2017  0806  3400               	retlw	0
  2018  0807  3400               	retlw	0
  2019  0808  3400               	retlw	0
  2020  0809  3400               	retlw	0
  2021  080A  3400               	retlw	0
  2022  080B  3400               	retlw	0
  2023  080C  3400               	retlw	0
  2024  080D  3400               	retlw	0
  2025  080E  3464               	retlw	100
  2026  080F  3404               	retlw	4
  2027  0810  3402               	retlw	2
  2028  0811  3401               	retlw	1
  2029  0812  3401               	retlw	1
  2030  0813  3400               	retlw	0
  2031  0814  3400               	retlw	0
  2032  0815  3400               	retlw	0
  2033  0816  3400               	retlw	0
  2034  0817  3400               	retlw	0
  2035  0818  3400               	retlw	0
  2036  0819  3400               	retlw	0
  2037  081A  3400               	retlw	0
  2038  081B  3400               	retlw	0
  2039  081C  3400               	retlw	0
  2040  081D  3400               	retlw	0
  2041  081E  3400               	retlw	0
  2042  081F  3464               	retlw	100
  2043  0820  3404               	retlw	4
  2044  0821  3402               	retlw	2
  2045  0822  3402               	retlw	2
  2046  0823  3402               	retlw	2
  2047  0824  3400               	retlw	0
  2048  0825  3400               	retlw	0
  2049  0826  3400               	retlw	0
  2050  0827  3400               	retlw	0
  2051  0828  3400               	retlw	0
  2052  0829  3400               	retlw	0
  2053  082A  3400               	retlw	0
  2054  082B  3400               	retlw	0
  2055  082C  3400               	retlw	0
  2056  082D  3400               	retlw	0
  2057  082E  3400               	retlw	0
  2058  082F  3400               	retlw	0
  2059  0830  3464               	retlw	100
  2060  0831  3404               	retlw	4
  2061  0832  3402               	retlw	2
  2062  0833  3403               	retlw	3
  2063  0834  3403               	retlw	3
  2064  0835  3400               	retlw	0
  2065  0836  3400               	retlw	0
  2066  0837  3400               	retlw	0
  2067  0838  3400               	retlw	0
  2068  0839  3400               	retlw	0
  2069  083A  3400               	retlw	0
  2070  083B  3400               	retlw	0
  2071  083C  3400               	retlw	0
  2072  083D  3400               	retlw	0
  2073  083E  3400               	retlw	0
  2074  083F  3400               	retlw	0
  2075  0840  3400               	retlw	0
  2076  0841  3464               	retlw	100
  2077  0842  3404               	retlw	4
  2078  0843  3402               	retlw	2
  2079  0844  3404               	retlw	4
  2080  0845  3404               	retlw	4
  2081  0846  3400               	retlw	0
  2082  0847  3400               	retlw	0
  2083  0848  3400               	retlw	0
  2084  0849  3400               	retlw	0
  2085  084A  3400               	retlw	0
  2086  084B  3400               	retlw	0
  2087  084C  3400               	retlw	0
  2088  084D  3400               	retlw	0
  2089  084E  3400               	retlw	0
  2090  084F  3400               	retlw	0
  2091  0850  3400               	retlw	0
  2092  0851  3400               	retlw	0
  2093  0852  3464               	retlw	100
  2094  0853  3404               	retlw	4
  2095  0854  3402               	retlw	2
  2096  0855  3405               	retlw	5
  2097  0856  3405               	retlw	5
  2098  0857  3400               	retlw	0
  2099  0858  3400               	retlw	0
  2100  0859  3400               	retlw	0
  2101  085A  3400               	retlw	0
  2102  085B  3400               	retlw	0
  2103  085C  3400               	retlw	0
  2104  085D  3400               	retlw	0
  2105  085E  3400               	retlw	0
  2106  085F  3400               	retlw	0
  2107  0860  3400               	retlw	0
  2108  0861  3400               	retlw	0
  2109  0862  3400               	retlw	0
  2110  0863  3464               	retlw	100
  2111  0864  3404               	retlw	4
  2112  0865  3402               	retlw	2
  2113  0866  3406               	retlw	6
  2114  0867  3406               	retlw	6
  2115  0868  3400               	retlw	0
  2116  0869  3400               	retlw	0
  2117  086A  3400               	retlw	0
  2118  086B  3400               	retlw	0
  2119  086C  3400               	retlw	0
  2120  086D  3400               	retlw	0
  2121  086E  3400               	retlw	0
  2122  086F  3400               	retlw	0
  2123  0870  3400               	retlw	0
  2124  0871  3400               	retlw	0
  2125  0872  3400               	retlw	0
  2126  0873  3400               	retlw	0
  2127  0874  3464               	retlw	100
  2128  0875  3404               	retlw	4
  2129  0876  3402               	retlw	2
  2130  0877  3407               	retlw	7
  2131  0878  3407               	retlw	7
  2132  0879  3400               	retlw	0
  2133  087A  3400               	retlw	0
  2134  087B  3400               	retlw	0
  2135  087C  3400               	retlw	0
  2136  087D  3400               	retlw	0
  2137  087E  3400               	retlw	0
  2138  087F  3400               	retlw	0
  2139  0880  3400               	retlw	0
  2140  0881  3400               	retlw	0
  2141  0882  3400               	retlw	0
  2142  0883  3400               	retlw	0
  2143  0884  3400               	retlw	0
  2144  0885  3464               	retlw	100
  2145  0886  3404               	retlw	4
  2146  0887  3402               	retlw	2
  2147  0888  3408               	retlw	8
  2148  0889  3408               	retlw	8
  2149  088A  3400               	retlw	0
  2150  088B  3400               	retlw	0
  2151  088C  3400               	retlw	0
  2152  088D  3400               	retlw	0
  2153  088E  3400               	retlw	0
  2154  088F  3400               	retlw	0
  2155  0890  3400               	retlw	0
  2156  0891  3400               	retlw	0
  2157  0892  3400               	retlw	0
  2158  0893  3400               	retlw	0
  2159  0894  3400               	retlw	0
  2160  0895  3400               	retlw	0
  2161  0896  3464               	retlw	100
  2162  0897  3404               	retlw	4
  2163  0898  3402               	retlw	2
  2164  0899  3409               	retlw	9
  2165  089A  3409               	retlw	9
  2166  089B  3400               	retlw	0
  2167  089C  3400               	retlw	0
  2168  089D  3400               	retlw	0
  2169  089E  3400               	retlw	0
  2170  089F  3400               	retlw	0
  2171  08A0  3400               	retlw	0
  2172  08A1  3400               	retlw	0
  2173  08A2  3400               	retlw	0
  2174  08A3  3400               	retlw	0
  2175  08A4  3400               	retlw	0
  2176  08A5  3400               	retlw	0
  2177  08A6  3400               	retlw	0
  2178  08A7  3432               	retlw	50
  2179  08A8  3404               	retlw	4
  2180  08A9  3402               	retlw	2
  2181  08AA                     __end_of_mtouch_button_init:
  2182  0011                     _PIR1bits	set	17
  2183  000B                     _INTCONbits	set	11
  2184  005F                     _GIE	set	95
  2185  009B                     _ADRES	set	155
  2186  0095                     _OPTION_REGbits	set	149
  2187  008D                     _TRISB	set	141
  2188  008C                     _TRISA	set	140
  2189  0097                     _WDTCON	set	151
  2190  0098                     _OSCTUNE	set	152
  2191  0099                     _OSCCON	set	153
  2192  009D                     _ADCON0bits	set	157
  2193  009E                     _ADCON1	set	158
  2194  009D                     _ADCON0	set	157
  2195  04D6                     _PLLR	set	1238
  2196  010C                     _LATAbits	set	268
  2197  011E                     _APFCON1	set	286
  2198  011D                     _APFCON0	set	285
  2199  010D                     _LATB	set	269
  2200  010C                     _LATA	set	268
  2201  0116                     _BORCON	set	278
  2202  018C                     _ANSELA	set	396
  2203  018D                     _ANSELB	set	397
  2204  019A                     _TXREG	set	410
  2205  0199                     _RCREG	set	409
  2206  019D                     _RCSTAbits	set	413
  2207  019E                     _TXSTAbits	set	414
  2208  019C                     _SPBRGH	set	412
  2209  019B                     _SPBRGL	set	411
  2210  019E                     _TXSTA	set	414
  2211  019D                     _RCSTA	set	413
  2212  019F                     _BAUDCON	set	415
  2213  020C                     _WPUA	set	524
  2214  020D                     _WPUB	set	525
  2215                           
  2216                           	psect	cinit
  2217  07CB                     start_initialization:	
  2218                           ; #config settings
  2219                           
  2220  07CB                     __initialization:	;BIGRAM
  2221                           
  2222                           ; Initialize objects allocated to BIGRAM
  2223  07CB  30A2               	movlw	low __pidataBIGRAM
  2224  07CC  0084               	movwf	4
  2225  07CD  3082               	movlw	(high __pidataBIGRAM)| (0+128)
  2226  07CE  0085               	movwf	5
  2227  07CF  306C               	movlw	low (0+8300)
  2228  07D0  0086               	movwf	6
  2229  07D1  3020               	movlw	high (0+8300)
  2230  07D2  0087               	movwf	7
  2231  07D3  3000               	movlw	0
  2232  07D4  00FF               	movwf	btemp+1
  2233  07D5  305A               	movlw	90
  2234  07D6  318B  23B8  3187   	fcall	init_ram
  2235                           
  2236                           ; Initialize objects allocated to BANK0
  2237  07D9  3001               	movlw	low __pidataBANK0
  2238  07DA  0084               	movwf	4
  2239  07DB  308C               	movlw	(high __pidataBANK0)| (0+128)
  2240  07DC  0085               	movwf	5
  2241  07DD  304C               	movlw	low __pdataBANK0
  2242  07DE  0086               	movwf	6
  2243  07DF  3000               	movlw	high __pdataBANK0
  2244  07E0  0087               	movwf	7
  2245  07E1  3000               	movlw	0
  2246  07E2  00FF               	movwf	btemp+1
  2247  07E3  3010               	movlw	16
  2248  07E4  318B  23B8  3187   	fcall	init_ram
  2249                           
  2250                           ; Clear objects allocated to BIGRAM
  2251  07E7  30C6               	movlw	low (0+8390)
  2252  07E8  0084               	movwf	4
  2253  07E9  3020               	movlw	high (0+8390)
  2254  07EA  0085               	movwf	5
  2255  07EB  30AA               	movlw	170
  2256  07EC  00FE               	movwf	btemp
  2257  07ED  3000               	movlw	0
  2258  07EE  00FF               	movwf	btemp+1
  2259  07EF  318B  23AC  3187   	fcall	clear_ram0
  2260                           
  2261                           ; Clear objects allocated to BANK0
  2262  07F2  3037               	movlw	low __pbssBANK0
  2263  07F3  0084               	movwf	4
  2264  07F4  3000               	movlw	high __pbssBANK0
  2265  07F5  0085               	movwf	5
  2266  07F6  3015               	movlw	21
  2267  07F7  00FE               	movwf	btemp
  2268  07F8  3000               	movlw	0
  2269  07F9  00FF               	movwf	btemp+1
  2270  07FA  318B  23AC  3187   	fcall	clear_ram0
  2271  07FD                     end_of_initialization:	
  2272                           ;End of C runtime variable initialization code
  2273                           
  2274  07FD                     __end_of__initialization:
  2275  07FD  0020               	movlb	0
  2276  07FE  3183  2BCA         	ljmp	_main	;jump to C main() function
  2277                           
  2278                           	psect	bssBANK0
  2279  0037                     __pbssBANK0:
  2280  0037                     _EUSART_ErrorHandler:
  2281  0037                     	ds	2
  2282  0039                     _EUSART_OverrunErrorHandler:
  2283  0039                     	ds	2
  2284  003B                     _EUSART_FramingErrorHandler:
  2285  003B                     	ds	2
  2286  003D                     _packet_sample:
  2287  003D                     	ds	2
  2288  003F                     _led:
  2289  003F                     	ds	2
  2290  0041                     _duty:
  2291  0041                     	ds	2
  2292  0043                     _eusartRxLastError:
  2293  0043                     	ds	1
  2294  0044                     _lowpowerActivated:
  2295  0044                     	ds	1
  2296  0045                     _sample_delay:
  2297  0045                     	ds	1
  2298  0046                     _packet_counter:
  2299  0046                     	ds	1
  2300  0047                     _currentScannSensor:
  2301  0047                     	ds	1
  2302  0048                     _sensor_globalFlags:
  2303  0048                     	ds	1
  2304  0049                     _mtouch_request_init:
  2305  0049                     	ds	1
  2306  004A                     _mtouch_time_toScan:
  2307  004A                     	ds	1
  2308  004B                     MTOUCH_Random@seed:
  2309  004B                     	ds	1
  2310                           
  2311                           	psect	dataBANK0
  2312  004C                     __pdataBANK0:
  2313  004C                     _Button_StateMachine:
  2314  004C                     	ds	6
  2315  0052                     _callback_notPressed:
  2316  0052                     	ds	2
  2317  0054                     _callback_pressed:
  2318  0054                     	ds	2
  2319  0056                     _Sensor_scanB:
  2320  0056                     	ds	2
  2321  0058                     _Sensor_scanA:
  2322  0058                     	ds	2
  2323  005A                     _callback_sampled:
  2324  005A                     	ds	2
  2325                           
  2326                           	psect	inittext
  2327  0BB8                     init_ram:
  2328  0BB8  00FE               	movwf	btemp
  2329  0BB9                     initloop:
  2330  0BB9  0012               	moviw fsr0++
  2331  0BBA  001E               	movwi fsr1++
  2332  0BBB  3001               	movlw	1
  2333  0BBC  02FE               	subwf	btemp,f
  2334  0BBD  3000               	movlw	0
  2335  0BBE  3BFF               	subwfb	btemp+1,f
  2336  0BBF  087F               	movf	btemp+1,w
  2337  0BC0  047E               	iorwf	btemp,w
  2338  0BC1  1D03               	skipz
  2339  0BC2  2BB9               	goto	initloop
  2340  0BC3  3400               	retlw	0
  2341                           
  2342                           	psect	clrtext
  2343  0BAC                     clear_ram0:	
  2344                           ;	Called with FSR0 containing the base address, and
  2345                           ;	btemp/btemp+1 has the size to clear
  2346                           
  2347  0BAC  0064               	clrwdt	;clear the watchdog before getting into this loop
  2348  0BAD                     clrloop0:
  2349  0BAD  0180               	clrf	0	;clear RAM location pointed to by FSR
  2350  0BAE  3101               	addfsr 0,1
  2351  0BAF  3001               	movlw	1
  2352  0BB0  02FE               	subwf	btemp,f
  2353  0BB1  3000               	movlw	0
  2354  0BB2  3BFF               	subwfb	btemp+1,f
  2355  0BB3  087F               	movf	btemp+1,w
  2356  0BB4  047E               	iorwf	btemp,w
  2357  0BB5  1D03               	skipz
  2358  0BB6  2BAD               	goto	clrloop0	;have we reached the end yet?
  2359  0BB7  3400               	retlw	0	;all done for this memory range, return
  2360                           
  2361                           	psect	cstackCOMMON
  2362  0070                     __pcstackCOMMON:
  2363  0070                     ?_MTOUCH_Service_Mainloop:
  2364  0070                     ?_MTOUCH_Button_isPressed:	
  2365                           ; 1 bytes @ 0x0
  2366                           
  2367  0070                     ?_MTOUCH_Sensor_InitializeAll:	
  2368                           ; 1 bytes @ 0x0
  2369                           
  2370  0070                     ?_MTOUCH_Button_InitializeAll:	
  2371                           ; 1 bytes @ 0x0
  2372                           
  2373  0070                     ?_MTOUCH_Sensor_Sampled_ResetAll:	
  2374                           ; 1 bytes @ 0x0
  2375                           
  2376  0070                     ?_MTOUCH_Sensor_Scan_Initialize:	
  2377                           ; 1 bytes @ 0x0
  2378                           
  2379  0070                     ??_MTOUCH_Sensor_Scan_Initialize:	
  2380                           ; 1 bytes @ 0x0
  2381                           
  2382  0070                     ?_MTOUCH_Sensor_SampleAll:	
  2383                           ; 1 bytes @ 0x0
  2384                           
  2385  0070                     ?_MTOUCH_Button_ServiceAll:	
  2386                           ; 1 bytes @ 0x0
  2387                           
  2388  0070                     ?_MTOUCH_needReburst:	
  2389                           ; 1 bytes @ 0x0
  2390                           
  2391  0070                     ??_MTOUCH_needReburst:	
  2392                           ; 1 bytes @ 0x0
  2393                           
  2394  0070                     ?_MTOUCH_Tick:	
  2395                           ; 1 bytes @ 0x0
  2396                           
  2397  0070                     ?_MTOUCH_Button_Tick:	
  2398                           ; 1 bytes @ 0x0
  2399                           
  2400  0070                     ?_Sensor_DefaultCallback:	
  2401                           ; 1 bytes @ 0x0
  2402                           
  2403  0070                     ?_MTOUCH_Sensor_Enable:	
  2404                           ; 1 bytes @ 0x0
  2405                           
  2406  0070                     ?_Sensor_Service:	
  2407                           ; 1 bytes @ 0x0
  2408                           
  2409  0070                     ?_Sensor_isEnabled:	
  2410                           ; 1 bytes @ 0x0
  2411                           
  2412  0070                     ?_Sensor_RawSample_Update:	
  2413                           ; 1 bytes @ 0x0
  2414                           
  2415  0070                     ?_Sensor_setSampled:	
  2416                           ; 1 bytes @ 0x0
  2417                           
  2418  0070                     ?_Sensor_setActive:	
  2419                           ; 1 bytes @ 0x0
  2420                           
  2421  0070                     ?_Sensor_setInactive:	
  2422                           ; 1 bytes @ 0x0
  2423                           
  2424  0070                     ?_Sensor_setScanFunction:	
  2425                           ; 1 bytes @ 0x0
  2426                           
  2427  0070                     ?_Sensor_Acq_ExecuteScan:	
  2428                           ; 1 bytes @ 0x0
  2429                           
  2430  0070                     ?_MTOUCH_Delay:	
  2431                           ; 1 bytes @ 0x0
  2432                           
  2433  0070                     ??_MTOUCH_Delay:	
  2434                           ; 1 bytes @ 0x0
  2435                           
  2436  0070                     ?_Button_DefaultCallback:	
  2437                           ; 1 bytes @ 0x0
  2438                           
  2439  0070                     ?_Button_Service:	
  2440                           ; 1 bytes @ 0x0
  2441                           
  2442  0070                     ?_Button_Deviation_Update:	
  2443                           ; 1 bytes @ 0x0
  2444                           
  2445  0070                     ?_Button_Baseline_Update:	
  2446                           ; 1 bytes @ 0x0
  2447                           
  2448  0070                     ?_EUSART_SetFramingErrorHandler:	
  2449                           ; 1 bytes @ 0x0
  2450                           
  2451  0070                     ?_EUSART_SetOverrunErrorHandler:	
  2452                           ; 1 bytes @ 0x0
  2453                           
  2454  0070                     ?_EUSART_SetErrorHandler:	
  2455                           ; 1 bytes @ 0x0
  2456                           
  2457  0070                     ?_PIN_MANAGER_Initialize:	
  2458                           ; 1 bytes @ 0x0
  2459                           
  2460  0070                     ??_PIN_MANAGER_Initialize:	
  2461                           ; 1 bytes @ 0x0
  2462                           
  2463  0070                     ?_OSCILLATOR_Initialize:	
  2464                           ; 1 bytes @ 0x0
  2465                           
  2466  0070                     ??_OSCILLATOR_Initialize:	
  2467                           ; 1 bytes @ 0x0
  2468                           
  2469  0070                     ?_WDT_Initialize:	
  2470                           ; 1 bytes @ 0x0
  2471                           
  2472  0070                     ??_WDT_Initialize:	
  2473                           ; 1 bytes @ 0x0
  2474                           
  2475  0070                     ?_MTOUCH_Random:	
  2476                           ; 1 bytes @ 0x0
  2477                           
  2478  0070                     ??_MTOUCH_Random:	
  2479                           ; 1 bytes @ 0x0
  2480                           
  2481  0070                     ?_MTOUCH_Initialize:	
  2482                           ; 1 bytes @ 0x0
  2483                           
  2484  0070                     ?_MTOUCH_CVD_ScanA_0:	
  2485                           ; 1 bytes @ 0x0
  2486                           
  2487  0070                     ??_MTOUCH_CVD_ScanA_0:	
  2488                           ; 1 bytes @ 0x0
  2489                           
  2490  0070                     ?_MTOUCH_CVD_ScanB_0:	
  2491                           ; 1 bytes @ 0x0
  2492                           
  2493  0070                     ??_MTOUCH_CVD_ScanB_0:	
  2494                           ; 1 bytes @ 0x0
  2495                           
  2496  0070                     ?_MTOUCH_CVD_ScanA_1:	
  2497                           ; 1 bytes @ 0x0
  2498                           
  2499  0070                     ??_MTOUCH_CVD_ScanA_1:	
  2500                           ; 1 bytes @ 0x0
  2501                           
  2502  0070                     ?_MTOUCH_CVD_ScanB_1:	
  2503                           ; 1 bytes @ 0x0
  2504                           
  2505  0070                     ??_MTOUCH_CVD_ScanB_1:	
  2506                           ; 1 bytes @ 0x0
  2507                           
  2508  0070                     ?_MTOUCH_CVD_ScanA_2:	
  2509                           ; 1 bytes @ 0x0
  2510                           
  2511  0070                     ??_MTOUCH_CVD_ScanA_2:	
  2512                           ; 1 bytes @ 0x0
  2513                           
  2514  0070                     ?_MTOUCH_CVD_ScanB_2:	
  2515                           ; 1 bytes @ 0x0
  2516                           
  2517  0070                     ??_MTOUCH_CVD_ScanB_2:	
  2518                           ; 1 bytes @ 0x0
  2519                           
  2520  0070                     ?_MTOUCH_CVD_ScanA_3:	
  2521                           ; 1 bytes @ 0x0
  2522                           
  2523  0070                     ??_MTOUCH_CVD_ScanA_3:	
  2524                           ; 1 bytes @ 0x0
  2525                           
  2526  0070                     ?_MTOUCH_CVD_ScanB_3:	
  2527                           ; 1 bytes @ 0x0
  2528                           
  2529  0070                     ??_MTOUCH_CVD_ScanB_3:	
  2530                           ; 1 bytes @ 0x0
  2531                           
  2532  0070                     ?_MTOUCH_CVD_ScanA_4:	
  2533                           ; 1 bytes @ 0x0
  2534                           
  2535  0070                     ??_MTOUCH_CVD_ScanA_4:	
  2536                           ; 1 bytes @ 0x0
  2537                           
  2538  0070                     ?_MTOUCH_CVD_ScanB_4:	
  2539                           ; 1 bytes @ 0x0
  2540                           
  2541  0070                     ??_MTOUCH_CVD_ScanB_4:	
  2542                           ; 1 bytes @ 0x0
  2543                           
  2544  0070                     ?_MTOUCH_CVD_ScanA_5:	
  2545                           ; 1 bytes @ 0x0
  2546                           
  2547  0070                     ??_MTOUCH_CVD_ScanA_5:	
  2548                           ; 1 bytes @ 0x0
  2549                           
  2550  0070                     ?_MTOUCH_CVD_ScanB_5:	
  2551                           ; 1 bytes @ 0x0
  2552                           
  2553  0070                     ??_MTOUCH_CVD_ScanB_5:	
  2554                           ; 1 bytes @ 0x0
  2555                           
  2556  0070                     ?_MTOUCH_CVD_ScanA_6:	
  2557                           ; 1 bytes @ 0x0
  2558                           
  2559  0070                     ??_MTOUCH_CVD_ScanA_6:	
  2560                           ; 1 bytes @ 0x0
  2561                           
  2562  0070                     ?_MTOUCH_CVD_ScanB_6:	
  2563                           ; 1 bytes @ 0x0
  2564                           
  2565  0070                     ??_MTOUCH_CVD_ScanB_6:	
  2566                           ; 1 bytes @ 0x0
  2567                           
  2568  0070                     ?_MTOUCH_CVD_ScanA_7:	
  2569                           ; 1 bytes @ 0x0
  2570                           
  2571  0070                     ??_MTOUCH_CVD_ScanA_7:	
  2572                           ; 1 bytes @ 0x0
  2573                           
  2574  0070                     ?_MTOUCH_CVD_ScanB_7:	
  2575                           ; 1 bytes @ 0x0
  2576                           
  2577  0070                     ??_MTOUCH_CVD_ScanB_7:	
  2578                           ; 1 bytes @ 0x0
  2579                           
  2580  0070                     ?_MTOUCH_CVD_ScanA_8:	
  2581                           ; 1 bytes @ 0x0
  2582                           
  2583  0070                     ??_MTOUCH_CVD_ScanA_8:	
  2584                           ; 1 bytes @ 0x0
  2585                           
  2586  0070                     ?_MTOUCH_CVD_ScanB_8:	
  2587                           ; 1 bytes @ 0x0
  2588                           
  2589  0070                     ??_MTOUCH_CVD_ScanB_8:	
  2590                           ; 1 bytes @ 0x0
  2591                           
  2592  0070                     ?_MTOUCH_CVD_ScanA_9:	
  2593                           ; 1 bytes @ 0x0
  2594                           
  2595  0070                     ??_MTOUCH_CVD_ScanA_9:	
  2596                           ; 1 bytes @ 0x0
  2597                           
  2598  0070                     ?_MTOUCH_CVD_ScanB_9:	
  2599                           ; 1 bytes @ 0x0
  2600                           
  2601  0070                     ??_MTOUCH_CVD_ScanB_9:	
  2602                           ; 1 bytes @ 0x0
  2603                           
  2604  0070                     ?_MTOUCH_Sensor_Initialize:	
  2605                           ; 1 bytes @ 0x0
  2606                           
  2607  0070                     ?_MTOUCH_Sensor_isCalibrated:	
  2608                           ; 1 bytes @ 0x0
  2609                           
  2610  0070                     ??_MTOUCH_Sensor_isCalibrated:	
  2611                           ; 1 bytes @ 0x0
  2612                           
  2613  0070                     ?_MTOUCH_Sensor_Calibrate:	
  2614                           ; 1 bytes @ 0x0
  2615                           
  2616  0070                     ??_MTOUCH_Sensor_Calibrate:	
  2617                           ; 1 bytes @ 0x0
  2618                           
  2619  0070                     ?_MTOUCH_Sensor_wasSampled:	
  2620                           ; 1 bytes @ 0x0
  2621                           
  2622  0070                     ?_MTOUCH_Button_Initialize:	
  2623                           ; 1 bytes @ 0x0
  2624                           
  2625  0070                     ?_EUSART_Initialize:	
  2626                           ; 1 bytes @ 0x0
  2627                           
  2628  0070                     ?_EUSART_is_tx_ready:	
  2629                           ; 1 bytes @ 0x0
  2630                           
  2631  0070                     ??_EUSART_is_tx_ready:	
  2632                           ; 1 bytes @ 0x0
  2633                           
  2634  0070                     ?_EUSART_Write:	
  2635                           ; 1 bytes @ 0x0
  2636                           
  2637  0070                     ??_EUSART_Write:	
  2638                           ; 1 bytes @ 0x0
  2639                           
  2640  0070                     ?_SYSTEM_Initialize:	
  2641                           ; 1 bytes @ 0x0
  2642                           
  2643  0070                     ?_DELAY_microseconds:	
  2644                           ; 1 bytes @ 0x0
  2645                           
  2646  0070                     ?_main:	
  2647                           ; 1 bytes @ 0x0
  2648                           
  2649  0070                     ?_abs:	
  2650                           ; 1 bytes @ 0x0
  2651                           
  2652  0070                     ?_memcpy:	
  2653                           ; 2 bytes @ 0x0
  2654                           
  2655  0070                     ?___wmul:	
  2656                           ; 2 bytes @ 0x0
  2657                           
  2658  0070                     Sensor_DefaultCallback@sensor:	
  2659                           ; 2 bytes @ 0x0
  2660                           
  2661  0070                     MTOUCH_Sensor_isCalibrated@sensor:	
  2662                           ; 1 bytes @ 0x0
  2663                           
  2664  0070                     MTOUCH_Sensor_Calibrate@sensor:	
  2665                           ; 1 bytes @ 0x0
  2666                           
  2667  0070                     Button_DefaultCallback@button:	
  2668                           ; 1 bytes @ 0x0
  2669                           
  2670  0070                     _EUSART_is_tx_ready$1029:	
  2671                           ; 1 bytes @ 0x0
  2672                           
  2673  0070                     EUSART_Write@txData:	
  2674                           ; 1 bytes @ 0x0
  2675                           
  2676  0070                     Sensor_RawSample_Update@sensor:	
  2677                           ; 1 bytes @ 0x0
  2678                           
  2679  0070                     Sensor_setScanFunction@sensor:	
  2680                           ; 2 bytes @ 0x0
  2681                           
  2682  0070                     Sensor_isEnabled@sensor:	
  2683                           ; 2 bytes @ 0x0
  2684                           
  2685  0070                     Sensor_setActive@sensor:	
  2686                           ; 2 bytes @ 0x0
  2687                           
  2688  0070                     Sensor_setInactive@sensor:	
  2689                           ; 2 bytes @ 0x0
  2690                           
  2691  0070                     Sensor_setSampled@sensor:	
  2692                           ; 2 bytes @ 0x0
  2693                           
  2694  0070                     Button_Deviation_Update@button:	
  2695                           ; 2 bytes @ 0x0
  2696                           
  2697  0070                     Button_Baseline_Update@button:	
  2698                           ; 2 bytes @ 0x0
  2699                           
  2700  0070                     EUSART_SetFramingErrorHandler@interruptHandler:	
  2701                           ; 2 bytes @ 0x0
  2702                           
  2703  0070                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  2704                           ; 2 bytes @ 0x0
  2705                           
  2706  0070                     EUSART_SetErrorHandler@interruptHandler:	
  2707                           ; 2 bytes @ 0x0
  2708                           
  2709  0070                     DELAY_microseconds@microseconds:	
  2710                           ; 2 bytes @ 0x0
  2711                           
  2712  0070                     ___wmul@multiplier:	
  2713                           ; 2 bytes @ 0x0
  2714                           
  2715  0070                     abs@a:	
  2716                           ; 2 bytes @ 0x0
  2717                           
  2718  0070                     memcpy@d1:	
  2719                           ; 2 bytes @ 0x0
  2720                           
  2721                           
  2722                           ; 2 bytes @ 0x0
  2723  0070                     	ds	1
  2724  0071                     ??_Sensor_DefaultCallback:
  2725  0071                     ??_Button_DefaultCallback:	
  2726                           ; 1 bytes @ 0x1
  2727                           
  2728  0071                     MTOUCH_Delay@i:	
  2729                           ; 1 bytes @ 0x1
  2730                           
  2731                           
  2732                           ; 1 bytes @ 0x1
  2733  0071                     	ds	1
  2734  0072                     ??_Sensor_isEnabled:
  2735  0072                     ??_Sensor_RawSample_Update:	
  2736                           ; 1 bytes @ 0x2
  2737                           
  2738  0072                     ??_Sensor_setSampled:	
  2739                           ; 1 bytes @ 0x2
  2740                           
  2741  0072                     ??_abs:	
  2742                           ; 1 bytes @ 0x2
  2743                           
  2744  0072                     ??_Sensor_setActive:	
  2745                           ; 1 bytes @ 0x2
  2746                           
  2747  0072                     ??_Sensor_setInactive:	
  2748                           ; 1 bytes @ 0x2
  2749                           
  2750  0072                     ??_Sensor_setScanFunction:	
  2751                           ; 1 bytes @ 0x2
  2752                           
  2753  0072                     ??_Button_Deviation_Update:	
  2754                           ; 1 bytes @ 0x2
  2755                           
  2756  0072                     ??_Button_Baseline_Update:	
  2757                           ; 1 bytes @ 0x2
  2758                           
  2759  0072                     ??_EUSART_SetFramingErrorHandler:	
  2760                           ; 1 bytes @ 0x2
  2761                           
  2762  0072                     ??_EUSART_SetOverrunErrorHandler:	
  2763                           ; 1 bytes @ 0x2
  2764                           
  2765  0072                     ??_EUSART_SetErrorHandler:	
  2766                           ; 1 bytes @ 0x2
  2767                           
  2768  0072                     ??_EUSART_Initialize:	
  2769                           ; 1 bytes @ 0x2
  2770                           
  2771  0072                     ??_DELAY_microseconds:	
  2772                           ; 1 bytes @ 0x2
  2773                           
  2774  0072                     ___wmul@multiplicand:	
  2775                           ; 1 bytes @ 0x2
  2776                           
  2777  0072                     memcpy@s1:	
  2778                           ; 2 bytes @ 0x2
  2779                           
  2780                           
  2781                           ; 2 bytes @ 0x2
  2782  0072                     	ds	2
  2783  0074                     ??___wmul:
  2784  0074                     ___wmul@product:	
  2785                           ; 1 bytes @ 0x4
  2786                           
  2787  0074                     memcpy@n:	
  2788                           ; 2 bytes @ 0x4
  2789                           
  2790                           
  2791                           ; 2 bytes @ 0x4
  2792  0074                     	ds	2
  2793  0076                     ??_MTOUCH_Button_isPressed:
  2794  0076                     ??_MTOUCH_Sensor_Enable:	
  2795                           ; 1 bytes @ 0x6
  2796                           
  2797  0076                     ?_Sensor_Sampled_Reset:	
  2798                           ; 1 bytes @ 0x6
  2799                           
  2800  0076                     ??_Sensor_Acq_ExecuteScan:	
  2801                           ; 1 bytes @ 0x6
  2802                           
  2803  0076                     ??_memcpy:	
  2804                           ; 1 bytes @ 0x6
  2805                           
  2806  0076                     ?_Button_Tick_helper:	
  2807                           ; 1 bytes @ 0x6
  2808                           
  2809  0076                     ??_MTOUCH_Sensor_wasSampled:	
  2810                           ; 1 bytes @ 0x6
  2811                           
  2812  0076                     ??_MTOUCH_Button_Initialize:	
  2813                           ; 1 bytes @ 0x6
  2814                           
  2815  0076                     ?_MTOUCH_Sensor_RawSample_Get:	
  2816                           ; 1 bytes @ 0x6
  2817                           
  2818  0076                     Sensor_Sampled_Reset@sensor:	
  2819                           ; 2 bytes @ 0x6
  2820                           
  2821  0076                     Button_Tick_helper@button:	
  2822                           ; 2 bytes @ 0x6
  2823                           
  2824                           
  2825                           ; 2 bytes @ 0x6
  2826  0076                     	ds	1
  2827  0077                     memcpy@d:
  2828                           
  2829                           ; 2 bytes @ 0x7
  2830  0077                     	ds	1
  2831  0078                     ??_MTOUCH_Sensor_Sampled_ResetAll:
  2832  0078                     ??_Sensor_Sampled_Reset:	
  2833                           ; 1 bytes @ 0x8
  2834                           
  2835  0078                     ??_Button_Tick_helper:	
  2836                           ; 1 bytes @ 0x8
  2837                           
  2838  0078                     ??_MTOUCH_Sensor_RawSample_Get:	
  2839                           ; 1 bytes @ 0x8
  2840                           
  2841                           
  2842                           ; 1 bytes @ 0x8
  2843  0078                     	ds	1
  2844  0079                     memcpy@s:
  2845                           
  2846                           ; 2 bytes @ 0x9
  2847  0079                     	ds	1
  2848  007A                     ??_MTOUCH_Button_Tick:
  2849  007A                     MTOUCH_Sensor_Enable@sensor:	
  2850                           ; 1 bytes @ 0xA
  2851                           
  2852  007A                     MTOUCH_Sensor_wasSampled@sensor:	
  2853                           ; 1 bytes @ 0xA
  2854                           
  2855  007A                     MTOUCH_Button_Initialize@name:	
  2856                           ; 1 bytes @ 0xA
  2857                           
  2858  007A                     MTOUCH_Button_isPressed@name:	
  2859                           ; 1 bytes @ 0xA
  2860                           
  2861  007A                     Sensor_Acq_ExecuteScan@result:	
  2862                           ; 1 bytes @ 0xA
  2863                           
  2864  007A                     MTOUCH_Sensor_Sampled_ResetAll@sensor:	
  2865                           ; 2 bytes @ 0xA
  2866                           
  2867                           
  2868                           ; 2 bytes @ 0xA
  2869  007A                     	ds	1
  2870  007B                     MTOUCH_Sensor_Initialize@sensor:
  2871  007B                     memcpy@tmp:	
  2872                           ; 1 bytes @ 0xB
  2873                           
  2874  007B                     MTOUCH_Button_Initialize@button:	
  2875                           ; 1 bytes @ 0xB
  2876                           
  2877                           
  2878                           ; 2 bytes @ 0xB
  2879  007B                     	ds	1
  2880  007C                     ??_MTOUCH_Sensor_InitializeAll:
  2881  007C                     ?_Sensor_Acq_ExecutePacket:	
  2882                           ; 1 bytes @ 0xC
  2883                           
  2884  007C                     MTOUCH_Sensor_RawSample_Get@name:	
  2885                           ; 1 bytes @ 0xC
  2886                           
  2887  007C                     Sensor_Acq_ExecutePacket@sensor:	
  2888                           ; 1 bytes @ 0xC
  2889                           
  2890                           
  2891                           ; 2 bytes @ 0xC
  2892  007C                     	ds	1
  2893  007D                     ??_MTOUCH_Button_InitializeAll:
  2894  007D                     ??_MTOUCH_Button_ServiceAll:	
  2895                           ; 1 bytes @ 0xD
  2896                           
  2897  007D                     ??_Button_Reading_Update:	
  2898                           ; 1 bytes @ 0xD
  2899                           
  2900  007D                     MTOUCH_Sensor_InitializeAll@sensor:	
  2901                           ; 1 bytes @ 0xD
  2902                           
  2903                           
  2904                           ; 1 bytes @ 0xD
  2905  007D                     	ds	1
  2906  007E                     ??_MTOUCH_Tick:
  2907  007E                     ??_MTOUCH_Initialize:	
  2908                           ; 1 bytes @ 0xE
  2909                           
  2910  007E                     ??_SYSTEM_Initialize:	
  2911                           ; 1 bytes @ 0xE
  2912                           
  2913                           
  2914                           	psect	cstackBANK0
  2915  0020                     __pcstackBANK0:	
  2916                           ; 1 bytes @ 0xE
  2917                           
  2918  0020                     ??_Sensor_Acq_ExecutePacket:
  2919  0020                     ?_Button_Baseline_Initialize:	
  2920                           ; 1 bytes @ 0x0
  2921                           
  2922  0020                     ?_Button_Reading_Update_Helper:	
  2923                           ; 1 bytes @ 0x0
  2924                           
  2925  0020                     ??_MTOUCH_Sensor_Initialize:	
  2926                           ; 1 bytes @ 0x0
  2927                           
  2928  0020                     MTOUCH_Button_InitializeAll@button:	
  2929                           ; 1 bytes @ 0x0
  2930                           
  2931  0020                     MTOUCH_Button_Tick@i:	
  2932                           ; 1 bytes @ 0x0
  2933                           
  2934  0020                     Button_Reading_Update_Helper@button:	
  2935                           ; 1 bytes @ 0x0
  2936                           
  2937  0020                     Button_Baseline_Initialize@button:	
  2938                           ; 2 bytes @ 0x0
  2939                           
  2940  0020                     Button_Deviation_Update@deviation:	
  2941                           ; 2 bytes @ 0x0
  2942                           
  2943                           
  2944                           ; 4 bytes @ 0x0
  2945  0020                     	ds	1
  2946  0021                     Sensor_Acq_ExecutePacket@ADCON0_temp:
  2947                           
  2948                           ; 1 bytes @ 0x1
  2949  0021                     	ds	1
  2950  0022                     ??_Button_Baseline_Initialize:
  2951  0022                     ??_Button_Reading_Update_Helper:	
  2952                           ; 1 bytes @ 0x2
  2953                           
  2954  0022                     Sensor_Acq_ExecutePacket@ADCON1_temp:	
  2955                           ; 1 bytes @ 0x2
  2956                           
  2957                           
  2958                           ; 1 bytes @ 0x2
  2959  0022                     	ds	1
  2960  0023                     Sensor_Acq_ExecutePacket@GIE_state:
  2961                           
  2962                           ; 1 bytes @ 0x3
  2963  0023                     	ds	1
  2964  0024                     ?_Button_Reading_Update:
  2965  0024                     Sensor_Acq_ExecutePacket@error:	
  2966                           ; 1 bytes @ 0x4
  2967                           
  2968  0024                     Button_Reading_Update@button:	
  2969                           ; 1 bytes @ 0x4
  2970                           
  2971                           
  2972                           ; 2 bytes @ 0x4
  2973  0024                     	ds	1
  2974  0025                     ?_Sensor_Acquisition:
  2975  0025                     Sensor_Acquisition@sensor:	
  2976                           ; 1 bytes @ 0x5
  2977                           
  2978                           
  2979                           ; 2 bytes @ 0x5
  2980  0025                     	ds	1
  2981  0026                     ?_Button_State_Initializing:
  2982  0026                     ?_Button_State_NotPressed:	
  2983                           ; 1 bytes @ 0x6
  2984                           
  2985  0026                     ?_Button_State_Pressed:	
  2986                           ; 1 bytes @ 0x6
  2987                           
  2988  0026                     Button_State_Initializing@button:	
  2989                           ; 1 bytes @ 0x6
  2990                           
  2991  0026                     Button_State_NotPressed@button:	
  2992                           ; 2 bytes @ 0x6
  2993                           
  2994  0026                     Button_State_Pressed@button:	
  2995                           ; 2 bytes @ 0x6
  2996                           
  2997                           
  2998                           ; 2 bytes @ 0x6
  2999  0026                     	ds	1
  3000  0027                     ??_Sensor_Acquisition:
  3001                           
  3002                           ; 1 bytes @ 0x7
  3003  0027                     	ds	1
  3004  0028                     ??_Button_State_Initializing:
  3005  0028                     ??_Button_State_NotPressed:	
  3006                           ; 1 bytes @ 0x8
  3007                           
  3008  0028                     ??_Button_State_Pressed:	
  3009                           ; 1 bytes @ 0x8
  3010                           
  3011  0028                     Sensor_Acquisition@retry:	
  3012                           ; 1 bytes @ 0x8
  3013                           
  3014                           
  3015                           ; 1 bytes @ 0x8
  3016  0028                     	ds	1
  3017  0029                     ??_Sensor_Service:
  3018                           
  3019                           ; 1 bytes @ 0x9
  3020  0029                     	ds	3
  3021  002C                     ??_Button_Service:
  3022                           
  3023                           ; 1 bytes @ 0xC
  3024  002C                     	ds	1
  3025  002D                     Sensor_Service@name:
  3026                           
  3027                           ; 1 bytes @ 0xD
  3028  002D                     	ds	1
  3029  002E                     Sensor_Service@error:
  3030                           
  3031                           ; 1 bytes @ 0xE
  3032  002E                     	ds	1
  3033  002F                     Sensor_Service@sensor:
  3034                           
  3035                           ; 2 bytes @ 0xF
  3036  002F                     	ds	1
  3037  0030                     Button_Service@name:
  3038                           
  3039                           ; 1 bytes @ 0x10
  3040  0030                     	ds	1
  3041  0031                     ??_MTOUCH_Sensor_SampleAll:
  3042  0031                     Button_Service@button:	
  3043                           ; 1 bytes @ 0x11
  3044                           
  3045                           
  3046                           ; 2 bytes @ 0x11
  3047  0031                     	ds	1
  3048  0032                     MTOUCH_Sensor_SampleAll@sensor:
  3049                           
  3050                           ; 1 bytes @ 0x12
  3051  0032                     	ds	1
  3052  0033                     MTOUCH_Button_ServiceAll@button:
  3053                           
  3054                           ; 1 bytes @ 0x13
  3055  0033                     	ds	1
  3056  0034                     ??_MTOUCH_Service_Mainloop:
  3057                           
  3058                           ; 1 bytes @ 0x14
  3059  0034                     	ds	1
  3060  0035                     ??_main:
  3061                           
  3062                           ; 1 bytes @ 0x15
  3063  0035                     	ds	1
  3064  0036                     main@i:
  3065                           
  3066                           ; 1 bytes @ 0x16
  3067  0036                     	ds	1
  3068                           
  3069                           	psect	maintext
  3070  03CA                     __pmaintext:	
  3071 ;;
  3072 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3073 ;;
  3074 ;; *************** function _main *****************
  3075 ;; Defined at:
  3076 ;;		line 49 in file "main.c"
  3077 ;; Parameters:    Size  Location     Type
  3078 ;;		None
  3079 ;; Auto vars:     Size  Location     Type
  3080 ;;  i               1   22[BANK0 ] unsigned char 
  3081 ;;  last_touch      1    0        unsigned char 
  3082 ;; Return value:  Size  Location     Type
  3083 ;;                  1    wreg      void 
  3084 ;; Registers used:
  3085 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3086 ;; Tracked objects:
  3087 ;;		On entry : B1F/0
  3088 ;;		On exit  : 0/0
  3089 ;;		Unchanged: 0/0
  3090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3091 ;;      Params:         0       0       0       0       0       0
  3092 ;;      Locals:         0       1       0       0       0       0
  3093 ;;      Temps:          0       1       0       0       0       0
  3094 ;;      Totals:         0       2       0       0       0       0
  3095 ;;Total ram usage:        2 bytes
  3096 ;; Hardware stack levels required when called:    7
  3097 ;; This function calls:
  3098 ;;		_DELAY_microseconds
  3099 ;;		_EUSART_Write
  3100 ;;		_EUSART_is_tx_ready
  3101 ;;		_MTOUCH_Button_isPressed
  3102 ;;		_MTOUCH_Service_Mainloop
  3103 ;;		_SYSTEM_Initialize
  3104 ;; This function is called by:
  3105 ;;		Startup code after reset
  3106 ;; This function uses a non-reentrant model
  3107 ;;
  3108                           
  3109                           
  3110                           ;psect for function _main
  3111  03CA                     _main:
  3112  03CA                     l3416:	
  3113                           ;incstack = 0
  3114                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3115                           
  3116                           
  3117                           ;main.c: 51:     uint8_t i;;main.c: 52:     uint8_t last_touch;;main.c: 55:     SYSTEM_I
      +                          nitialize();
  3118  03CA  318B  23F1  3183   	fcall	_SYSTEM_Initialize
  3119  03CD                     l783:	
  3120                           ;main.c: 73:     while (1) {
  3121                           
  3122                           
  3123                           ;main.c: 75:         if (MTOUCH_Service_Mainloop()) {
  3124  03CD  3180  20AB  3183   	fcall	_MTOUCH_Service_Mainloop
  3125  03D0  3A00               	xorlw	0
  3126  03D1  1903               	skipnz
  3127  03D2  2BD4               	goto	u1931
  3128  03D3  2BD5               	goto	u1930
  3129  03D4                     u1931:
  3130  03D4  2BFE               	goto	l3436
  3131  03D5                     u1930:
  3132  03D5                     l3418:
  3133                           
  3134                           ;main.c: 76:             for (i = 0; i < 10; i++) {
  3135  03D5  0020               	movlb	0	; select bank0
  3136  03D6  01B6               	clrf	main@i
  3137  03D7                     l3424:
  3138                           
  3139                           ;main.c: 77:                 if (MTOUCH_Button_isPressed(i)) {
  3140  03D7  0836               	movf	main@i,w
  3141  03D8  3180  20D4  3183   	fcall	_MTOUCH_Button_isPressed
  3142  03DB  3A00               	xorlw	0
  3143  03DC  1903               	skipnz
  3144  03DD  2BDF               	goto	u1941
  3145  03DE  2BE0               	goto	u1940
  3146  03DF                     u1941:
  3147  03DF  2BF3               	goto	l3432
  3148  03E0                     u1940:
  3149  03E0                     l3426:
  3150                           
  3151                           ;main.c: 78:                     led = 30;
  3152  03E0  301E               	movlw	30
  3153  03E1  0020               	movlb	0	; select bank0
  3154  03E2  00BF               	movwf	_led
  3155  03E3  3000               	movlw	0
  3156  03E4  00C0               	movwf	_led+1
  3157  03E5                     l3428:
  3158                           
  3159                           ;main.c: 79:                     if (EUSART_is_tx_ready()) {
  3160  03E5  3180  2004  3183   	fcall	_EUSART_is_tx_ready
  3161  03E8  3A00               	xorlw	0
  3162  03E9  1903               	skipnz
  3163  03EA  2BEC               	goto	u1951
  3164  03EB  2BED               	goto	u1950
  3165  03EC                     u1951:
  3166  03EC  2BF3               	goto	l3432
  3167  03ED                     u1950:
  3168  03ED                     l3430:
  3169                           
  3170                           ;main.c: 80:                         EUSART_Write('a' + i);
  3171  03ED  0020               	movlb	0	; select bank0
  3172  03EE  0836               	movf	main@i,w
  3173  03EF  3E61               	addlw	97
  3174  03F0  318B  2396  3183   	fcall	_EUSART_Write
  3175  03F3                     l3432:
  3176                           
  3177                           ;main.c: 83:             }
  3178  03F3  3001               	movlw	1
  3179  03F4  0020               	movlb	0	; select bank0
  3180  03F5  00B5               	movwf	??_main
  3181  03F6  0835               	movf	??_main,w
  3182  03F7  07B6               	addwf	main@i,f
  3183  03F8                     l3434:
  3184  03F8  300A               	movlw	10
  3185  03F9  0236               	subwf	main@i,w
  3186  03FA  1C03               	skipc
  3187  03FB  2BFD               	goto	u1961
  3188  03FC  2BFE               	goto	u1960
  3189  03FD                     u1961:
  3190  03FD  2BD7               	goto	l3424
  3191  03FE                     u1960:
  3192  03FE                     l3436:
  3193                           
  3194                           ;main.c: 87:         if (led >= 1) {
  3195  03FE  0020               	movlb	0	; select bank0
  3196  03FF  083F               	movf	_led,w
  3197  0400  0440               	iorwf	_led+1,w
  3198  0401  1903               	btfsc	3,2
  3199  0402  2C04               	goto	u1971
  3200  0403  2C05               	goto	u1970
  3201  0404                     u1971:
  3202  0404  2C0A               	goto	l3440
  3203  0405                     u1970:
  3204  0405                     l3438:
  3205                           
  3206                           ;main.c: 88:             led -= 1;
  3207  0405  3001               	movlw	1
  3208  0406  02BF               	subwf	_led,f
  3209  0407  3000               	movlw	0
  3210  0408  3BC0               	subwfb	_led+1,f
  3211                           
  3212                           ;main.c: 89:         } else {
  3213  0409  2C0C               	goto	l790
  3214  040A                     l3440:
  3215                           
  3216                           ;main.c: 90:             led = 0;
  3217  040A  01BF               	clrf	_led
  3218  040B  01C0               	clrf	_led+1
  3219  040C                     l790:	
  3220                           ;main.c: 91:         }
  3221                           
  3222                           
  3223                           ;main.c: 93:         for (duty = 0; duty < 30; duty++) {
  3224  040C  01C1               	clrf	_duty
  3225  040D  01C2               	clrf	_duty+1
  3226  040E                     l3446:
  3227                           
  3228                           ;main.c: 94:             if (led > duty) {
  3229  040E  0840               	movf	_led+1,w
  3230  040F  0242               	subwf	_duty+1,w
  3231  0410  1D03               	skipz
  3232  0411  2C14               	goto	u1985
  3233  0412  083F               	movf	_led,w
  3234  0413  0241               	subwf	_duty,w
  3235  0414                     u1985:
  3236  0414  1803               	skipnc
  3237  0415  2C17               	goto	u1981
  3238  0416  2C18               	goto	u1980
  3239  0417                     u1981:
  3240  0417  2C1B               	goto	l797
  3241  0418                     u1980:
  3242  0418                     l794:	
  3243                           ;main.c: 95:                 do { LATAbits.LATA3 = 1; } while(0);
  3244                           
  3245  0418  0022               	movlb	2	; select bank2
  3246  0419  158C               	bsf	12,3	;volatile
  3247  041A  2C1D               	goto	l3448
  3248  041B                     l797:	
  3249                           ;main.c: 97:                 do { LATAbits.LATA3 = 0; } while(0);
  3250                           
  3251  041B  0022               	movlb	2	; select bank2
  3252  041C  118C               	bcf	12,3	;volatile
  3253  041D                     l3448:
  3254                           
  3255                           ;main.c: 99:             DELAY_microseconds(100);
  3256  041D  3064               	movlw	100
  3257  041E  00F0               	movwf	DELAY_microseconds@microseconds
  3258  041F  3000               	movlw	0
  3259  0420  00F1               	movwf	DELAY_microseconds@microseconds+1
  3260  0421  3180  2013  3183   	fcall	_DELAY_microseconds
  3261  0424                     l3450:
  3262                           
  3263                           ;main.c: 100:         }
  3264  0424  3001               	movlw	1
  3265  0425  0020               	movlb	0	; select bank0
  3266  0426  07C1               	addwf	_duty,f
  3267  0427  3000               	movlw	0
  3268  0428  3DC2               	addwfc	_duty+1,f
  3269  0429                     l3452:
  3270  0429  3000               	movlw	0
  3271  042A  0242               	subwf	_duty+1,w
  3272  042B  301E               	movlw	30
  3273  042C  1903               	skipnz
  3274  042D  0241               	subwf	_duty,w
  3275  042E  1C03               	skipc
  3276  042F  2C31               	goto	u1991
  3277  0430  2C32               	goto	u1990
  3278  0431                     u1991:
  3279  0431  2C0E               	goto	l3446
  3280  0432                     u1990:
  3281  0432  2BCD               	goto	l783
  3282  0433  3180  2802         	ljmp	start
  3283  0435                     __end_of_main:
  3284                           
  3285                           	psect	text1
  3286  0BF1                     __ptext1:	
  3287 ;; *************** function _SYSTEM_Initialize *****************
  3288 ;; Defined at:
  3289 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3290 ;; Parameters:    Size  Location     Type
  3291 ;;		None
  3292 ;; Auto vars:     Size  Location     Type
  3293 ;;		None
  3294 ;; Return value:  Size  Location     Type
  3295 ;;                  1    wreg      void 
  3296 ;; Registers used:
  3297 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3298 ;; Tracked objects:
  3299 ;;		On entry : 0/0
  3300 ;;		On exit  : 0/0
  3301 ;;		Unchanged: 0/0
  3302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3303 ;;      Params:         0       0       0       0       0       0
  3304 ;;      Locals:         0       0       0       0       0       0
  3305 ;;      Temps:          0       0       0       0       0       0
  3306 ;;      Totals:         0       0       0       0       0       0
  3307 ;;Total ram usage:        0 bytes
  3308 ;; Hardware stack levels used:    1
  3309 ;; Hardware stack levels required when called:    5
  3310 ;; This function calls:
  3311 ;;		_EUSART_Initialize
  3312 ;;		_MTOUCH_Initialize
  3313 ;;		_OSCILLATOR_Initialize
  3314 ;;		_PIN_MANAGER_Initialize
  3315 ;;		_WDT_Initialize
  3316 ;; This function is called by:
  3317 ;;		_main
  3318 ;; This function uses a non-reentrant model
  3319 ;;
  3320                           
  3321                           
  3322                           ;psect for function _SYSTEM_Initialize
  3323  0BF1                     _SYSTEM_Initialize:
  3324  0BF1                     l3298:	
  3325                           ;incstack = 0
  3326                           ; Regs used in _SYSTEM_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3327                           
  3328                           
  3329                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  3330  0BF1  318C  2423  318B   	fcall	_PIN_MANAGER_Initialize
  3331  0BF4                     l3300:
  3332                           
  3333                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  3334  0BF4  318B  23A0  318B   	fcall	_OSCILLATOR_Initialize
  3335  0BF7                     l3302:
  3336                           
  3337                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  3338  0BF7  318B  235F  318B   	fcall	_WDT_Initialize
  3339  0BFA                     l3304:
  3340                           
  3341                           ;mcc_generated_files/mcc.c: 56:     EUSART_Initialize();
  3342  0BFA  318F  27BB  318B   	fcall	_EUSART_Initialize
  3343  0BFD                     l3306:
  3344                           
  3345                           ;mcc_generated_files/mcc.c: 57:     MTOUCH_Initialize();
  3346  0BFD  318B  23C4  318B   	fcall	_MTOUCH_Initialize
  3347  0C00                     l706:
  3348  0C00  0008               	return
  3349  0C01                     __end_of_SYSTEM_Initialize:
  3350                           
  3351                           	psect	text2
  3352  0B5F                     __ptext2:	
  3353 ;; *************** function _WDT_Initialize *****************
  3354 ;; Defined at:
  3355 ;;		line 74 in file "mcc_generated_files/mcc.c"
  3356 ;; Parameters:    Size  Location     Type
  3357 ;;		None
  3358 ;; Auto vars:     Size  Location     Type
  3359 ;;		None
  3360 ;; Return value:  Size  Location     Type
  3361 ;;                  1    wreg      void 
  3362 ;; Registers used:
  3363 ;;		wreg
  3364 ;; Tracked objects:
  3365 ;;		On entry : 0/0
  3366 ;;		On exit  : 0/0
  3367 ;;		Unchanged: 0/0
  3368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3369 ;;      Params:         0       0       0       0       0       0
  3370 ;;      Locals:         0       0       0       0       0       0
  3371 ;;      Temps:          0       0       0       0       0       0
  3372 ;;      Totals:         0       0       0       0       0       0
  3373 ;;Total ram usage:        0 bytes
  3374 ;; Hardware stack levels used:    1
  3375 ;; This function calls:
  3376 ;;		Nothing
  3377 ;; This function is called by:
  3378 ;;		_SYSTEM_Initialize
  3379 ;; This function uses a non-reentrant model
  3380 ;;
  3381                           
  3382                           
  3383                           ;psect for function _WDT_Initialize
  3384  0B5F                     _WDT_Initialize:
  3385  0B5F                     l3218:	
  3386                           ;incstack = 0
  3387                           ; Regs used in _WDT_Initialize: [wreg]
  3388                           
  3389                           
  3390                           ;mcc_generated_files/mcc.c: 77:     WDTCON = 0x16;
  3391  0B5F  3016               	movlw	22
  3392  0B60  0021               	movlb	1	; select bank1
  3393  0B61  0097               	movwf	23	;volatile
  3394  0B62                     l715:
  3395  0B62  0008               	return
  3396  0B63                     __end_of_WDT_Initialize:
  3397                           
  3398                           	psect	text3
  3399  0C23                     __ptext3:	
  3400 ;; *************** function _PIN_MANAGER_Initialize *****************
  3401 ;; Defined at:
  3402 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3403 ;; Parameters:    Size  Location     Type
  3404 ;;		None
  3405 ;; Auto vars:     Size  Location     Type
  3406 ;;		None
  3407 ;; Return value:  Size  Location     Type
  3408 ;;                  1    wreg      void 
  3409 ;; Registers used:
  3410 ;;		status,2
  3411 ;; Tracked objects:
  3412 ;;		On entry : 0/0
  3413 ;;		On exit  : 0/0
  3414 ;;		Unchanged: 0/0
  3415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3416 ;;      Params:         0       0       0       0       0       0
  3417 ;;      Locals:         0       0       0       0       0       0
  3418 ;;      Temps:          0       0       0       0       0       0
  3419 ;;      Totals:         0       0       0       0       0       0
  3420 ;;Total ram usage:        0 bytes
  3421 ;; Hardware stack levels used:    1
  3422 ;; This function calls:
  3423 ;;		Nothing
  3424 ;; This function is called by:
  3425 ;;		_SYSTEM_Initialize
  3426 ;; This function uses a non-reentrant model
  3427 ;;
  3428                           
  3429                           
  3430                           ;psect for function _PIN_MANAGER_Initialize
  3431  0C23                     _PIN_MANAGER_Initialize:
  3432  0C23                     l3208:	
  3433                           ;incstack = 0
  3434                           ; Regs used in _PIN_MANAGER_Initialize: [status,2]
  3435                           
  3436                           
  3437                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  3438  0C23  0022               	movlb	2	; select bank2
  3439  0C24  018C               	clrf	12	;volatile
  3440                           
  3441                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  3442  0C25  018D               	clrf	13	;volatile
  3443                           
  3444                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x00;
  3445  0C26  0021               	movlb	1	; select bank1
  3446  0C27  018C               	clrf	12	;volatile
  3447                           
  3448                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0x00;
  3449  0C28  018D               	clrf	13	;volatile
  3450                           
  3451                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0x00;
  3452  0C29  0023               	movlb	3	; select bank3
  3453  0C2A  018D               	clrf	13	;volatile
  3454                           
  3455                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x00;
  3456  0C2B  018C               	clrf	12	;volatile
  3457                           
  3458                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  3459  0C2C  0024               	movlb	4	; select bank4
  3460  0C2D  018D               	clrf	13	;volatile
  3461                           
  3462                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  3463  0C2E  018C               	clrf	12	;volatile
  3464  0C2F                     l3210:
  3465                           
  3466                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  3467  0C2F  0021               	movlb	1	; select bank1
  3468  0C30  1795               	bsf	21,7	;volatile
  3469                           
  3470                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0x00;
  3471  0C31  0022               	movlb	2	; select bank2
  3472  0C32  019D               	clrf	29	;volatile
  3473                           
  3474                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x00;
  3475  0C33  019E               	clrf	30	;volatile
  3476  0C34                     l740:
  3477  0C34  0008               	return
  3478  0C35                     __end_of_PIN_MANAGER_Initialize:
  3479                           
  3480                           	psect	text4
  3481  0BA0                     __ptext4:	
  3482 ;; *************** function _OSCILLATOR_Initialize *****************
  3483 ;; Defined at:
  3484 ;;		line 60 in file "mcc_generated_files/mcc.c"
  3485 ;; Parameters:    Size  Location     Type
  3486 ;;		None
  3487 ;; Auto vars:     Size  Location     Type
  3488 ;;		None
  3489 ;; Return value:  Size  Location     Type
  3490 ;;                  1    wreg      void 
  3491 ;; Registers used:
  3492 ;;		wreg, status,2
  3493 ;; Tracked objects:
  3494 ;;		On entry : 0/0
  3495 ;;		On exit  : 0/0
  3496 ;;		Unchanged: 0/0
  3497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3498 ;;      Params:         0       0       0       0       0       0
  3499 ;;      Locals:         0       0       0       0       0       0
  3500 ;;      Temps:          0       0       0       0       0       0
  3501 ;;      Totals:         0       0       0       0       0       0
  3502 ;;Total ram usage:        0 bytes
  3503 ;; Hardware stack levels used:    1
  3504 ;; This function calls:
  3505 ;;		Nothing
  3506 ;; This function is called by:
  3507 ;;		_SYSTEM_Initialize
  3508 ;; This function uses a non-reentrant model
  3509 ;;
  3510                           
  3511                           
  3512                           ;psect for function _OSCILLATOR_Initialize
  3513  0BA0                     _OSCILLATOR_Initialize:
  3514  0BA0                     l3212:	
  3515                           ;incstack = 0
  3516                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3517                           
  3518                           
  3519                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x70;
  3520  0BA0  3070               	movlw	112
  3521  0BA1  0021               	movlb	1	; select bank1
  3522  0BA2  0099               	movwf	25	;volatile
  3523  0BA3                     l3214:
  3524                           
  3525                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
  3526  0BA3  0198               	clrf	24	;volatile
  3527  0BA4                     l3216:
  3528                           
  3529                           ;mcc_generated_files/mcc.c: 67:     BORCON = 0x00;
  3530  0BA4  0022               	movlb	2	; select bank2
  3531  0BA5  0196               	clrf	22	;volatile
  3532  0BA6                     l709:	
  3533                           ;mcc_generated_files/mcc.c: 70:     {;mcc_generated_files/mcc.c: 71:     }
  3534                           
  3535                           
  3536                           ;mcc_generated_files/mcc.c: 69:     while(PLLR == 0)
  3537  0BA6  0021               	movlb	1	; select bank1
  3538  0BA7  1F1A               	btfss	26,6	;volatile
  3539  0BA8  2BAA               	goto	u1611
  3540  0BA9  2BAB               	goto	u1610
  3541  0BAA                     u1611:
  3542  0BAA  2BA6               	goto	l709
  3543  0BAB                     u1610:
  3544  0BAB                     l712:
  3545  0BAB  0008               	return
  3546  0BAC                     __end_of_OSCILLATOR_Initialize:
  3547                           
  3548                           	psect	text5
  3549  0FBB                     __ptext5:	
  3550 ;; *************** function _EUSART_Initialize *****************
  3551 ;; Defined at:
  3552 ;;		line 66 in file "mcc_generated_files/eusart.c"
  3553 ;; Parameters:    Size  Location     Type
  3554 ;;		None
  3555 ;; Auto vars:     Size  Location     Type
  3556 ;;		None
  3557 ;; Return value:  Size  Location     Type
  3558 ;;                  1    wreg      void 
  3559 ;; Registers used:
  3560 ;;		wreg, status,2, status,0, pclath, cstack
  3561 ;; Tracked objects:
  3562 ;;		On entry : 0/0
  3563 ;;		On exit  : 0/0
  3564 ;;		Unchanged: 0/0
  3565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3566 ;;      Params:         0       0       0       0       0       0
  3567 ;;      Locals:         0       0       0       0       0       0
  3568 ;;      Temps:          0       0       0       0       0       0
  3569 ;;      Totals:         0       0       0       0       0       0
  3570 ;;Total ram usage:        0 bytes
  3571 ;; Hardware stack levels used:    1
  3572 ;; Hardware stack levels required when called:    1
  3573 ;; This function calls:
  3574 ;;		_EUSART_SetErrorHandler
  3575 ;;		_EUSART_SetFramingErrorHandler
  3576 ;;		_EUSART_SetOverrunErrorHandler
  3577 ;; This function is called by:
  3578 ;;		_SYSTEM_Initialize
  3579 ;; This function uses a non-reentrant model
  3580 ;;
  3581                           
  3582                           
  3583                           ;psect for function _EUSART_Initialize
  3584  0FBB                     _EUSART_Initialize:
  3585  0FBB                     l3196:	
  3586                           ;incstack = 0
  3587                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3588                           
  3589                           
  3590                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  3591  0FBB  3008               	movlw	8
  3592  0FBC  0023               	movlb	3	; select bank3
  3593  0FBD  009F               	movwf	31	;volatile
  3594                           
  3595                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x80;
  3596  0FBE  3080               	movlw	128
  3597  0FBF  009D               	movwf	29	;volatile
  3598                           
  3599                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  3600  0FC0  3024               	movlw	36
  3601  0FC1  009E               	movwf	30	;volatile
  3602                           
  3603                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x8A;
  3604  0FC2  308A               	movlw	138
  3605  0FC3  009B               	movwf	27	;volatile
  3606  0FC4                     l3198:
  3607                           
  3608                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  3609  0FC4  019C               	clrf	28	;volatile
  3610  0FC5                     l3200:
  3611                           
  3612                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  3613  0FC5  3000               	movlw	0
  3614  0FC6  00F0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  3615  0FC7  3000               	movlw	0
  3616  0FC8  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  3617  0FC9  318B  236E  318F   	fcall	_EUSART_SetFramingErrorHandler
  3618  0FCC                     l3202:
  3619                           
  3620                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  3621  0FCC  3000               	movlw	0
  3622  0FCD  00F0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  3623  0FCE  3000               	movlw	0
  3624  0FCF  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  3625  0FD0  318B  2374  318F   	fcall	_EUSART_SetOverrunErrorHandler
  3626  0FD3                     l3204:
  3627                           
  3628                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  3629  0FD3  3000               	movlw	0
  3630  0FD4  00F0               	movwf	EUSART_SetErrorHandler@interruptHandler
  3631  0FD5  3000               	movlw	0
  3632  0FD6  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  3633  0FD7  318B  2368  318F   	fcall	_EUSART_SetErrorHandler
  3634  0FDA                     l3206:
  3635                           
  3636                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  3637  0FDA  0020               	movlb	0	; select bank0
  3638  0FDB  01C3               	clrf	_eusartRxLastError	;volatile
  3639  0FDC                     l634:
  3640  0FDC  0008               	return
  3641  0FDD                     __end_of_EUSART_Initialize:
  3642                           
  3643                           	psect	text6
  3644  0B74                     __ptext6:	
  3645 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  3646 ;; Defined at:
  3647 ;;		line 161 in file "mcc_generated_files/eusart.c"
  3648 ;; Parameters:    Size  Location     Type
  3649 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  3650 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  3651 ;; Auto vars:     Size  Location     Type
  3652 ;;		None
  3653 ;; Return value:  Size  Location     Type
  3654 ;;                  1    wreg      void 
  3655 ;; Registers used:
  3656 ;;		wreg
  3657 ;; Tracked objects:
  3658 ;;		On entry : 0/0
  3659 ;;		On exit  : 0/0
  3660 ;;		Unchanged: 0/0
  3661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3662 ;;      Params:         2       0       0       0       0       0
  3663 ;;      Locals:         0       0       0       0       0       0
  3664 ;;      Temps:          0       0       0       0       0       0
  3665 ;;      Totals:         2       0       0       0       0       0
  3666 ;;Total ram usage:        2 bytes
  3667 ;; Hardware stack levels used:    1
  3668 ;; This function calls:
  3669 ;;		Nothing
  3670 ;; This function is called by:
  3671 ;;		_EUSART_Initialize
  3672 ;; This function uses a non-reentrant model
  3673 ;;
  3674                           
  3675                           
  3676                           ;psect for function _EUSART_SetOverrunErrorHandler
  3677  0B74                     _EUSART_SetOverrunErrorHandler:
  3678  0B74                     l3144:	
  3679                           ;incstack = 0
  3680                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  3681                           
  3682                           
  3683                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  3684  0B74  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  3685  0B75  0020               	movlb	0	; select bank0
  3686  0B76  00BA               	movwf	_EUSART_OverrunErrorHandler+1
  3687  0B77  0870               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  3688  0B78  00B9               	movwf	_EUSART_OverrunErrorHandler
  3689  0B79                     l676:
  3690  0B79  0008               	return
  3691  0B7A                     __end_of_EUSART_SetOverrunErrorHandler:
  3692                           
  3693                           	psect	text7
  3694  0B6E                     __ptext7:	
  3695 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  3696 ;; Defined at:
  3697 ;;		line 157 in file "mcc_generated_files/eusart.c"
  3698 ;; Parameters:    Size  Location     Type
  3699 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  3700 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  3701 ;; Auto vars:     Size  Location     Type
  3702 ;;		None
  3703 ;; Return value:  Size  Location     Type
  3704 ;;                  1    wreg      void 
  3705 ;; Registers used:
  3706 ;;		wreg
  3707 ;; Tracked objects:
  3708 ;;		On entry : 0/0
  3709 ;;		On exit  : 0/0
  3710 ;;		Unchanged: 0/0
  3711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3712 ;;      Params:         2       0       0       0       0       0
  3713 ;;      Locals:         0       0       0       0       0       0
  3714 ;;      Temps:          0       0       0       0       0       0
  3715 ;;      Totals:         2       0       0       0       0       0
  3716 ;;Total ram usage:        2 bytes
  3717 ;; Hardware stack levels used:    1
  3718 ;; This function calls:
  3719 ;;		Nothing
  3720 ;; This function is called by:
  3721 ;;		_EUSART_Initialize
  3722 ;; This function uses a non-reentrant model
  3723 ;;
  3724                           
  3725                           
  3726                           ;psect for function _EUSART_SetFramingErrorHandler
  3727  0B6E                     _EUSART_SetFramingErrorHandler:
  3728  0B6E                     l3142:	
  3729                           ;incstack = 0
  3730                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  3731                           
  3732                           
  3733                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  3734  0B6E  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  3735  0B6F  0020               	movlb	0	; select bank0
  3736  0B70  00BC               	movwf	_EUSART_FramingErrorHandler+1
  3737  0B71  0870               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  3738  0B72  00BB               	movwf	_EUSART_FramingErrorHandler
  3739  0B73                     l673:
  3740  0B73  0008               	return
  3741  0B74                     __end_of_EUSART_SetFramingErrorHandler:
  3742                           
  3743                           	psect	text8
  3744  0B68                     __ptext8:	
  3745 ;; *************** function _EUSART_SetErrorHandler *****************
  3746 ;; Defined at:
  3747 ;;		line 165 in file "mcc_generated_files/eusart.c"
  3748 ;; Parameters:    Size  Location     Type
  3749 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  3750 ;;		 -> EUSART_DefaultErrorHandler(1), 
  3751 ;; Auto vars:     Size  Location     Type
  3752 ;;		None
  3753 ;; Return value:  Size  Location     Type
  3754 ;;                  1    wreg      void 
  3755 ;; Registers used:
  3756 ;;		wreg
  3757 ;; Tracked objects:
  3758 ;;		On entry : 0/0
  3759 ;;		On exit  : 0/0
  3760 ;;		Unchanged: 0/0
  3761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3762 ;;      Params:         2       0       0       0       0       0
  3763 ;;      Locals:         0       0       0       0       0       0
  3764 ;;      Temps:          0       0       0       0       0       0
  3765 ;;      Totals:         2       0       0       0       0       0
  3766 ;;Total ram usage:        2 bytes
  3767 ;; Hardware stack levels used:    1
  3768 ;; This function calls:
  3769 ;;		Nothing
  3770 ;; This function is called by:
  3771 ;;		_EUSART_Initialize
  3772 ;; This function uses a non-reentrant model
  3773 ;;
  3774                           
  3775                           
  3776                           ;psect for function _EUSART_SetErrorHandler
  3777  0B68                     _EUSART_SetErrorHandler:
  3778  0B68                     l3146:	
  3779                           ;incstack = 0
  3780                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  3781                           
  3782                           
  3783                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  3784  0B68  0871               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  3785  0B69  0020               	movlb	0	; select bank0
  3786  0B6A  00B8               	movwf	_EUSART_ErrorHandler+1
  3787  0B6B  0870               	movf	EUSART_SetErrorHandler@interruptHandler,w
  3788  0B6C  00B7               	movwf	_EUSART_ErrorHandler
  3789  0B6D                     l679:
  3790  0B6D  0008               	return
  3791  0B6E                     __end_of_EUSART_SetErrorHandler:
  3792                           
  3793                           	psect	text9
  3794  00AB                     __ptext9:	
  3795 ;; *************** function _MTOUCH_Service_Mainloop *****************
  3796 ;; Defined at:
  3797 ;;		line 96 in file "mcc_generated_files/mtouch/mtouch.c"
  3798 ;; Parameters:    Size  Location     Type
  3799 ;;		None
  3800 ;; Auto vars:     Size  Location     Type
  3801 ;;		None
  3802 ;; Return value:  Size  Location     Type
  3803 ;;                  1    wreg      _Bool 
  3804 ;; Registers used:
  3805 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3806 ;; Tracked objects:
  3807 ;;		On entry : 0/0
  3808 ;;		On exit  : 0/0
  3809 ;;		Unchanged: 0/0
  3810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3811 ;;      Params:         0       0       0       0       0       0
  3812 ;;      Locals:         0       0       0       0       0       0
  3813 ;;      Temps:          0       1       0       0       0       0
  3814 ;;      Totals:         0       1       0       0       0       0
  3815 ;;Total ram usage:        1 bytes
  3816 ;; Hardware stack levels used:    1
  3817 ;; Hardware stack levels required when called:    6
  3818 ;; This function calls:
  3819 ;;		_MTOUCH_Button_ServiceAll
  3820 ;;		_MTOUCH_Initialize
  3821 ;;		_MTOUCH_Sensor_SampleAll
  3822 ;;		_MTOUCH_Sensor_Sampled_ResetAll
  3823 ;;		_MTOUCH_Tick
  3824 ;;		_MTOUCH_needReburst
  3825 ;; This function is called by:
  3826 ;;		_main
  3827 ;;		_touch_example
  3828 ;; This function uses a non-reentrant model
  3829 ;;
  3830                           
  3831                           
  3832                           ;psect for function _MTOUCH_Service_Mainloop
  3833  00AB                     _MTOUCH_Service_Mainloop:
  3834  00AB                     l3220:	
  3835                           ;incstack = 0
  3836                           ; Regs used in _MTOUCH_Service_Mainloop: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3837                           
  3838                           
  3839                           ;mcc_generated_files/mtouch/mtouch.c: 99:     if(mtouch_request_init)
  3840  00AB  0020               	movlb	0	; select bank0
  3841  00AC  0849               	movf	_mtouch_request_init,w
  3842  00AD  1903               	btfsc	3,2
  3843  00AE  28B0               	goto	u1621
  3844  00AF  28B1               	goto	u1620
  3845  00B0                     u1621:
  3846  00B0  28B6               	goto	l3226
  3847  00B1                     u1620:
  3848  00B1                     l3222:
  3849                           
  3850                           ;mcc_generated_files/mtouch/mtouch.c: 100:     {;mcc_generated_files/mtouch/mtouch.c: 10
      +                          1:         MTOUCH_Initialize();
  3851  00B1  318B  23C4  3180   	fcall	_MTOUCH_Initialize
  3852  00B4                     l3224:
  3853                           
  3854                           ;mcc_generated_files/mtouch/mtouch.c: 102:         mtouch_request_init = 0;
  3855  00B4  0020               	movlb	0	; select bank0
  3856  00B5  01C9               	clrf	_mtouch_request_init
  3857  00B6                     l3226:
  3858                           
  3859                           ;mcc_generated_files/mtouch/mtouch.c: 106:     mtouch_time_toScan = 1;
  3860  00B6  01CA               	clrf	_mtouch_time_toScan
  3861  00B7  0ACA               	incf	_mtouch_time_toScan,f
  3862  00B8                     l3228:
  3863  00B8                     l3230:	
  3864                           ;mcc_generated_files/mtouch/mtouch.c: 108:     if(mtouch_time_toScan)
  3865                           
  3866                           
  3867                           ;mcc_generated_files/mtouch/mtouch.c: 109:     {;mcc_generated_files/mtouch/mtouch.c: 11
      +                          0:         if(MTOUCH_Sensor_SampleAll() == 0)
  3868  00B8  318C  24A4  3180   	fcall	_MTOUCH_Sensor_SampleAll
  3869  00BB  3A00               	xorlw	0
  3870  00BC  1D03               	skipz
  3871  00BD  28BF               	goto	u1631
  3872  00BE  28C0               	goto	u1630
  3873  00BF                     u1631:
  3874  00BF  28C2               	goto	l3236
  3875  00C0                     u1630:
  3876  00C0                     l3232:
  3877                           
  3878                           ;mcc_generated_files/mtouch/mtouch.c: 111:             return 0;
  3879  00C0  3000               	movlw	0
  3880  00C1  28D3               	goto	l55
  3881  00C2                     l3236:
  3882                           
  3883                           ;mcc_generated_files/mtouch/mtouch.c: 113:             MTOUCH_Button_ServiceAll();
  3884  00C2  318C  2411  3180   	fcall	_MTOUCH_Button_ServiceAll
  3885  00C5                     l3238:
  3886                           
  3887                           ;mcc_generated_files/mtouch/mtouch.c: 114:             mtouch_time_toScan = MTOUCH_needR
      +                          eburst();
  3888  00C5  318B  2359  3180   	fcall	_MTOUCH_needReburst
  3889  00C8  0020               	movlb	0	; select bank0
  3890  00C9  00B4               	movwf	??_MTOUCH_Service_Mainloop
  3891  00CA  0834               	movf	??_MTOUCH_Service_Mainloop,w
  3892  00CB  00CA               	movwf	_mtouch_time_toScan
  3893  00CC                     l3240:
  3894                           
  3895                           ;mcc_generated_files/mtouch/mtouch.c: 115:             MTOUCH_Sensor_Sampled_ResetAll();
  3896  00CC  3181  2154  3180   	fcall	_MTOUCH_Sensor_Sampled_ResetAll
  3897  00CF                     l3242:
  3898                           
  3899                           ;mcc_generated_files/mtouch/mtouch.c: 116:             MTOUCH_Tick();
  3900  00CF  318B  235B  3180   	fcall	_MTOUCH_Tick
  3901  00D2                     l3244:
  3902                           
  3903                           ;mcc_generated_files/mtouch/mtouch.c: 117:             return 1;
  3904  00D2  3001               	movlw	1
  3905  00D3                     l55:
  3906  00D3  0008               	return
  3907  00D4                     __end_of_MTOUCH_Service_Mainloop:
  3908                           
  3909                           	psect	text10
  3910  0B59                     __ptext10:	
  3911 ;; *************** function _MTOUCH_needReburst *****************
  3912 ;; Defined at:
  3913 ;;		line 140 in file "mcc_generated_files/mtouch/mtouch.c"
  3914 ;; Parameters:    Size  Location     Type
  3915 ;;		None
  3916 ;; Auto vars:     Size  Location     Type
  3917 ;;  needReburst     1    0        _Bool 
  3918 ;; Return value:  Size  Location     Type
  3919 ;;                  1    wreg      _Bool 
  3920 ;; Registers used:
  3921 ;;		wreg, status,2
  3922 ;; Tracked objects:
  3923 ;;		On entry : 0/0
  3924 ;;		On exit  : 0/0
  3925 ;;		Unchanged: 0/0
  3926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3927 ;;      Params:         0       0       0       0       0       0
  3928 ;;      Locals:         1       0       0       0       0       0
  3929 ;;      Temps:          0       0       0       0       0       0
  3930 ;;      Totals:         1       0       0       0       0       0
  3931 ;;Total ram usage:        1 bytes
  3932 ;; Hardware stack levels used:    1
  3933 ;; This function calls:
  3934 ;;		Nothing
  3935 ;; This function is called by:
  3936 ;;		_MTOUCH_Service_Mainloop
  3937 ;; This function uses a non-reentrant model
  3938 ;;
  3939                           
  3940                           
  3941                           ;psect for function _MTOUCH_needReburst
  3942  0B59                     _MTOUCH_needReburst:
  3943  0B59                     l3188:	
  3944                           ;incstack = 0
  3945                           ; Regs used in _MTOUCH_needReburst: [wreg+status,2]
  3946                           
  3947  0B59                     l3190:
  3948                           
  3949                           ;mcc_generated_files/mtouch/mtouch.c: 144:     return needReburst;
  3950  0B59  3000               	movlw	0
  3951  0B5A                     l62:
  3952  0B5A  0008               	return
  3953  0B5B                     __end_of_MTOUCH_needReburst:
  3954                           
  3955                           	psect	text11
  3956  0B5B                     __ptext11:	
  3957 ;; *************** function _MTOUCH_Tick *****************
  3958 ;; Defined at:
  3959 ;;		line 130 in file "mcc_generated_files/mtouch/mtouch.c"
  3960 ;; Parameters:    Size  Location     Type
  3961 ;;		None
  3962 ;; Auto vars:     Size  Location     Type
  3963 ;;		None
  3964 ;; Return value:  Size  Location     Type
  3965 ;;                  1    wreg      void 
  3966 ;; Registers used:
  3967 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3968 ;; Tracked objects:
  3969 ;;		On entry : 0/0
  3970 ;;		On exit  : 0/0
  3971 ;;		Unchanged: 0/0
  3972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3973 ;;      Params:         0       0       0       0       0       0
  3974 ;;      Locals:         0       0       0       0       0       0
  3975 ;;      Temps:          0       0       0       0       0       0
  3976 ;;      Totals:         0       0       0       0       0       0
  3977 ;;Total ram usage:        0 bytes
  3978 ;; Hardware stack levels used:    1
  3979 ;; Hardware stack levels required when called:    2
  3980 ;; This function calls:
  3981 ;;		_MTOUCH_Button_Tick
  3982 ;; This function is called by:
  3983 ;;		_MTOUCH_Service_Mainloop
  3984 ;; This function uses a non-reentrant model
  3985 ;;
  3986                           
  3987                           
  3988                           ;psect for function _MTOUCH_Tick
  3989  0B5B                     _MTOUCH_Tick:
  3990  0B5B                     l3194:	
  3991                           ;incstack = 0
  3992                           ; Regs used in _MTOUCH_Tick: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3993                           
  3994                           
  3995                           ;mcc_generated_files/mtouch/mtouch.c: 132:     MTOUCH_Button_Tick();
  3996  0B5B  3180  2082  318B   	fcall	_MTOUCH_Button_Tick
  3997  0B5E                     l59:
  3998  0B5E  0008               	return
  3999  0B5F                     __end_of_MTOUCH_Tick:
  4000                           
  4001                           	psect	text12
  4002  0082                     __ptext12:	
  4003 ;; *************** function _MTOUCH_Button_Tick *****************
  4004 ;; Defined at:
  4005 ;;		line 374 in file "mcc_generated_files/mtouch/mtouch_button.c"
  4006 ;; Parameters:    Size  Location     Type
  4007 ;;		None
  4008 ;; Auto vars:     Size  Location     Type
  4009 ;;  i               1    0[BANK0 ] unsigned char 
  4010 ;; Return value:  Size  Location     Type
  4011 ;;                  1    wreg      void 
  4012 ;; Registers used:
  4013 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4014 ;; Tracked objects:
  4015 ;;		On entry : 0/0
  4016 ;;		On exit  : 0/0
  4017 ;;		Unchanged: 0/0
  4018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4019 ;;      Params:         0       0       0       0       0       0
  4020 ;;      Locals:         0       1       0       0       0       0
  4021 ;;      Temps:          4       0       0       0       0       0
  4022 ;;      Totals:         4       1       0       0       0       0
  4023 ;;Total ram usage:        5 bytes
  4024 ;; Hardware stack levels used:    1
  4025 ;; Hardware stack levels required when called:    1
  4026 ;; This function calls:
  4027 ;;		_Button_Tick_helper
  4028 ;;		___wmul
  4029 ;; This function is called by:
  4030 ;;		_MTOUCH_Tick
  4031 ;; This function uses a non-reentrant model
  4032 ;;
  4033                           
  4034                           
  4035                           ;psect for function _MTOUCH_Button_Tick
  4036  0082                     _MTOUCH_Button_Tick:
  4037  0082                     l3088:	
  4038                           ;incstack = 0
  4039                           ; Regs used in _MTOUCH_Button_Tick: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4040                           
  4041                           
  4042                           ;mcc_generated_files/mtouch/mtouch_button.c: 376:     uint8_t i;;mcc_generated_files/mto
      +                          uch/mtouch_button.c: 377:     for (i = 0; i < 10u; i++)
  4043  0082  0020               	movlb	0	; select bank0
  4044  0083  01A0               	clrf	MTOUCH_Button_Tick@i
  4045  0084                     l3094:
  4046                           
  4047                           ;mcc_generated_files/mtouch/mtouch_button.c: 378:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 379:         Button_Tick_helper(&mtouch_button[i]);
  4048  0084  0820               	movf	MTOUCH_Button_Tick@i,w
  4049  0085  00FA               	movwf	??_MTOUCH_Button_Tick
  4050  0086  01FB               	clrf	??_MTOUCH_Button_Tick+1
  4051  0087  087A               	movf	??_MTOUCH_Button_Tick,w
  4052  0088  00F0               	movwf	___wmul@multiplier
  4053  0089  087B               	movf	??_MTOUCH_Button_Tick+1,w
  4054  008A  00F1               	movwf	___wmul@multiplier+1
  4055  008B  3011               	movlw	17
  4056  008C  00F2               	movwf	___wmul@multiplicand
  4057  008D  3000               	movlw	0
  4058  008E  00F3               	movwf	___wmul@multiplicand+1
  4059  008F  318C  24DA  3180   	fcall	___wmul
  4060  0092  30C6               	movlw	198
  4061  0093  00FC               	movwf	??_MTOUCH_Button_Tick+2
  4062  0094  3020               	movlw	32
  4063  0095  00FD               	movwf	??_MTOUCH_Button_Tick+3
  4064  0096  0870               	movf	?___wmul,w
  4065  0097  077C               	addwf	??_MTOUCH_Button_Tick+2,w
  4066  0098  00F6               	movwf	Button_Tick_helper@button
  4067  0099  0871               	movf	?___wmul+1,w
  4068  009A  3D7D               	addwfc	??_MTOUCH_Button_Tick+3,w
  4069  009B  00F7               	movwf	Button_Tick_helper@button+1
  4070  009C  3180  20FE  3180   	fcall	_Button_Tick_helper
  4071  009F                     l3096:
  4072                           
  4073                           ;mcc_generated_files/mtouch/mtouch_button.c: 380:     }
  4074  009F  3001               	movlw	1
  4075  00A0  00FA               	movwf	??_MTOUCH_Button_Tick
  4076  00A1  087A               	movf	??_MTOUCH_Button_Tick,w
  4077  00A2  0020               	movlb	0	; select bank0
  4078  00A3  07A0               	addwf	MTOUCH_Button_Tick@i,f
  4079  00A4                     l3098:
  4080  00A4  300A               	movlw	10
  4081  00A5  0220               	subwf	MTOUCH_Button_Tick@i,w
  4082  00A6  1C03               	skipc
  4083  00A7  28A9               	goto	u1521
  4084  00A8  28AA               	goto	u1520
  4085  00A9                     u1521:
  4086  00A9  2884               	goto	l3094
  4087  00AA                     u1520:
  4088  00AA                     l486:
  4089  00AA  0008               	return
  4090  00AB                     __end_of_MTOUCH_Button_Tick:
  4091                           
  4092                           	psect	text13
  4093  00FE                     __ptext13:	
  4094 ;; *************** function _Button_Tick_helper *****************
  4095 ;; Defined at:
  4096 ;;		line 382 in file "mcc_generated_files/mtouch/mtouch_button.c"
  4097 ;; Parameters:    Size  Location     Type
  4098 ;;  button          2    6[COMMON] PTR struct .
  4099 ;;		 -> mtouch_button(170), 
  4100 ;; Auto vars:     Size  Location     Type
  4101 ;;		None
  4102 ;; Return value:  Size  Location     Type
  4103 ;;                  1    wreg      void 
  4104 ;; Registers used:
  4105 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4106 ;; Tracked objects:
  4107 ;;		On entry : 0/0
  4108 ;;		On exit  : 0/0
  4109 ;;		Unchanged: 0/0
  4110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4111 ;;      Params:         2       0       0       0       0       0
  4112 ;;      Locals:         0       0       0       0       0       0
  4113 ;;      Temps:          2       0       0       0       0       0
  4114 ;;      Totals:         4       0       0       0       0       0
  4115 ;;Total ram usage:        4 bytes
  4116 ;; Hardware stack levels used:    1
  4117 ;; This function calls:
  4118 ;;		Nothing
  4119 ;; This function is called by:
  4120 ;;		_MTOUCH_Button_Tick
  4121 ;; This function uses a non-reentrant model
  4122 ;;
  4123                           
  4124                           
  4125                           ;psect for function _Button_Tick_helper
  4126  00FE                     _Button_Tick_helper:
  4127  00FE                     l3046:	
  4128                           ;incstack = 0
  4129                           ; Regs used in _Button_Tick_helper: [wreg+fsr1l+fsr1h+status,2+status,0]
  4130                           
  4131                           
  4132                           ;mcc_generated_files/mtouch/mtouch_button.c: 382: static void Button_Tick_helper(mtouch_
      +                          button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 383: {;mcc_generated_files
      +                          /mtouch/mtouch_button.c: 385:     if ((button->state) == MTOUCH_BUTTON_STATE_pressed)
  4133  00FE  0876               	movf	Button_Tick_helper@button,w
  4134  00FF  0086               	movwf	6
  4135  0100  0877               	movf	Button_Tick_helper@button+1,w
  4136  0101  0087               	movwf	7
  4137  0102  3142               	addfsr 1,2
  4138  0103  3002               	movlw	2
  4139  0104  0601               	xorwf	1,w
  4140  0105  1D03               	btfss	3,2
  4141  0106  2908               	goto	u1461
  4142  0107  2909               	goto	u1460
  4143  0108                     u1461:
  4144  0108  2927               	goto	l491
  4145  0109                     u1460:
  4146  0109                     l3048:
  4147                           
  4148                           ;mcc_generated_files/mtouch/mtouch_button.c: 386:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 387:         (button->counter)++;
  4149  0109  0876               	movf	Button_Tick_helper@button,w
  4150  010A  0086               	movwf	6
  4151  010B  0877               	movf	Button_Tick_helper@button+1,w
  4152  010C  0087               	movwf	7
  4153  010D  314A               	addfsr 1,10
  4154  010E  3001               	movlw	1
  4155  010F  0781               	addwf	1,f
  4156  0110  3141               	addfsr 1,1
  4157  0111  1803               	skipnc
  4158  0112  0A81               	incf	1,f
  4159                           
  4160                           ;mcc_generated_files/mtouch/mtouch_button.c: 388:         if (button->counter == (mtouch
      +                          _button_statecounter_t)0)
  4161  0113  0876               	movf	Button_Tick_helper@button,w
  4162  0114  0086               	movwf	6
  4163  0115  0877               	movf	Button_Tick_helper@button+1,w
  4164  0116  0087               	movwf	7
  4165  0117  314A               	addfsr 1,10
  4166  0118  0016               	moviw fsr1++
  4167  0119  0401               	iorwf	1,w
  4168  011A  1D03               	btfss	3,2
  4169  011B  291D               	goto	u1471
  4170  011C  291E               	goto	u1470
  4171  011D                     u1471:
  4172  011D  2927               	goto	l491
  4173  011E                     u1470:
  4174  011E                     l3050:
  4175                           
  4176                           ;mcc_generated_files/mtouch/mtouch_button.c: 389:         {;mcc_generated_files/mtouch/m
      +                          touch_button.c: 390:             button->counter = (mtouch_button_statecounter_t)0xFFFF;
  4177  011E  0876               	movf	Button_Tick_helper@button,w
  4178  011F  0086               	movwf	6
  4179  0120  0877               	movf	Button_Tick_helper@button+1,w
  4180  0121  0087               	movwf	7
  4181  0122  314A               	addfsr 1,10
  4182  0123  30FF               	movlw	255
  4183  0124  3FC0               	movwi [0]fsr1
  4184  0125  30FF               	movlw	255
  4185  0126  3FC1               	movwi [1]fsr1
  4186  0127                     l491:
  4187  0127  0008               	return
  4188  0128                     __end_of_Button_Tick_helper:
  4189                           
  4190                           	psect	text14
  4191  0CA4                     __ptext14:	
  4192 ;; *************** function _MTOUCH_Sensor_SampleAll *****************
  4193 ;; Defined at:
  4194 ;;		line 195 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  4195 ;; Parameters:    Size  Location     Type
  4196 ;;		None
  4197 ;; Auto vars:     Size  Location     Type
  4198 ;;  sensor          1   18[BANK0 ] enum E2470
  4199 ;; Return value:  Size  Location     Type
  4200 ;;                  1    wreg      _Bool 
  4201 ;; Registers used:
  4202 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4203 ;; Tracked objects:
  4204 ;;		On entry : 0/0
  4205 ;;		On exit  : 0/0
  4206 ;;		Unchanged: 0/0
  4207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4208 ;;      Params:         0       0       0       0       0       0
  4209 ;;      Locals:         0       1       0       0       0       0
  4210 ;;      Temps:          0       1       0       0       0       0
  4211 ;;      Totals:         0       2       0       0       0       0
  4212 ;;Total ram usage:        2 bytes
  4213 ;; Hardware stack levels used:    1
  4214 ;; Hardware stack levels required when called:    5
  4215 ;; This function calls:
  4216 ;;		_Sensor_Service
  4217 ;; This function is called by:
  4218 ;;		_MTOUCH_Service_Mainloop
  4219 ;; This function uses a non-reentrant model
  4220 ;;
  4221                           
  4222                           
  4223                           ;psect for function _MTOUCH_Sensor_SampleAll
  4224  0CA4                     _MTOUCH_Sensor_SampleAll:
  4225  0CA4                     l3156:	
  4226                           ;incstack = 0
  4227                           ; Regs used in _MTOUCH_Sensor_SampleAll: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4228                           
  4229                           
  4230                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 197:     enum mtouch_sensor_names sensor;;m
      +                          cc_generated_files/mtouch/mtouch_sensor.c: 198:     for (sensor = 0; sensor < 10u; senso
      +                          r++)
  4231  0CA4  0020               	movlb	0	; select bank0
  4232  0CA5  01B2               	clrf	MTOUCH_Sensor_SampleAll@sensor
  4233  0CA6                     l3162:
  4234                           
  4235                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 199:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 200:         if(Sensor_Service(sensor)!= MTOUCH_SENSOR_ERROR_none)
  4236  0CA6  0832               	movf	MTOUCH_Sensor_SampleAll@sensor,w
  4237  0CA7  3185  2516  318C   	fcall	_Sensor_Service
  4238  0CAA  3A00               	xorlw	0
  4239  0CAB  1903               	skipnz
  4240  0CAC  2CAE               	goto	u1581
  4241  0CAD  2CAF               	goto	u1580
  4242  0CAE                     u1581:
  4243  0CAE  2CB1               	goto	l3168
  4244  0CAF                     u1580:
  4245  0CAF                     l3164:
  4246                           
  4247                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 201:             return 0;
  4248  0CAF  3000               	movlw	0
  4249  0CB0  2CBD               	goto	l249
  4250  0CB1                     l3168:
  4251                           
  4252                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 202:     }
  4253  0CB1  3001               	movlw	1
  4254  0CB2  0020               	movlb	0	; select bank0
  4255  0CB3  00B1               	movwf	??_MTOUCH_Sensor_SampleAll
  4256  0CB4  0831               	movf	??_MTOUCH_Sensor_SampleAll,w
  4257  0CB5  07B2               	addwf	MTOUCH_Sensor_SampleAll@sensor,f
  4258  0CB6                     l3170:
  4259  0CB6  300A               	movlw	10
  4260  0CB7  0232               	subwf	MTOUCH_Sensor_SampleAll@sensor,w
  4261  0CB8  1C03               	skipc
  4262  0CB9  2CBB               	goto	u1591
  4263  0CBA  2CBC               	goto	u1590
  4264  0CBB                     u1591:
  4265  0CBB  2CA6               	goto	l3162
  4266  0CBC                     u1590:
  4267  0CBC                     l3172:
  4268                           
  4269                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 203:     return 1;
  4270  0CBC  3001               	movlw	1
  4271  0CBD                     l249:
  4272  0CBD  0008               	return
  4273  0CBE                     __end_of_MTOUCH_Sensor_SampleAll:
  4274                           
  4275                           	psect	text15
  4276  0516                     __ptext15:	
  4277 ;; *************** function _Sensor_Service *****************
  4278 ;; Defined at:
  4279 ;;		line 241 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  4280 ;; Parameters:    Size  Location     Type
  4281 ;;  name            1    wreg     enum E2470
  4282 ;; Auto vars:     Size  Location     Type
  4283 ;;  name            1   13[BANK0 ] enum E2470
  4284 ;;  sensor          2   15[BANK0 ] PTR struct .
  4285 ;;		 -> mtouch_sensor(90), 
  4286 ;;  error           1   14[BANK0 ] enum E2481
  4287 ;; Return value:  Size  Location     Type
  4288 ;;                  1    wreg      enum E2481
  4289 ;; Registers used:
  4290 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4291 ;; Tracked objects:
  4292 ;;		On entry : 0/0
  4293 ;;		On exit  : 0/0
  4294 ;;		Unchanged: 0/0
  4295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4296 ;;      Params:         0       0       0       0       0       0
  4297 ;;      Locals:         0       4       0       0       0       0
  4298 ;;      Temps:          0       4       0       0       0       0
  4299 ;;      Totals:         0       8       0       0       0       0
  4300 ;;Total ram usage:        8 bytes
  4301 ;; Hardware stack levels used:    1
  4302 ;; Hardware stack levels required when called:    4
  4303 ;; This function calls:
  4304 ;;		_Sensor_Acquisition
  4305 ;;		_Sensor_DefaultCallback
  4306 ;;		_Sensor_RawSample_Update
  4307 ;;		_Sensor_isEnabled
  4308 ;;		_Sensor_setSampled
  4309 ;;		___wmul
  4310 ;; This function is called by:
  4311 ;;		_MTOUCH_Sensor_SampleAll
  4312 ;; This function uses a non-reentrant model
  4313 ;;
  4314                           
  4315                           
  4316                           ;psect for function _Sensor_Service
  4317  0516                     _Sensor_Service:
  4318                           
  4319                           ;incstack = 0
  4320                           ; Regs used in _Sensor_Service: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4321                           ;Sensor_Service@name stored from wreg
  4322  0516  0020               	movlb	0	; select bank0
  4323  0517  00AD               	movwf	Sensor_Service@name
  4324  0518                     l3100:
  4325                           
  4326                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 241: static enum mtouch_sensor_error Sensor
      +                          _Service(enum mtouch_sensor_names name);mcc_generated_files/mtouch/mtouch_sensor.c: 242:
      +                           {;mcc_generated_files/mtouch/mtouch_sensor.c: 243:     mtouch_sensor_t* sensor = &mtouc
      +                          h_sensor[name];
  4327  0518  082D               	movf	Sensor_Service@name,w
  4328  0519  00A9               	movwf	??_Sensor_Service
  4329  051A  01AA               	clrf	??_Sensor_Service+1
  4330  051B  0829               	movf	??_Sensor_Service,w
  4331  051C  00F0               	movwf	___wmul@multiplier
  4332  051D  082A               	movf	??_Sensor_Service+1,w
  4333  051E  00F1               	movwf	___wmul@multiplier+1
  4334  051F  3009               	movlw	9
  4335  0520  00F2               	movwf	___wmul@multiplicand
  4336  0521  3000               	movlw	0
  4337  0522  00F3               	movwf	___wmul@multiplicand+1
  4338  0523  318C  24DA  3185   	fcall	___wmul
  4339  0526  306C               	movlw	108
  4340  0527  0020               	movlb	0	; select bank0
  4341  0528  00AB               	movwf	??_Sensor_Service+2
  4342  0529  3020               	movlw	32
  4343  052A  00AC               	movwf	??_Sensor_Service+3
  4344  052B  0870               	movf	?___wmul,w
  4345  052C  072B               	addwf	??_Sensor_Service+2,w
  4346  052D  00AF               	movwf	Sensor_Service@sensor
  4347  052E  0871               	movf	?___wmul+1,w
  4348  052F  3D2C               	addwfc	??_Sensor_Service+3,w
  4349  0530  00B0               	movwf	Sensor_Service@sensor+1
  4350  0531                     l3102:
  4351                           
  4352                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 244:     enum mtouch_sensor_error error = S
      +                          ensor_Acquisition(sensor);
  4353  0531  0830               	movf	Sensor_Service@sensor+1,w
  4354  0532  00A6               	movwf	Sensor_Acquisition@sensor+1
  4355  0533  082F               	movf	Sensor_Service@sensor,w
  4356  0534  00A5               	movwf	Sensor_Acquisition@sensor
  4357  0535  3182  224D  3185   	fcall	_Sensor_Acquisition
  4358  0538  0020               	movlb	0	; select bank0
  4359  0539  00A9               	movwf	??_Sensor_Service
  4360  053A  0829               	movf	??_Sensor_Service,w
  4361  053B  00AE               	movwf	Sensor_Service@error
  4362                           
  4363                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 247:     switch(error)
  4364  053C  2D67               	goto	l3114
  4365  053D                     l3104:
  4366                           
  4367                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 250:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 251:             if(Sensor_isEnabled(sensor))
  4368  053D  0830               	movf	Sensor_Service@sensor+1,w
  4369  053E  00F1               	movwf	Sensor_isEnabled@sensor+1
  4370  053F  082F               	movf	Sensor_Service@sensor,w
  4371  0540  00F0               	movwf	Sensor_isEnabled@sensor
  4372  0541  318B  23E1  3185   	fcall	_Sensor_isEnabled
  4373  0544  3A00               	xorlw	0
  4374  0545  1903               	skipnz
  4375  0546  2D48               	goto	u1531
  4376  0547  2D49               	goto	u1530
  4377  0548                     u1531:
  4378  0548  2D84               	goto	l3116
  4379  0549                     u1530:
  4380  0549                     l3106:
  4381                           
  4382                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 252:             {;mcc_generated_files/mtou
      +                          ch/mtouch_sensor.c: 257:                 if(!lowpowerActivated)
  4383  0549  0020               	movlb	0	; select bank0
  4384  054A  0844               	movf	_lowpowerActivated,w
  4385  054B  1D03               	btfss	3,2
  4386  054C  2D4E               	goto	u1541
  4387  054D  2D4F               	goto	u1540
  4388  054E                     u1541:
  4389  054E  2D56               	goto	l267
  4390  054F                     u1540:
  4391  054F                     l3108:
  4392                           
  4393                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 258:                 {;mcc_generated_files/
      +                          mtouch/mtouch_sensor.c: 259:                     Sensor_RawSample_Update(sensor);
  4394  054F  0830               	movf	Sensor_Service@sensor+1,w
  4395  0550  00F1               	movwf	Sensor_RawSample_Update@sensor+1
  4396  0551  082F               	movf	Sensor_Service@sensor,w
  4397  0552  00F0               	movwf	Sensor_RawSample_Update@sensor
  4398  0553  318C  24BE  3185   	fcall	_Sensor_RawSample_Update
  4399  0556                     l267:	
  4400                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 260:                 }
  4401                           
  4402                           
  4403                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 261:                 Sensor_setSampled(sens
      +                          or);
  4404  0556  0020               	movlb	0	; select bank0
  4405  0557  0830               	movf	Sensor_Service@sensor+1,w
  4406  0558  00F1               	movwf	Sensor_setSampled@sensor+1
  4407  0559  082F               	movf	Sensor_Service@sensor,w
  4408  055A  00F0               	movwf	Sensor_setSampled@sensor
  4409  055B  318B  238F  3185   	fcall	_Sensor_setSampled
  4410  055E                     l3110:
  4411                           
  4412                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 262:                 callback_sampled(name)
      +                          ;
  4413  055E  0020               	movlb	0	; select bank0
  4414  055F  082D               	movf	Sensor_Service@name,w
  4415  0560  00A9               	movwf	??_Sensor_Service
  4416  0561  0829               	movf	??_Sensor_Service,w
  4417  0562  00F0               	movwf	Sensor_DefaultCallback@sensor
  4418  0563  318B  2356  3185   	fcall	_Sensor_DefaultCallback
  4419  0566  2D84               	goto	l3116
  4420  0567                     l3114:
  4421  0567  082E               	movf	Sensor_Service@error,w
  4422  0568  00A9               	movwf	??_Sensor_Service
  4423  0569  01AA               	clrf	??_Sensor_Service+1
  4424  056A  1BA9               	btfsc	??_Sensor_Service,7
  4425  056B  03AA               	decf	??_Sensor_Service+1,f
  4426                           
  4427                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  4428                           ; Switch size 1, requested type "simple"
  4429                           ; Number of cases is 2, Range of values is 0 to 255
  4430                           ; switch strategies available:
  4431                           ; Name         Instructions Cycles
  4432                           ; simple_byte            7     4 (average)
  4433                           ; jumptable            260     6 (fixed)
  4434                           ;	Chosen strategy is simple_byte
  4435  056C  082A               	movf	??_Sensor_Service+1,w
  4436  056D  3A00               	xorlw	0	; case 0
  4437  056E  1903               	skipnz
  4438  056F  2D74               	goto	l3514
  4439  0570  3AFF               	xorlw	255	; case 255
  4440  0571  1903               	skipnz
  4441  0572  2D79               	goto	l3516
  4442  0573  2D84               	goto	l3116
  4443  0574                     l3514:
  4444                           
  4445                           ; Switch size 1, requested type "simple"
  4446                           ; Number of cases is 1, Range of values is 0 to 0
  4447                           ; switch strategies available:
  4448                           ; Name         Instructions Cycles
  4449                           ; simple_byte            4     3 (average)
  4450                           ; direct_byte            8     6 (fixed)
  4451                           ; jumptable            260     6 (fixed)
  4452                           ;	Chosen strategy is simple_byte
  4453  0574  0829               	movf	??_Sensor_Service,w
  4454  0575  3A00               	xorlw	0	; case 0
  4455  0576  1903               	skipnz
  4456  0577  2D3D               	goto	l3104
  4457  0578  2D84               	goto	l3116
  4458  0579                     l3516:
  4459                           
  4460                           ; Switch size 1, requested type "simple"
  4461                           ; Number of cases is 3, Range of values is 253 to 255
  4462                           ; switch strategies available:
  4463                           ; Name         Instructions Cycles
  4464                           ; simple_byte           10     6 (average)
  4465                           ; direct_byte           11     5 (fixed)
  4466                           ; jumptable            263     9 (fixed)
  4467                           ;	Chosen strategy is simple_byte
  4468  0579  0829               	movf	??_Sensor_Service,w
  4469  057A  3AFD               	xorlw	253	; case 253
  4470  057B  1903               	skipnz
  4471  057C  2D84               	goto	l3116
  4472  057D  3A03               	xorlw	3	; case 254
  4473  057E  1903               	skipnz
  4474  057F  2D84               	goto	l3116
  4475  0580  3A01               	xorlw	1	; case 255
  4476  0581  1903               	skipnz
  4477  0582  2D84               	goto	l3116
  4478  0583  2D84               	goto	l3116
  4479  0584                     l3116:
  4480                           
  4481                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 274:     return error;
  4482  0584  0020               	movlb	0	; select bank0
  4483  0585  082E               	movf	Sensor_Service@error,w
  4484  0586                     l273:
  4485  0586  0008               	return
  4486  0587                     __end_of_Sensor_Service:
  4487                           
  4488                           	psect	text16
  4489  0B8F                     __ptext16:	
  4490 ;; *************** function _Sensor_setSampled *****************
  4491 ;; Defined at:
  4492 ;;		line 577 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  4493 ;; Parameters:    Size  Location     Type
  4494 ;;  sensor          2    0[COMMON] PTR struct .
  4495 ;;		 -> mtouch_sensor(90), 
  4496 ;; Auto vars:     Size  Location     Type
  4497 ;;		None
  4498 ;; Return value:  Size  Location     Type
  4499 ;;                  1    wreg      void 
  4500 ;; Registers used:
  4501 ;;		wreg, fsr1l, fsr1h
  4502 ;; Tracked objects:
  4503 ;;		On entry : 0/0
  4504 ;;		On exit  : 0/0
  4505 ;;		Unchanged: 0/0
  4506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4507 ;;      Params:         2       0       0       0       0       0
  4508 ;;      Locals:         0       0       0       0       0       0
  4509 ;;      Temps:          0       0       0       0       0       0
  4510 ;;      Totals:         2       0       0       0       0       0
  4511 ;;Total ram usage:        2 bytes
  4512 ;; Hardware stack levels used:    1
  4513 ;; This function calls:
  4514 ;;		Nothing
  4515 ;; This function is called by:
  4516 ;;		_Sensor_Service
  4517 ;; This function uses a non-reentrant model
  4518 ;;
  4519                           
  4520                           
  4521                           ;psect for function _Sensor_setSampled
  4522  0B8F                     _Sensor_setSampled:
  4523  0B8F                     l2938:	
  4524                           ;incstack = 0
  4525                           ; Regs used in _Sensor_setSampled: [wregfsr1]
  4526                           
  4527                           
  4528                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 577: static __attribute__((inline)) void Se
      +                          nsor_setSampled(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 578
      +                          : {;mcc_generated_files/mtouch/mtouch_sensor.c: 579:     sensor->sampled = 1;
  4529  0B8F  0870               	movf	Sensor_setSampled@sensor,w
  4530  0B90  0086               	movwf	6
  4531  0B91  0871               	movf	Sensor_setSampled@sensor+1,w
  4532  0B92  0087               	movwf	7
  4533  0B93  3148               	addfsr 1,8
  4534  0B94  1481               	bsf	1,1
  4535  0B95                     l383:
  4536  0B95  0008               	return
  4537  0B96                     __end_of_Sensor_setSampled:
  4538                           
  4539                           	psect	text17
  4540  0CBE                     __ptext17:	
  4541 ;; *************** function _Sensor_RawSample_Update *****************
  4542 ;; Defined at:
  4543 ;;		line 438 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  4544 ;; Parameters:    Size  Location     Type
  4545 ;;  sensor          2    0[COMMON] PTR struct .
  4546 ;;		 -> mtouch_sensor(90), 
  4547 ;; Auto vars:     Size  Location     Type
  4548 ;;		None
  4549 ;; Return value:  Size  Location     Type
  4550 ;;                  1    wreg      void 
  4551 ;; Registers used:
  4552 ;;		wreg, fsr1l, fsr1h
  4553 ;; Tracked objects:
  4554 ;;		On entry : 0/0
  4555 ;;		On exit  : 0/0
  4556 ;;		Unchanged: 0/0
  4557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4558 ;;      Params:         2       0       0       0       0       0
  4559 ;;      Locals:         0       0       0       0       0       0
  4560 ;;      Temps:          0       0       0       0       0       0
  4561 ;;      Totals:         2       0       0       0       0       0
  4562 ;;Total ram usage:        2 bytes
  4563 ;; Hardware stack levels used:    1
  4564 ;; This function calls:
  4565 ;;		Nothing
  4566 ;; This function is called by:
  4567 ;;		_Sensor_Service
  4568 ;; This function uses a non-reentrant model
  4569 ;;
  4570                           
  4571                           
  4572                           ;psect for function _Sensor_RawSample_Update
  4573  0CBE                     _Sensor_RawSample_Update:
  4574  0CBE                     l2928:	
  4575                           ;incstack = 0
  4576                           ; Regs used in _Sensor_RawSample_Update: [wregfsr1]
  4577                           
  4578  0CBE  1F8B               	btfss	11,7	;volatile
  4579  0CBF  2CC1               	goto	u1281
  4580  0CC0  2CC2               	goto	u1280
  4581  0CC1                     u1281:
  4582  0CC1  2CCF               	goto	l2936
  4583  0CC2                     u1280:
  4584  0CC2                     l2930:
  4585  0CC2  138B               	bcf	11,7	;volatile
  4586  0CC3                     l2932:
  4587  0CC3  0870               	movf	Sensor_RawSample_Update@sensor,w
  4588  0CC4  0086               	movwf	6
  4589  0CC5  0871               	movf	Sensor_RawSample_Update@sensor+1,w
  4590  0CC6  0087               	movwf	7
  4591  0CC7  3146               	addfsr 1,6
  4592  0CC8  0020               	movlb	0	; select bank0
  4593  0CC9  083D               	movf	_packet_sample,w
  4594  0CCA  3FC0               	movwi [0]fsr1
  4595  0CCB  083E               	movf	_packet_sample+1,w
  4596  0CCC  3FC1               	movwi [1]fsr1
  4597  0CCD                     l2934:
  4598  0CCD  178B               	bsf	11,7	;volatile
  4599  0CCE  2CD9               	goto	l324
  4600  0CCF                     l2936:
  4601  0CCF  0870               	movf	Sensor_RawSample_Update@sensor,w
  4602  0CD0  0086               	movwf	6
  4603  0CD1  0871               	movf	Sensor_RawSample_Update@sensor+1,w
  4604  0CD2  0087               	movwf	7
  4605  0CD3  3146               	addfsr 1,6
  4606  0CD4  0020               	movlb	0	; select bank0
  4607  0CD5  083D               	movf	_packet_sample,w
  4608  0CD6  3FC0               	movwi [0]fsr1
  4609  0CD7  083E               	movf	_packet_sample+1,w
  4610  0CD8  3FC1               	movwi [1]fsr1
  4611  0CD9                     l324:
  4612  0CD9  0008               	return
  4613  0CDA                     __end_of_Sensor_RawSample_Update:
  4614                           
  4615                           	psect	text18
  4616  0B56                     __ptext18:	
  4617 ;; *************** function _Sensor_DefaultCallback *****************
  4618 ;; Defined at:
  4619 ;;		line 458 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  4620 ;; Parameters:    Size  Location     Type
  4621 ;;  sensor          1    0[COMMON] enum E2470
  4622 ;; Auto vars:     Size  Location     Type
  4623 ;;		None
  4624 ;; Return value:  Size  Location     Type
  4625 ;;                  1    wreg      void 
  4626 ;; Registers used:
  4627 ;;		None
  4628 ;; Tracked objects:
  4629 ;;		On entry : 0/0
  4630 ;;		On exit  : 0/0
  4631 ;;		Unchanged: 0/0
  4632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4633 ;;      Params:         1       0       0       0       0       0
  4634 ;;      Locals:         0       0       0       0       0       0
  4635 ;;      Temps:          0       0       0       0       0       0
  4636 ;;      Totals:         1       0       0       0       0       0
  4637 ;;Total ram usage:        1 bytes
  4638 ;; Hardware stack levels used:    1
  4639 ;; This function calls:
  4640 ;;		Nothing
  4641 ;; This function is called by:
  4642 ;;		_Sensor_Service
  4643 ;; This function uses a non-reentrant model
  4644 ;;
  4645                           
  4646                           
  4647                           ;psect for function _Sensor_DefaultCallback
  4648  0B56                     _Sensor_DefaultCallback:
  4649  0B56                     l327:	
  4650                           ;incstack = 0
  4651                           ; Regs used in _Sensor_DefaultCallback: []
  4652                           
  4653  0B56  0008               	return
  4654  0B57                     __end_of_Sensor_DefaultCallback:
  4655                           
  4656                           	psect	text19
  4657  024D                     __ptext19:	
  4658 ;; *************** function _Sensor_Acquisition *****************
  4659 ;; Defined at:
  4660 ;;		line 288 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  4661 ;; Parameters:    Size  Location     Type
  4662 ;;  sensor          2    5[BANK0 ] PTR struct .
  4663 ;;		 -> mtouch_sensor(90), 
  4664 ;; Auto vars:     Size  Location     Type
  4665 ;;  retry           1    8[BANK0 ] unsigned char 
  4666 ;; Return value:  Size  Location     Type
  4667 ;;                  1    wreg      enum E2481
  4668 ;; Registers used:
  4669 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4670 ;; Tracked objects:
  4671 ;;		On entry : 0/0
  4672 ;;		On exit  : 0/0
  4673 ;;		Unchanged: 0/0
  4674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4675 ;;      Params:         0       2       0       0       0       0
  4676 ;;      Locals:         0       1       0       0       0       0
  4677 ;;      Temps:          0       1       0       0       0       0
  4678 ;;      Totals:         0       4       0       0       0       0
  4679 ;;Total ram usage:        4 bytes
  4680 ;; Hardware stack levels used:    1
  4681 ;; Hardware stack levels required when called:    3
  4682 ;; This function calls:
  4683 ;;		_Sensor_Acq_ExecutePacket
  4684 ;;		_Sensor_isEnabled
  4685 ;;		_Sensor_setActive
  4686 ;;		_Sensor_setInactive
  4687 ;;		_abs
  4688 ;; This function is called by:
  4689 ;;		_Sensor_Service
  4690 ;; This function uses a non-reentrant model
  4691 ;;
  4692                           
  4693                           
  4694                           ;psect for function _Sensor_Acquisition
  4695  024D                     _Sensor_Acquisition:
  4696  024D                     l2902:	
  4697                           ;incstack = 0
  4698                           ; Regs used in _Sensor_Acquisition: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4699                           
  4700                           
  4701                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 288: static enum mtouch_sensor_error Sensor
      +                          _Acquisition(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 289: {
      +                          ;mcc_generated_files/mtouch/mtouch_sensor.c: 291:     uint8_t retry = (uint8_t)5u;
  4702  024D  3005               	movlw	5
  4703  024E  0020               	movlb	0	; select bank0
  4704  024F  00A7               	movwf	??_Sensor_Acquisition
  4705  0250  0827               	movf	??_Sensor_Acquisition,w
  4706  0251  00A8               	movwf	Sensor_Acquisition@retry
  4707  0252                     l2904:
  4708                           
  4709                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 293:     if(!Sensor_isEnabled(sensor))
  4710  0252  0826               	movf	Sensor_Acquisition@sensor+1,w
  4711  0253  00F1               	movwf	Sensor_isEnabled@sensor+1
  4712  0254  0825               	movf	Sensor_Acquisition@sensor,w
  4713  0255  00F0               	movwf	Sensor_isEnabled@sensor
  4714  0256  318B  23E1  3182   	fcall	_Sensor_isEnabled
  4715  0259  3A00               	xorlw	0
  4716  025A  1D03               	skipz
  4717  025B  2A5D               	goto	u1241
  4718  025C  2A5E               	goto	u1240
  4719  025D                     u1241:
  4720  025D  2A6A               	goto	l2916
  4721  025E                     u1240:
  4722  025E                     l2906:
  4723                           
  4724                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 294:         return MTOUCH_SENSOR_ERROR_non
      +                          e;
  4725  025E  3000               	movlw	0
  4726  025F  2AA1               	goto	l281
  4727  0260                     l2910:
  4728                           
  4729                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 297:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 298:         retry--;
  4730  0260  3001               	movlw	1
  4731  0261  0020               	movlb	0	; select bank0
  4732  0262  02A8               	subwf	Sensor_Acquisition@retry,f
  4733                           
  4734                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 299:         if(retry == 0)
  4735  0263  0828               	movf	Sensor_Acquisition@retry,w
  4736  0264  1D03               	btfss	3,2
  4737  0265  2A67               	goto	u1251
  4738  0266  2A68               	goto	u1250
  4739  0267                     u1251:
  4740  0267  2A6A               	goto	l2916
  4741  0268                     u1250:
  4742  0268                     l2912:
  4743                           
  4744                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 300:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 301:             return MTOUCH_SENSOR_ERROR_tooManyRetries;
  4745  0268  30FC               	movlw	252
  4746  0269  2AA1               	goto	l281
  4747  026A                     l2916:
  4748                           
  4749                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 296:     while(Sensor_Acq_ExecutePacket(sen
      +                          sor))
  4750  026A  0020               	movlb	0	; select bank0
  4751  026B  0826               	movf	Sensor_Acquisition@sensor+1,w
  4752  026C  00FD               	movwf	Sensor_Acq_ExecutePacket@sensor+1
  4753  026D  0825               	movf	Sensor_Acquisition@sensor,w
  4754  026E  00FC               	movwf	Sensor_Acq_ExecutePacket@sensor
  4755  026F  3182  22FC  3182   	fcall	_Sensor_Acq_ExecutePacket
  4756  0272  3A00               	xorlw	0
  4757  0273  1D03               	skipz
  4758  0274  2A76               	goto	u1261
  4759  0275  2A77               	goto	u1260
  4760  0276                     u1261:
  4761  0276  2A60               	goto	l2910
  4762  0277                     u1260:
  4763  0277                     l2918:
  4764                           
  4765                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 305:     if((mtouch_sensor_packetsample_t)a
      +                          bs(packet_sample - sensor->rawSample) > 100u)
  4766  0277  0020               	movlb	0	; select bank0
  4767  0278  0825               	movf	Sensor_Acquisition@sensor,w
  4768  0279  0086               	movwf	6
  4769  027A  0826               	movf	Sensor_Acquisition@sensor+1,w
  4770  027B  0087               	movwf	7
  4771  027C  3146               	addfsr 1,6
  4772  027D  3F40               	moviw [0]fsr1
  4773  027E  023D               	subwf	_packet_sample,w
  4774  027F  00F0               	movwf	abs@a
  4775  0280  3F41               	moviw [1]fsr1
  4776  0281  3B3E               	subwfb	_packet_sample+1,w
  4777  0282  00F1               	movwf	abs@a+1
  4778  0283  318C  248A  3182   	fcall	_abs
  4779  0286  3000               	movlw	0
  4780  0287  0271               	subwf	?_abs+1,w
  4781  0288  3065               	movlw	101
  4782  0289  1903               	skipnz
  4783  028A  0270               	subwf	?_abs,w
  4784  028B  1C03               	skipc
  4785  028C  2A8E               	goto	u1271
  4786  028D  2A8F               	goto	u1270
  4787  028E                     u1271:
  4788  028E  2A98               	goto	l2922
  4789  028F                     u1270:
  4790  028F                     l2920:
  4791                           
  4792                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 306:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 307:         Sensor_setActive(sensor);
  4793  028F  0020               	movlb	0	; select bank0
  4794  0290  0826               	movf	Sensor_Acquisition@sensor+1,w
  4795  0291  00F1               	movwf	Sensor_setActive@sensor+1
  4796  0292  0825               	movf	Sensor_Acquisition@sensor,w
  4797  0293  00F0               	movwf	Sensor_setActive@sensor
  4798  0294  318B  2381  3182   	fcall	_Sensor_setActive
  4799                           
  4800                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 308:     }
  4801  0297  2A5E               	goto	l2906
  4802  0298                     l2922:
  4803                           
  4804                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 310:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 311:         Sensor_setInactive(sensor);
  4805  0298  0020               	movlb	0	; select bank0
  4806  0299  0826               	movf	Sensor_Acquisition@sensor+1,w
  4807  029A  00F1               	movwf	Sensor_setInactive@sensor+1
  4808  029B  0825               	movf	Sensor_Acquisition@sensor,w
  4809  029C  00F0               	movwf	Sensor_setInactive@sensor
  4810  029D  318B  2388  3182   	fcall	_Sensor_setInactive
  4811  02A0  2A5E               	goto	l2906
  4812  02A1                     l281:
  4813  02A1  0008               	return
  4814  02A2                     __end_of_Sensor_Acquisition:
  4815                           
  4816                           	psect	text20
  4817  0C8A                     __ptext20:	
  4818 ;; *************** function _abs *****************
  4819 ;; Defined at:
  4820 ;;		line 1 in file "/Applications/microchip/xc8/v2.20/pic/sources/c99/common/abs.c"
  4821 ;; Parameters:    Size  Location     Type
  4822 ;;  a               2    0[COMMON] int 
  4823 ;; Auto vars:     Size  Location     Type
  4824 ;;		None
  4825 ;; Return value:  Size  Location     Type
  4826 ;;                  2    0[COMMON] int 
  4827 ;; Registers used:
  4828 ;;		wreg, status,2, status,0
  4829 ;; Tracked objects:
  4830 ;;		On entry : 0/0
  4831 ;;		On exit  : 0/0
  4832 ;;		Unchanged: 0/0
  4833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4834 ;;      Params:         2       0       0       0       0       0
  4835 ;;      Locals:         0       0       0       0       0       0
  4836 ;;      Temps:          2       0       0       0       0       0
  4837 ;;      Totals:         4       0       0       0       0       0
  4838 ;;Total ram usage:        4 bytes
  4839 ;; Hardware stack levels used:    1
  4840 ;; This function calls:
  4841 ;;		Nothing
  4842 ;; This function is called by:
  4843 ;;		_Sensor_Acquisition
  4844 ;; This function uses a non-reentrant model
  4845 ;;
  4846                           
  4847                           
  4848                           ;psect for function _abs
  4849  0C8A                     _abs:
  4850  0C8A                     l2852:	
  4851                           ;incstack = 0
  4852                           ; Regs used in _abs: [wreg+status,2+status,0]
  4853                           
  4854  0C8A  0871               	movf	abs@a+1,w
  4855  0C8B  3A80               	xorlw	128
  4856  0C8C  00F2               	movwf	??_abs
  4857  0C8D  3080               	movlw	128
  4858  0C8E  0272               	subwf	??_abs,w
  4859  0C8F  1D03               	skipz
  4860  0C90  2C93               	goto	u1185
  4861  0C91  3001               	movlw	1
  4862  0C92  0270               	subwf	abs@a,w
  4863  0C93                     u1185:
  4864  0C93  1803               	skipnc
  4865  0C94  2C96               	goto	u1181
  4866  0C95  2C97               	goto	u1180
  4867  0C96                     u1181:
  4868  0C96  2CA3               	goto	l1411
  4869  0C97                     u1180:
  4870  0C97                     l2854:
  4871  0C97  0970               	comf	abs@a,w
  4872  0C98  00F2               	movwf	??_abs
  4873  0C99  0971               	comf	abs@a+1,w
  4874  0C9A  00F3               	movwf	??_abs+1
  4875  0C9B  0AF2               	incf	??_abs,f
  4876  0C9C  1903               	skipnz
  4877  0C9D  0AF3               	incf	??_abs+1,f
  4878  0C9E  0872               	movf	??_abs,w
  4879  0C9F  00F0               	movwf	?_abs
  4880  0CA0  0873               	movf	??_abs+1,w
  4881  0CA1  00F1               	movwf	?_abs+1
  4882  0CA2  2CA3               	goto	l1414
  4883  0CA3                     l1411:
  4884  0CA3                     l1414:
  4885  0CA3  0008               	return
  4886  0CA4                     __end_of_abs:
  4887                           
  4888                           	psect	text21
  4889  0B88                     __ptext21:	
  4890 ;; *************** function _Sensor_setInactive *****************
  4891 ;; Defined at:
  4892 ;;		line 523 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  4893 ;; Parameters:    Size  Location     Type
  4894 ;;  sensor          2    0[COMMON] PTR struct .
  4895 ;;		 -> mtouch_sensor(90), 
  4896 ;; Auto vars:     Size  Location     Type
  4897 ;;		None
  4898 ;; Return value:  Size  Location     Type
  4899 ;;                  1    wreg      void 
  4900 ;; Registers used:
  4901 ;;		wreg, fsr1l, fsr1h
  4902 ;; Tracked objects:
  4903 ;;		On entry : 0/0
  4904 ;;		On exit  : 0/0
  4905 ;;		Unchanged: 0/0
  4906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4907 ;;      Params:         2       0       0       0       0       0
  4908 ;;      Locals:         0       0       0       0       0       0
  4909 ;;      Temps:          0       0       0       0       0       0
  4910 ;;      Totals:         2       0       0       0       0       0
  4911 ;;Total ram usage:        2 bytes
  4912 ;; Hardware stack levels used:    1
  4913 ;; This function calls:
  4914 ;;		Nothing
  4915 ;; This function is called by:
  4916 ;;		_Sensor_Acquisition
  4917 ;; This function uses a non-reentrant model
  4918 ;;
  4919                           
  4920                           
  4921                           ;psect for function _Sensor_setInactive
  4922  0B88                     _Sensor_setInactive:
  4923  0B88                     l2858:	
  4924                           ;incstack = 0
  4925                           ; Regs used in _Sensor_setInactive: [wregfsr1]
  4926                           
  4927                           
  4928                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 523: static __attribute__((inline)) void Se
      +                          nsor_setInactive(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 52
      +                          4: {;mcc_generated_files/mtouch/mtouch_sensor.c: 525:     sensor->active = 0;
  4929  0B88  0870               	movf	Sensor_setInactive@sensor,w
  4930  0B89  0086               	movwf	6
  4931  0B8A  0871               	movf	Sensor_setInactive@sensor+1,w
  4932  0B8B  0087               	movwf	7
  4933  0B8C  3148               	addfsr 1,8
  4934  0B8D  1101               	bcf	1,2
  4935  0B8E                     l357:
  4936  0B8E  0008               	return
  4937  0B8F                     __end_of_Sensor_setInactive:
  4938                           
  4939                           	psect	text22
  4940  0B81                     __ptext22:	
  4941 ;; *************** function _Sensor_setActive *****************
  4942 ;; Defined at:
  4943 ;;		line 518 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  4944 ;; Parameters:    Size  Location     Type
  4945 ;;  sensor          2    0[COMMON] PTR struct .
  4946 ;;		 -> mtouch_sensor(90), 
  4947 ;; Auto vars:     Size  Location     Type
  4948 ;;		None
  4949 ;; Return value:  Size  Location     Type
  4950 ;;                  1    wreg      void 
  4951 ;; Registers used:
  4952 ;;		wreg, fsr1l, fsr1h
  4953 ;; Tracked objects:
  4954 ;;		On entry : 0/0
  4955 ;;		On exit  : 0/0
  4956 ;;		Unchanged: 0/0
  4957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4958 ;;      Params:         2       0       0       0       0       0
  4959 ;;      Locals:         0       0       0       0       0       0
  4960 ;;      Temps:          0       0       0       0       0       0
  4961 ;;      Totals:         2       0       0       0       0       0
  4962 ;;Total ram usage:        2 bytes
  4963 ;; Hardware stack levels used:    1
  4964 ;; This function calls:
  4965 ;;		Nothing
  4966 ;; This function is called by:
  4967 ;;		_Sensor_Acquisition
  4968 ;; This function uses a non-reentrant model
  4969 ;;
  4970                           
  4971                           
  4972                           ;psect for function _Sensor_setActive
  4973  0B81                     _Sensor_setActive:
  4974  0B81                     l2856:	
  4975                           ;incstack = 0
  4976                           ; Regs used in _Sensor_setActive: [wregfsr1]
  4977                           
  4978                           
  4979                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 518: static __attribute__((inline)) void Se
      +                          nsor_setActive(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 519:
      +                           {;mcc_generated_files/mtouch/mtouch_sensor.c: 520:     sensor->active = 1;
  4980  0B81  0870               	movf	Sensor_setActive@sensor,w
  4981  0B82  0086               	movwf	6
  4982  0B83  0871               	movf	Sensor_setActive@sensor+1,w
  4983  0B84  0087               	movwf	7
  4984  0B85  3148               	addfsr 1,8
  4985  0B86  1501               	bsf	1,2
  4986  0B87                     l354:
  4987  0B87  0008               	return
  4988  0B88                     __end_of_Sensor_setActive:
  4989                           
  4990                           	psect	text23
  4991  0BE1                     __ptext23:	
  4992 ;; *************** function _Sensor_isEnabled *****************
  4993 ;; Defined at:
  4994 ;;		line 503 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  4995 ;; Parameters:    Size  Location     Type
  4996 ;;  sensor          2    0[COMMON] PTR struct .
  4997 ;;		 -> mtouch_sensor(90), 
  4998 ;; Auto vars:     Size  Location     Type
  4999 ;;		None
  5000 ;; Return value:  Size  Location     Type
  5001 ;;                  1    wreg      _Bool 
  5002 ;; Registers used:
  5003 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5004 ;; Tracked objects:
  5005 ;;		On entry : 0/0
  5006 ;;		On exit  : 0/0
  5007 ;;		Unchanged: 0/0
  5008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5009 ;;      Params:         2       0       0       0       0       0
  5010 ;;      Locals:         0       0       0       0       0       0
  5011 ;;      Temps:          0       0       0       0       0       0
  5012 ;;      Totals:         2       0       0       0       0       0
  5013 ;;Total ram usage:        2 bytes
  5014 ;; Hardware stack levels used:    1
  5015 ;; This function calls:
  5016 ;;		Nothing
  5017 ;; This function is called by:
  5018 ;;		_Sensor_Service
  5019 ;;		_Sensor_Acquisition
  5020 ;; This function uses a non-reentrant model
  5021 ;;
  5022                           
  5023                           
  5024                           ;psect for function _Sensor_isEnabled
  5025  0BE1                     _Sensor_isEnabled:
  5026  0BE1                     l2802:	
  5027                           ;incstack = 0
  5028                           ; Regs used in _Sensor_isEnabled: [wreg+fsr1l+fsr1h+status,2+status,0]
  5029                           
  5030                           
  5031                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 503: static _Bool Sensor_isEnabled(mtouch_s
      +                          ensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 504: {;mcc_generated_files/
      +                          mtouch/mtouch_sensor.c: 505:     if(sensor!=((void*)0))
  5032  0BE1  0870               	movf	Sensor_isEnabled@sensor,w
  5033  0BE2  0471               	iorwf	Sensor_isEnabled@sensor+1,w
  5034  0BE3  1903               	btfsc	3,2
  5035  0BE4  2BE6               	goto	u1141
  5036  0BE5  2BE7               	goto	u1140
  5037  0BE6                     u1141:
  5038  0BE6  2BEF               	goto	l2810
  5039  0BE7                     u1140:
  5040  0BE7                     l2804:
  5041                           
  5042                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 506:         return (_Bool)sensor->enabled;
  5043  0BE7  0870               	movf	Sensor_isEnabled@sensor,w
  5044  0BE8  0086               	movwf	6
  5045  0BE9  0871               	movf	Sensor_isEnabled@sensor+1,w
  5046  0BEA  0087               	movwf	7
  5047  0BEB  3148               	addfsr 1,8
  5048  0BEC  0801               	movf	1,w
  5049  0BED  3901               	andlw	1
  5050  0BEE  2BF0               	goto	l350
  5051  0BEF                     l2810:
  5052                           
  5053                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 508:         return 0;
  5054  0BEF  3000               	movlw	0
  5055  0BF0                     l350:
  5056  0BF0  0008               	return
  5057  0BF1                     __end_of_Sensor_isEnabled:
  5058                           
  5059                           	psect	text24
  5060  02FC                     __ptext24:	
  5061 ;; *************** function _Sensor_Acq_ExecutePacket *****************
  5062 ;; Defined at:
  5063 ;;		line 323 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5064 ;; Parameters:    Size  Location     Type
  5065 ;;  sensor          2   12[COMMON] PTR struct .
  5066 ;;		 -> mtouch_sensor(90), 
  5067 ;; Auto vars:     Size  Location     Type
  5068 ;;  error           1    4[BANK0 ] enum E2481
  5069 ;;  GIE_state       1    3[BANK0 ] unsigned char 
  5070 ;;  ADCON1_temp     1    2[BANK0 ] unsigned char 
  5071 ;;  ADCON0_temp     1    1[BANK0 ] unsigned char 
  5072 ;; Return value:  Size  Location     Type
  5073 ;;                  1    wreg      enum E2481
  5074 ;; Registers used:
  5075 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5076 ;; Tracked objects:
  5077 ;;		On entry : 0/0
  5078 ;;		On exit  : 0/0
  5079 ;;		Unchanged: 0/0
  5080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5081 ;;      Params:         2       0       0       0       0       0
  5082 ;;      Locals:         0       4       0       0       0       0
  5083 ;;      Temps:          0       1       0       0       0       0
  5084 ;;      Totals:         2       5       0       0       0       0
  5085 ;;Total ram usage:        7 bytes
  5086 ;; Hardware stack levels used:    1
  5087 ;; Hardware stack levels required when called:    2
  5088 ;; This function calls:
  5089 ;;		_MTOUCH_Delay
  5090 ;;		_MTOUCH_Random
  5091 ;;		_MTOUCH_Sensor_Scan_Initialize
  5092 ;;		_Sensor_Acq_ExecuteScan
  5093 ;;		_Sensor_setScanFunction
  5094 ;; This function is called by:
  5095 ;;		_Sensor_Acquisition
  5096 ;; This function uses a non-reentrant model
  5097 ;;
  5098                           
  5099                           
  5100                           ;psect for function _Sensor_Acq_ExecutePacket
  5101  02FC                     _Sensor_Acq_ExecutePacket:
  5102  02FC                     l2814:	
  5103                           ;incstack = 0
  5104                           ; Regs used in _Sensor_Acq_ExecutePacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5105                           
  5106                           
  5107                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 323: static enum mtouch_sensor_error Sensor
      +                          _Acq_ExecutePacket(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 
      +                          324: {;mcc_generated_files/mtouch/mtouch_sensor.c: 326:     enum mtouch_sensor_error err
      +                          or = MTOUCH_SENSOR_ERROR_none;
  5108  02FC  0020               	movlb	0	; select bank0
  5109  02FD  01A4               	clrf	Sensor_Acq_ExecutePacket@error
  5110  02FE                     l2816:
  5111                           
  5112                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 327:     uint8_t ADCON0_temp;;mcc_generated
      +                          _files/mtouch/mtouch_sensor.c: 328:     uint8_t ADCON1_temp;;mcc_generated_files/mtouch/
      +                          mtouch_sensor.c: 330:     uint8_t GIE_state;;mcc_generated_files/mtouch/mtouch_sensor.c:
      +                           332:     ADCON0_temp = ADCON0;
  5113  02FE  0021               	movlb	1	; select bank1
  5114  02FF  081D               	movf	29,w	;volatile
  5115  0300  0020               	movlb	0	; select bank0
  5116  0301  00A0               	movwf	??_Sensor_Acq_ExecutePacket
  5117  0302  0820               	movf	??_Sensor_Acq_ExecutePacket,w
  5118  0303  00A1               	movwf	Sensor_Acq_ExecutePacket@ADCON0_temp
  5119  0304                     l2818:
  5120                           
  5121                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 333:     ADCON1_temp = ADCON1;
  5122  0304  0021               	movlb	1	; select bank1
  5123  0305  081E               	movf	30,w	;volatile
  5124  0306  0020               	movlb	0	; select bank0
  5125  0307  00A0               	movwf	??_Sensor_Acq_ExecutePacket
  5126  0308  0820               	movf	??_Sensor_Acq_ExecutePacket,w
  5127  0309  00A2               	movwf	Sensor_Acq_ExecutePacket@ADCON1_temp
  5128  030A                     l2820:
  5129                           
  5130                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 334:     MTOUCH_Sensor_Scan_Initialize();
  5131  030A  318B  2363  3182   	fcall	_MTOUCH_Sensor_Scan_Initialize
  5132  030D                     l2822:
  5133                           
  5134                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 336:     GIE_state = INTCONbits.GIE;
  5135  030D  3000               	movlw	0
  5136  030E  1B8B               	btfsc	11,7	;volatile
  5137  030F  3001               	movlw	1
  5138  0310  0020               	movlb	0	; select bank0
  5139  0311  00A3               	movwf	Sensor_Acq_ExecutePacket@GIE_state
  5140  0312                     l2824:
  5141                           
  5142                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 338:     Sensor_setScanFunction(sensor);
  5143  0312  087D               	movf	Sensor_Acq_ExecutePacket@sensor+1,w
  5144  0313  00F1               	movwf	Sensor_setScanFunction@sensor+1
  5145  0314  087C               	movf	Sensor_Acq_ExecutePacket@sensor,w
  5146  0315  00F0               	movwf	Sensor_setScanFunction@sensor
  5147  0316  318C  2448  3182   	fcall	_Sensor_setScanFunction
  5148                           
  5149                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 340:     currentScannSensor = sensor->senso
      +                          r_name;
  5150  0319  087C               	movf	Sensor_Acq_ExecutePacket@sensor,w
  5151  031A  0086               	movwf	6
  5152  031B  087D               	movf	Sensor_Acq_ExecutePacket@sensor+1,w
  5153  031C  0087               	movwf	7
  5154  031D  0801               	movf	1,w
  5155  031E  0020               	movlb	0	; select bank0
  5156  031F  00A0               	movwf	??_Sensor_Acq_ExecutePacket
  5157  0320  0820               	movf	??_Sensor_Acq_ExecutePacket,w
  5158  0321  00C7               	movwf	_currentScannSensor
  5159                           
  5160                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 341:     packet_counter = sensor->oversampl
      +                          ing;
  5161  0322  087C               	movf	Sensor_Acq_ExecutePacket@sensor,w
  5162  0323  0086               	movwf	6
  5163  0324  087D               	movf	Sensor_Acq_ExecutePacket@sensor+1,w
  5164  0325  0087               	movwf	7
  5165  0326  3145               	addfsr 1,5
  5166  0327  0801               	movf	1,w
  5167  0328  00A0               	movwf	??_Sensor_Acq_ExecutePacket
  5168  0329  0820               	movf	??_Sensor_Acq_ExecutePacket,w
  5169  032A  00C6               	movwf	_packet_counter
  5170  032B                     l2826:
  5171                           
  5172                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 342:     packet_sample = 0;
  5173  032B  01BD               	clrf	_packet_sample
  5174  032C  01BE               	clrf	_packet_sample+1
  5175  032D                     l2828:
  5176                           
  5177                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 343:     sensor_globalFlags.packet_done = 0
      +                          ;
  5178  032D  1048               	bcf	_sensor_globalFlags,0	;volatile
  5179  032E                     l2830:
  5180                           
  5181                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 344:     sample_delay = MTOUCH_Random();
  5182  032E  318C  245C  3182   	fcall	_MTOUCH_Random
  5183  0331  0020               	movlb	0	; select bank0
  5184  0332  00A0               	movwf	??_Sensor_Acq_ExecutePacket
  5185  0333  0820               	movf	??_Sensor_Acq_ExecutePacket,w
  5186  0334  00C5               	movwf	_sample_delay
  5187  0335                     l2832:
  5188                           
  5189                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 345:     packet_sample = 0;
  5190  0335  01BD               	clrf	_packet_sample
  5191  0336  01BE               	clrf	_packet_sample+1
  5192  0337                     l2834:
  5193                           
  5194                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 347:     sensor_globalFlags.interrupted = 0
      +                          ;
  5195  0337  10C8               	bcf	_sensor_globalFlags,1	;volatile
  5196  0338                     l2836:
  5197                           
  5198                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 351:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 352:         INTCONbits.GIE = (uint8_t)0;
  5199  0338  138B               	bcf	11,7	;volatile
  5200  0339                     l2838:
  5201                           
  5202                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 353:         Sensor_Acq_ExecuteScan();
  5203  0339  3183  2361  3182   	fcall	_Sensor_Acq_ExecuteScan
  5204  033C                     l2840:
  5205                           
  5206                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 354:         INTCONbits.GIE = GIE_state;
  5207  033C  0020               	movlb	0	; select bank0
  5208  033D  0C23               	rrf	Sensor_Acq_ExecutePacket@GIE_state,w
  5209  033E  1C03               	skipc
  5210  033F  138B               	bcf	11,7	;volatile
  5211  0340  1803               	skipnc
  5212  0341  178B               	bsf	11,7	;volatile
  5213  0342                     l2842:
  5214                           
  5215                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 355:         MTOUCH_Delay();
  5216  0342  318C  2435  3182   	fcall	_MTOUCH_Delay
  5217  0345                     l291:	
  5218                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 356:         while(ADCON0bits.GO_nDONE == 1
      +                          );
  5219                           
  5220  0345  0021               	movlb	1	; select bank1
  5221  0346  189D               	btfsc	29,1	;volatile
  5222  0347  2B49               	goto	u1151
  5223  0348  2B4A               	goto	u1150
  5224  0349                     u1151:
  5225  0349  2B45               	goto	l291
  5226  034A                     u1150:
  5227  034A                     l293:
  5228                           
  5229                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 357:     } while(sensor_globalFlags.packet_
      +                          done == 0);
  5230  034A  0020               	movlb	0	; select bank0
  5231  034B  1C48               	btfss	_sensor_globalFlags,0	;volatile
  5232  034C  2B4E               	goto	u1161
  5233  034D  2B4F               	goto	u1160
  5234  034E                     u1161:
  5235  034E  2B38               	goto	l2836
  5236  034F                     u1160:
  5237  034F                     l2844:
  5238                           
  5239                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 360:     ADCON0 = ADCON0_temp;
  5240  034F  0821               	movf	Sensor_Acq_ExecutePacket@ADCON0_temp,w
  5241  0350  0021               	movlb	1	; select bank1
  5242  0351  009D               	movwf	29	;volatile
  5243                           
  5244                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 361:     ADCON1 = ADCON1_temp;
  5245  0352  0020               	movlb	0	; select bank0
  5246  0353  0822               	movf	Sensor_Acq_ExecutePacket@ADCON1_temp,w
  5247  0354  0021               	movlb	1	; select bank1
  5248  0355  009E               	movwf	30	;volatile
  5249  0356                     l2846:
  5250                           
  5251                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 363:     if(sensor_globalFlags.interrupted)
  5252  0356  0020               	movlb	0	; select bank0
  5253  0357  1CC8               	btfss	_sensor_globalFlags,1	;volatile
  5254  0358  2B5A               	goto	u1171
  5255  0359  2B5B               	goto	u1170
  5256  035A                     u1171:
  5257  035A  2B5F               	goto	l295
  5258  035B                     u1170:
  5259  035B                     l2848:
  5260                           
  5261                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 364:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 365:         error = MTOUCH_SENSOR_ERROR_interruptedScan;
  5262  035B  30FA               	movlw	250
  5263  035C  00A0               	movwf	??_Sensor_Acq_ExecutePacket
  5264  035D  0820               	movf	??_Sensor_Acq_ExecutePacket,w
  5265  035E  00A4               	movwf	Sensor_Acq_ExecutePacket@error
  5266  035F                     l295:	
  5267                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 366:     }
  5268                           
  5269                           
  5270                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 368:     return error;
  5271  035F  0824               	movf	Sensor_Acq_ExecutePacket@error,w
  5272  0360                     l296:
  5273  0360  0008               	return
  5274  0361                     __end_of_Sensor_Acq_ExecutePacket:
  5275                           
  5276                           	psect	text25
  5277  0C48                     __ptext25:	
  5278 ;; *************** function _Sensor_setScanFunction *****************
  5279 ;; Defined at:
  5280 ;;		line 470 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5281 ;; Parameters:    Size  Location     Type
  5282 ;;  sensor          2    0[COMMON] PTR struct .
  5283 ;;		 -> mtouch_sensor(90), 
  5284 ;; Auto vars:     Size  Location     Type
  5285 ;;		None
  5286 ;; Return value:  Size  Location     Type
  5287 ;;                  1    wreg      void 
  5288 ;; Registers used:
  5289 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5290 ;; Tracked objects:
  5291 ;;		On entry : 0/0
  5292 ;;		On exit  : 0/0
  5293 ;;		Unchanged: 0/0
  5294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5295 ;;      Params:         2       0       0       0       0       0
  5296 ;;      Locals:         0       0       0       0       0       0
  5297 ;;      Temps:          0       0       0       0       0       0
  5298 ;;      Totals:         2       0       0       0       0       0
  5299 ;;Total ram usage:        2 bytes
  5300 ;; Hardware stack levels used:    1
  5301 ;; This function calls:
  5302 ;;		Nothing
  5303 ;; This function is called by:
  5304 ;;		_Sensor_Acq_ExecutePacket
  5305 ;; This function uses a non-reentrant model
  5306 ;;
  5307                           
  5308                           
  5309                           ;psect for function _Sensor_setScanFunction
  5310  0C48                     _Sensor_setScanFunction:
  5311  0C48                     l2738:	
  5312                           ;incstack = 0
  5313                           ; Regs used in _Sensor_setScanFunction: [wreg+fsr1l+fsr1h+status,2+status,0]
  5314                           
  5315  0C48  0870               	movf	Sensor_setScanFunction@sensor,w
  5316  0C49  0086               	movwf	6
  5317  0C4A  0871               	movf	Sensor_setScanFunction@sensor+1,w
  5318  0C4B  0087               	movwf	7
  5319  0C4C  3141               	addfsr 1,1
  5320  0C4D  3F40               	moviw [0]fsr1
  5321  0C4E  0020               	movlb	0	; select bank0
  5322  0C4F  00D8               	movwf	_Sensor_scanA
  5323  0C50  3F41               	moviw [1]fsr1
  5324  0C51  00D9               	movwf	_Sensor_scanA+1
  5325  0C52  0870               	movf	Sensor_setScanFunction@sensor,w
  5326  0C53  0086               	movwf	6
  5327  0C54  0871               	movf	Sensor_setScanFunction@sensor+1,w
  5328  0C55  0087               	movwf	7
  5329  0C56  3143               	addfsr 1,3
  5330  0C57  3F40               	moviw [0]fsr1
  5331  0C58  00D6               	movwf	_Sensor_scanB
  5332  0C59  3F41               	moviw [1]fsr1
  5333  0C5A  00D7               	movwf	_Sensor_scanB+1
  5334  0C5B                     l333:
  5335  0C5B  0008               	return
  5336  0C5C                     __end_of_Sensor_setScanFunction:
  5337                           
  5338                           	psect	text26
  5339  0361                     __ptext26:	
  5340 ;; *************** function _Sensor_Acq_ExecuteScan *****************
  5341 ;; Defined at:
  5342 ;;		line 387 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5343 ;; Parameters:    Size  Location     Type
  5344 ;;		None
  5345 ;; Auto vars:     Size  Location     Type
  5346 ;;  result          2   10[COMMON] unsigned short 
  5347 ;; Return value:  Size  Location     Type
  5348 ;;                  1    wreg      void 
  5349 ;; Registers used:
  5350 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5351 ;; Tracked objects:
  5352 ;;		On entry : 0/0
  5353 ;;		On exit  : 0/0
  5354 ;;		Unchanged: 0/0
  5355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5356 ;;      Params:         0       0       0       0       0       0
  5357 ;;      Locals:         2       0       0       0       0       0
  5358 ;;      Temps:          4       0       0       0       0       0
  5359 ;;      Totals:         6       0       0       0       0       0
  5360 ;;Total ram usage:        6 bytes
  5361 ;; Hardware stack levels used:    1
  5362 ;; Hardware stack levels required when called:    1
  5363 ;; This function calls:
  5364 ;;		_MTOUCH_CVD_ScanA_0
  5365 ;;		_MTOUCH_CVD_ScanA_1
  5366 ;;		_MTOUCH_CVD_ScanA_2
  5367 ;;		_MTOUCH_CVD_ScanA_3
  5368 ;;		_MTOUCH_CVD_ScanA_4
  5369 ;;		_MTOUCH_CVD_ScanA_5
  5370 ;;		_MTOUCH_CVD_ScanA_6
  5371 ;;		_MTOUCH_CVD_ScanA_7
  5372 ;;		_MTOUCH_CVD_ScanA_8
  5373 ;;		_MTOUCH_CVD_ScanA_9
  5374 ;;		_MTOUCH_CVD_ScanB_0
  5375 ;;		_MTOUCH_CVD_ScanB_1
  5376 ;;		_MTOUCH_CVD_ScanB_2
  5377 ;;		_MTOUCH_CVD_ScanB_3
  5378 ;;		_MTOUCH_CVD_ScanB_4
  5379 ;;		_MTOUCH_CVD_ScanB_5
  5380 ;;		_MTOUCH_CVD_ScanB_6
  5381 ;;		_MTOUCH_CVD_ScanB_7
  5382 ;;		_MTOUCH_CVD_ScanB_8
  5383 ;;		_MTOUCH_CVD_ScanB_9
  5384 ;;		___wmul
  5385 ;; This function is called by:
  5386 ;;		_Sensor_Acq_ExecutePacket
  5387 ;; This function uses a non-reentrant model
  5388 ;;
  5389                           
  5390                           
  5391                           ;psect for function _Sensor_Acq_ExecuteScan
  5392  0361                     _Sensor_Acq_ExecuteScan:
  5393  0361                     l2740:	
  5394                           ;incstack = 0
  5395                           ; Regs used in _Sensor_Acq_ExecuteScan: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5396                           
  5397                           
  5398                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 390:     mtouch_sensor_adcsample_t result =
      +                           ADRES;
  5399  0361  0021               	movlb	1	; select bank1
  5400  0362  081C               	movf	28,w	;volatile
  5401  0363  00FB               	movwf	Sensor_Acq_ExecuteScan@result+1
  5402  0364  081B               	movf	27,w	;volatile
  5403  0365  00FA               	movwf	Sensor_Acq_ExecuteScan@result
  5404  0366                     l2742:
  5405                           
  5406                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 392:     if(sensor_globalFlags.packet_done)
  5407  0366  0020               	movlb	0	; select bank0
  5408  0367  1C48               	btfss	_sensor_globalFlags,0	;volatile
  5409  0368  2B6A               	goto	u1061
  5410  0369  2B6B               	goto	u1060
  5411  036A                     u1061:
  5412  036A  2B6C               	goto	l2746
  5413  036B                     u1060:
  5414  036B  2BC9               	goto	l305
  5415  036C                     l2746:
  5416                           
  5417                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 395:     if (packet_counter != (uint8_t)0)
  5418  036C  0846               	movf	_packet_counter,w
  5419  036D  1903               	btfsc	3,2
  5420  036E  2B70               	goto	u1071
  5421  036F  2B71               	goto	u1070
  5422  0370                     u1071:
  5423  0370  2BC4               	goto	l2768
  5424  0371                     u1070:
  5425  0371  2B7E               	goto	l2756
  5426  0372                     l2750:
  5427  0372  0859               	movf	_Sensor_scanA+1,w
  5428  0373  008A               	movwf	10
  5429  0374  0858               	movf	_Sensor_scanA,w
  5430  0375  000A               	callw
  5431  0376  3183               	pagesel	$
  5432  0377  2B8F               	goto	l2758
  5433  0378                     l2752:
  5434  0378  0857               	movf	_Sensor_scanB+1,w
  5435  0379  008A               	movwf	10
  5436  037A  0856               	movf	_Sensor_scanB,w
  5437  037B  000A               	callw
  5438  037C  3183               	pagesel	$
  5439  037D  2B8F               	goto	l2758
  5440  037E                     l2756:
  5441  037E  0846               	movf	_packet_counter,w
  5442  037F  3901               	andlw	1
  5443  0380  00F6               	movwf	??_Sensor_Acq_ExecuteScan
  5444  0381  01F7               	clrf	??_Sensor_Acq_ExecuteScan+1
  5445                           
  5446                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5447                           ; Switch size 1, requested type "simple"
  5448                           ; Number of cases is 1, Range of values is 0 to 0
  5449                           ; switch strategies available:
  5450                           ; Name         Instructions Cycles
  5451                           ; simple_byte            4     3 (average)
  5452                           ; direct_byte            8     6 (fixed)
  5453                           ; jumptable            260     6 (fixed)
  5454                           ;	Chosen strategy is simple_byte
  5455  0382  0877               	movf	??_Sensor_Acq_ExecuteScan+1,w
  5456  0383  3A00               	xorlw	0	; case 0
  5457  0384  1903               	skipnz
  5458  0385  2B87               	goto	l3518
  5459  0386  2B8F               	goto	l2758
  5460  0387                     l3518:
  5461                           
  5462                           ; Switch size 1, requested type "simple"
  5463                           ; Number of cases is 2, Range of values is 0 to 1
  5464                           ; switch strategies available:
  5465                           ; Name         Instructions Cycles
  5466                           ; simple_byte            7     4 (average)
  5467                           ; direct_byte           10     6 (fixed)
  5468                           ; jumptable            260     6 (fixed)
  5469                           ;	Chosen strategy is simple_byte
  5470  0387  0876               	movf	??_Sensor_Acq_ExecuteScan,w
  5471  0388  3A00               	xorlw	0	; case 0
  5472  0389  1903               	skipnz
  5473  038A  2B72               	goto	l2750
  5474  038B  3A01               	xorlw	1	; case 1
  5475  038C  1903               	skipnz
  5476  038D  2B78               	goto	l2752
  5477  038E  2B8F               	goto	l2758
  5478  038F                     l2758:
  5479  038F  0020               	movlb	0	; select bank0
  5480  0390  0847               	movf	_currentScannSensor,w
  5481  0391  00F6               	movwf	??_Sensor_Acq_ExecuteScan
  5482  0392  01F7               	clrf	??_Sensor_Acq_ExecuteScan+1
  5483  0393  0876               	movf	??_Sensor_Acq_ExecuteScan,w
  5484  0394  00F0               	movwf	___wmul@multiplier
  5485  0395  0877               	movf	??_Sensor_Acq_ExecuteScan+1,w
  5486  0396  00F1               	movwf	___wmul@multiplier+1
  5487  0397  3009               	movlw	9
  5488  0398  00F2               	movwf	___wmul@multiplicand
  5489  0399  3000               	movlw	0
  5490  039A  00F3               	movwf	___wmul@multiplicand+1
  5491  039B  318C  24DA  3183   	fcall	___wmul
  5492  039E  3071               	movlw	113
  5493  039F  00F8               	movwf	??_Sensor_Acq_ExecuteScan+2
  5494  03A0  3020               	movlw	32
  5495  03A1  00F9               	movwf	??_Sensor_Acq_ExecuteScan+3
  5496  03A2  0870               	movf	?___wmul,w
  5497  03A3  0778               	addwf	??_Sensor_Acq_ExecuteScan+2,w
  5498  03A4  0086               	movwf	6
  5499  03A5  0871               	movf	?___wmul+1,w
  5500  03A6  3D79               	addwfc	??_Sensor_Acq_ExecuteScan+3,w
  5501  03A7  0087               	movwf	7
  5502  03A8  0801               	movf	1,w
  5503  03A9  0020               	movlb	0	; select bank0
  5504  03AA  0646               	xorwf	_packet_counter,w
  5505  03AB  1903               	skipnz
  5506  03AC  2BAE               	goto	u1081
  5507  03AD  2BAF               	goto	u1080
  5508  03AE                     u1081:
  5509  03AE  2BC1               	goto	l2766
  5510  03AF                     u1080:
  5511  03AF                     l2760:
  5512  03AF  1C46               	btfss	_packet_counter,0
  5513  03B0  2BB2               	goto	u1091
  5514  03B1  2BB3               	goto	u1090
  5515  03B2                     u1091:
  5516  03B2  2BBD               	goto	l2764
  5517  03B3                     u1090:
  5518  03B3                     l2762:
  5519  03B3  3000               	movlw	0
  5520  03B4  00F6               	movwf	??_Sensor_Acq_ExecuteScan
  5521  03B5  3004               	movlw	4
  5522  03B6  00F7               	movwf	??_Sensor_Acq_ExecuteScan+1
  5523  03B7  087A               	movf	Sensor_Acq_ExecuteScan@result,w
  5524  03B8  0276               	subwf	??_Sensor_Acq_ExecuteScan,w
  5525  03B9  00FA               	movwf	Sensor_Acq_ExecuteScan@result
  5526  03BA  087B               	movf	Sensor_Acq_ExecuteScan@result+1,w
  5527  03BB  3B77               	subwfb	??_Sensor_Acq_ExecuteScan+1,w
  5528  03BC  00FB               	movwf	Sensor_Acq_ExecuteScan@result+1
  5529  03BD                     l2764:
  5530  03BD  087A               	movf	Sensor_Acq_ExecuteScan@result,w
  5531  03BE  07BD               	addwf	_packet_sample,f
  5532  03BF  087B               	movf	Sensor_Acq_ExecuteScan@result+1,w
  5533  03C0  3DBE               	addwfc	_packet_sample+1,f
  5534  03C1                     l2766:
  5535  03C1  3001               	movlw	1
  5536  03C2  02C6               	subwf	_packet_counter,f
  5537  03C3  2BC9               	goto	l305
  5538  03C4                     l2768:
  5539  03C4  087A               	movf	Sensor_Acq_ExecuteScan@result,w
  5540  03C5  07BD               	addwf	_packet_sample,f
  5541  03C6  087B               	movf	Sensor_Acq_ExecuteScan@result+1,w
  5542  03C7  3DBE               	addwfc	_packet_sample+1,f
  5543  03C8                     l2770:
  5544  03C8  1448               	bsf	_sensor_globalFlags,0	;volatile
  5545  03C9                     l305:
  5546  03C9  0008               	return
  5547  03CA                     __end_of_Sensor_Acq_ExecuteScan:
  5548                           
  5549                           	psect	text27
  5550  0F59                     __ptext27:	
  5551 ;; *************** function _MTOUCH_CVD_ScanB_8 *****************
  5552 ;; Defined at:
  5553 ;;		line 1129 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  5554 ;; Parameters:    Size  Location     Type
  5555 ;;		None
  5556 ;; Auto vars:     Size  Location     Type
  5557 ;;		None
  5558 ;; Return value:  Size  Location     Type
  5559 ;;                  1    wreg      void 
  5560 ;; Registers used:
  5561 ;;		wreg
  5562 ;; Tracked objects:
  5563 ;;		On entry : 0/0
  5564 ;;		On exit  : 0/0
  5565 ;;		Unchanged: 0/0
  5566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5567 ;;      Params:         0       0       0       0       0       0
  5568 ;;      Locals:         0       0       0       0       0       0
  5569 ;;      Temps:          0       0       0       0       0       0
  5570 ;;      Totals:         0       0       0       0       0       0
  5571 ;;Total ram usage:        0 bytes
  5572 ;; Hardware stack levels used:    1
  5573 ;; This function calls:
  5574 ;;		Nothing
  5575 ;; This function is called by:
  5576 ;;		_Sensor_Acq_ExecuteScan
  5577 ;; This function uses a non-reentrant model
  5578 ;;
  5579                           
  5580                           
  5581                           ;psect for function _MTOUCH_CVD_ScanB_8
  5582  0F59                     _MTOUCH_CVD_ScanB_8:
  5583  0F59                     l2678:	
  5584                           ;incstack = 0
  5585                           ; Regs used in _MTOUCH_CVD_ScanB_8: [wreg]
  5586                           
  5587  0F59  0022               	banksel	269	;# 
  5588  0F5A  128D               	bcf	13,5	;# 
  5589  0F5B  0021               	banksel	157	;# 
  5590  0F5C  301D               	movlw	29	;# 
  5591  0F5D  009D               	movwf	29	;# 
  5592  0F5E                     l2680:
  5593                           
  5594                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1141:     _delay(16u);
  5595  0F5E  3005               	movlw	5
  5596  0F5F                     u2007:
  5597  0F5F  0B89               	decfsz	9,f
  5598  0F60  2F5F               	goto	u2007
  5599  0F61  0000               	nop
  5600  0F62  308D               	movlw	141	;# 
  5601  0F63  0084               	movwf	4	;# 
  5602  0F64  3000               	movlw	0	;# 
  5603  0F65  0085               	movwf	5	;# 
  5604  0F66  300D               	movlw	13	;# 
  5605  0F67  0086               	movwf	6	;# 
  5606  0F68  3001               	movlw	1	;# 
  5607  0F69  0087               	movwf	7	;# 
  5608  0F6A  3015               	movlw	21	;# 
  5609  0F6B  1700               	bsf	0,6	;# 
  5610  0F6C                     l2682:
  5611                           
  5612                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1159:     _delay(0u);
  5613  0F6C  009D               	movwf	29	;# 
  5614  0F6D                     l2684:
  5615                           
  5616                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1166:     _delay(8u);
  5617  0F6D  3200               	nop2	;2 cycle nop
  5618  0F6E  3200               	nop2	;2 cycle nop
  5619  0F6F  3200               	nop2	;2 cycle nop
  5620  0F70  3200               	nop2	;2 cycle nop
  5621  0F71  0021               	banksel	157	;# 
  5622  0F72  149D               	bsf	29,1	;# 
  5623  0F73                     l2686:
  5624                           
  5625                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1173:     _delay(3u);
  5626  0F73  3200               	nop2	;2 cycle nop
  5627  0F74  0000               	nop
  5628  0F75  0022               	banksel	269	;# 
  5629  0F76  130D               	bcf	13,6	;# 
  5630  0F77  1300               	bcf	0,6	;# 
  5631  0F78                     l124:
  5632  0F78  0008               	return
  5633  0F79                     __end_of_MTOUCH_CVD_ScanB_8:
  5634                           
  5635                           	psect	text28
  5636  0F39                     __ptext28:	
  5637 ;; *************** function _MTOUCH_CVD_ScanB_7 *****************
  5638 ;; Defined at:
  5639 ;;		line 1002 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  5640 ;; Parameters:    Size  Location     Type
  5641 ;;		None
  5642 ;; Auto vars:     Size  Location     Type
  5643 ;;		None
  5644 ;; Return value:  Size  Location     Type
  5645 ;;                  1    wreg      void 
  5646 ;; Registers used:
  5647 ;;		wreg
  5648 ;; Tracked objects:
  5649 ;;		On entry : 0/0
  5650 ;;		On exit  : 0/0
  5651 ;;		Unchanged: 0/0
  5652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5653 ;;      Params:         0       0       0       0       0       0
  5654 ;;      Locals:         0       0       0       0       0       0
  5655 ;;      Temps:          0       0       0       0       0       0
  5656 ;;      Totals:         0       0       0       0       0       0
  5657 ;;Total ram usage:        0 bytes
  5658 ;; Hardware stack levels used:    1
  5659 ;; This function calls:
  5660 ;;		Nothing
  5661 ;; This function is called by:
  5662 ;;		_Sensor_Acq_ExecuteScan
  5663 ;; This function uses a non-reentrant model
  5664 ;;
  5665                           
  5666                           
  5667                           ;psect for function _MTOUCH_CVD_ScanB_7
  5668  0F39                     _MTOUCH_CVD_ScanB_7:
  5669  0F39                     l2658:	
  5670                           ;incstack = 0
  5671                           ; Regs used in _MTOUCH_CVD_ScanB_7: [wreg]
  5672                           
  5673  0F39  0022               	banksel	269	;# 
  5674  0F3A  120D               	bcf	13,4	;# 
  5675  0F3B  0021               	banksel	157	;# 
  5676  0F3C  3021               	movlw	33	;# 
  5677  0F3D  009D               	movwf	29	;# 
  5678  0F3E                     l2660:
  5679                           
  5680                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1014:     _delay(16u);
  5681  0F3E  3005               	movlw	5
  5682  0F3F                     u2017:
  5683  0F3F  0B89               	decfsz	9,f
  5684  0F40  2F3F               	goto	u2017
  5685  0F41  0000               	nop
  5686  0F42  308D               	movlw	141	;# 
  5687  0F43  0084               	movwf	4	;# 
  5688  0F44  3000               	movlw	0	;# 
  5689  0F45  0085               	movwf	5	;# 
  5690  0F46  300D               	movlw	13	;# 
  5691  0F47  0086               	movwf	6	;# 
  5692  0F48  3001               	movlw	1	;# 
  5693  0F49  0087               	movwf	7	;# 
  5694  0F4A  301D               	movlw	29	;# 
  5695  0F4B  1680               	bsf	0,5	;# 
  5696  0F4C                     l2662:
  5697                           
  5698                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1032:     _delay(0u);
  5699  0F4C  009D               	movwf	29	;# 
  5700  0F4D                     l2664:
  5701                           
  5702                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1039:     _delay(8u);
  5703  0F4D  3200               	nop2	;2 cycle nop
  5704  0F4E  3200               	nop2	;2 cycle nop
  5705  0F4F  3200               	nop2	;2 cycle nop
  5706  0F50  3200               	nop2	;2 cycle nop
  5707  0F51  0021               	banksel	157	;# 
  5708  0F52  149D               	bsf	29,1	;# 
  5709  0F53                     l2666:
  5710                           
  5711                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1046:     _delay(3u);
  5712  0F53  3200               	nop2	;2 cycle nop
  5713  0F54  0000               	nop
  5714  0F55  0022               	banksel	269	;# 
  5715  0F56  128D               	bcf	13,5	;# 
  5716  0F57  1280               	bcf	0,5	;# 
  5717  0F58                     l118:
  5718  0F58  0008               	return
  5719  0F59                     __end_of_MTOUCH_CVD_ScanB_7:
  5720                           
  5721                           	psect	text29
  5722  0F19                     __ptext29:	
  5723 ;; *************** function _MTOUCH_CVD_ScanB_6 *****************
  5724 ;; Defined at:
  5725 ;;		line 875 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  5726 ;; Parameters:    Size  Location     Type
  5727 ;;		None
  5728 ;; Auto vars:     Size  Location     Type
  5729 ;;		None
  5730 ;; Return value:  Size  Location     Type
  5731 ;;                  1    wreg      void 
  5732 ;; Registers used:
  5733 ;;		wreg
  5734 ;; Tracked objects:
  5735 ;;		On entry : 0/0
  5736 ;;		On exit  : 0/0
  5737 ;;		Unchanged: 0/0
  5738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5739 ;;      Params:         0       0       0       0       0       0
  5740 ;;      Locals:         0       0       0       0       0       0
  5741 ;;      Temps:          0       0       0       0       0       0
  5742 ;;      Totals:         0       0       0       0       0       0
  5743 ;;Total ram usage:        0 bytes
  5744 ;; Hardware stack levels used:    1
  5745 ;; This function calls:
  5746 ;;		Nothing
  5747 ;; This function is called by:
  5748 ;;		_Sensor_Acq_ExecuteScan
  5749 ;; This function uses a non-reentrant model
  5750 ;;
  5751                           
  5752                           
  5753                           ;psect for function _MTOUCH_CVD_ScanB_6
  5754  0F19                     _MTOUCH_CVD_ScanB_6:
  5755  0F19                     l2638:	
  5756                           ;incstack = 0
  5757                           ; Regs used in _MTOUCH_CVD_ScanB_6: [wreg]
  5758                           
  5759  0F19  0022               	banksel	269	;# 
  5760  0F1A  118D               	bcf	13,3	;# 
  5761  0F1B  0021               	banksel	157	;# 
  5762  0F1C  3025               	movlw	37	;# 
  5763  0F1D  009D               	movwf	29	;# 
  5764  0F1E                     l2640:
  5765                           
  5766                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 887:     _delay(16u);
  5767  0F1E  3005               	movlw	5
  5768  0F1F                     u2027:
  5769  0F1F  0B89               	decfsz	9,f
  5770  0F20  2F1F               	goto	u2027
  5771  0F21  0000               	nop
  5772  0F22  308D               	movlw	141	;# 
  5773  0F23  0084               	movwf	4	;# 
  5774  0F24  3000               	movlw	0	;# 
  5775  0F25  0085               	movwf	5	;# 
  5776  0F26  300D               	movlw	13	;# 
  5777  0F27  0086               	movwf	6	;# 
  5778  0F28  3001               	movlw	1	;# 
  5779  0F29  0087               	movwf	7	;# 
  5780  0F2A  3021               	movlw	33	;# 
  5781  0F2B  1600               	bsf	0,4	;# 
  5782  0F2C                     l2642:
  5783                           
  5784                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 905:     _delay(0u);
  5785  0F2C  009D               	movwf	29	;# 
  5786  0F2D                     l2644:
  5787                           
  5788                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 912:     _delay(8u);
  5789  0F2D  3200               	nop2	;2 cycle nop
  5790  0F2E  3200               	nop2	;2 cycle nop
  5791  0F2F  3200               	nop2	;2 cycle nop
  5792  0F30  3200               	nop2	;2 cycle nop
  5793  0F31  0021               	banksel	157	;# 
  5794  0F32  149D               	bsf	29,1	;# 
  5795  0F33                     l2646:
  5796                           
  5797                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 919:     _delay(3u);
  5798  0F33  3200               	nop2	;2 cycle nop
  5799  0F34  0000               	nop
  5800  0F35  0022               	banksel	269	;# 
  5801  0F36  120D               	bcf	13,4	;# 
  5802  0F37  1200               	bcf	0,4	;# 
  5803  0F38                     l112:
  5804  0F38  0008               	return
  5805  0F39                     __end_of_MTOUCH_CVD_ScanB_6:
  5806                           
  5807                           	psect	text30
  5808  0EF9                     __ptext30:	
  5809 ;; *************** function _MTOUCH_CVD_ScanB_5 *****************
  5810 ;; Defined at:
  5811 ;;		line 748 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  5812 ;; Parameters:    Size  Location     Type
  5813 ;;		None
  5814 ;; Auto vars:     Size  Location     Type
  5815 ;;		None
  5816 ;; Return value:  Size  Location     Type
  5817 ;;                  1    wreg      void 
  5818 ;; Registers used:
  5819 ;;		wreg
  5820 ;; Tracked objects:
  5821 ;;		On entry : 0/0
  5822 ;;		On exit  : 0/0
  5823 ;;		Unchanged: 0/0
  5824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5825 ;;      Params:         0       0       0       0       0       0
  5826 ;;      Locals:         0       0       0       0       0       0
  5827 ;;      Temps:          0       0       0       0       0       0
  5828 ;;      Totals:         0       0       0       0       0       0
  5829 ;;Total ram usage:        0 bytes
  5830 ;; Hardware stack levels used:    1
  5831 ;; This function calls:
  5832 ;;		Nothing
  5833 ;; This function is called by:
  5834 ;;		_Sensor_Acq_ExecuteScan
  5835 ;; This function uses a non-reentrant model
  5836 ;;
  5837                           
  5838                           
  5839                           ;psect for function _MTOUCH_CVD_ScanB_5
  5840  0EF9                     _MTOUCH_CVD_ScanB_5:
  5841  0EF9                     l2618:	
  5842                           ;incstack = 0
  5843                           ; Regs used in _MTOUCH_CVD_ScanB_5: [wreg]
  5844                           
  5845  0EF9  0022               	banksel	269	;# 
  5846  0EFA  108D               	bcf	13,1	;# 
  5847  0EFB  0021               	banksel	157	;# 
  5848  0EFC  302D               	movlw	45	;# 
  5849  0EFD  009D               	movwf	29	;# 
  5850  0EFE                     l2620:
  5851                           
  5852                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 760:     _delay(16u);
  5853  0EFE  3005               	movlw	5
  5854  0EFF                     u2037:
  5855  0EFF  0B89               	decfsz	9,f
  5856  0F00  2EFF               	goto	u2037
  5857  0F01  0000               	nop
  5858  0F02  308D               	movlw	141	;# 
  5859  0F03  0084               	movwf	4	;# 
  5860  0F04  3000               	movlw	0	;# 
  5861  0F05  0085               	movwf	5	;# 
  5862  0F06  300D               	movlw	13	;# 
  5863  0F07  0086               	movwf	6	;# 
  5864  0F08  3001               	movlw	1	;# 
  5865  0F09  0087               	movwf	7	;# 
  5866  0F0A  3025               	movlw	37	;# 
  5867  0F0B  1580               	bsf	0,3	;# 
  5868  0F0C                     l2622:
  5869                           
  5870                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 778:     _delay(0u);
  5871  0F0C  009D               	movwf	29	;# 
  5872  0F0D                     l2624:
  5873                           
  5874                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 785:     _delay(8u);
  5875  0F0D  3200               	nop2	;2 cycle nop
  5876  0F0E  3200               	nop2	;2 cycle nop
  5877  0F0F  3200               	nop2	;2 cycle nop
  5878  0F10  3200               	nop2	;2 cycle nop
  5879  0F11  0021               	banksel	157	;# 
  5880  0F12  149D               	bsf	29,1	;# 
  5881  0F13                     l2626:
  5882                           
  5883                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 792:     _delay(3u);
  5884  0F13  3200               	nop2	;2 cycle nop
  5885  0F14  0000               	nop
  5886  0F15  0022               	banksel	269	;# 
  5887  0F16  118D               	bcf	13,3	;# 
  5888  0F17  1180               	bcf	0,3	;# 
  5889  0F18                     l106:
  5890  0F18  0008               	return
  5891  0F19                     __end_of_MTOUCH_CVD_ScanB_5:
  5892                           
  5893                           	psect	text31
  5894  0ED9                     __ptext31:	
  5895 ;; *************** function _MTOUCH_CVD_ScanB_4 *****************
  5896 ;; Defined at:
  5897 ;;		line 621 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  5898 ;; Parameters:    Size  Location     Type
  5899 ;;		None
  5900 ;; Auto vars:     Size  Location     Type
  5901 ;;		None
  5902 ;; Return value:  Size  Location     Type
  5903 ;;                  1    wreg      void 
  5904 ;; Registers used:
  5905 ;;		wreg
  5906 ;; Tracked objects:
  5907 ;;		On entry : 0/0
  5908 ;;		On exit  : 0/0
  5909 ;;		Unchanged: 0/0
  5910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5911 ;;      Params:         0       0       0       0       0       0
  5912 ;;      Locals:         0       0       0       0       0       0
  5913 ;;      Temps:          0       0       0       0       0       0
  5914 ;;      Totals:         0       0       0       0       0       0
  5915 ;;Total ram usage:        0 bytes
  5916 ;; Hardware stack levels used:    1
  5917 ;; This function calls:
  5918 ;;		Nothing
  5919 ;; This function is called by:
  5920 ;;		_Sensor_Acq_ExecuteScan
  5921 ;; This function uses a non-reentrant model
  5922 ;;
  5923                           
  5924                           
  5925                           ;psect for function _MTOUCH_CVD_ScanB_4
  5926  0ED9                     _MTOUCH_CVD_ScanB_4:
  5927  0ED9                     l2598:	
  5928                           ;incstack = 0
  5929                           ; Regs used in _MTOUCH_CVD_ScanB_4: [wreg]
  5930                           
  5931  0ED9  0022               	banksel	268	;# 
  5932  0EDA  120C               	bcf	12,4	;# 
  5933  0EDB  0021               	banksel	157	;# 
  5934  0EDC  3011               	movlw	17	;# 
  5935  0EDD  009D               	movwf	29	;# 
  5936  0EDE                     l2600:
  5937                           
  5938                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 633:     _delay(16u);
  5939  0EDE  3005               	movlw	5
  5940  0EDF                     u2047:
  5941  0EDF  0B89               	decfsz	9,f
  5942  0EE0  2EDF               	goto	u2047
  5943  0EE1  0000               	nop
  5944  0EE2  308D               	movlw	141	;# 
  5945  0EE3  0084               	movwf	4	;# 
  5946  0EE4  3000               	movlw	0	;# 
  5947  0EE5  0085               	movwf	5	;# 
  5948  0EE6  300D               	movlw	13	;# 
  5949  0EE7  0086               	movwf	6	;# 
  5950  0EE8  3001               	movlw	1	;# 
  5951  0EE9  0087               	movwf	7	;# 
  5952  0EEA  302D               	movlw	45	;# 
  5953  0EEB  1480               	bsf	0,1	;# 
  5954  0EEC                     l2602:
  5955                           
  5956                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 651:     _delay(0u);
  5957  0EEC  009D               	movwf	29	;# 
  5958  0EED                     l2604:
  5959                           
  5960                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 658:     _delay(8u);
  5961  0EED  3200               	nop2	;2 cycle nop
  5962  0EEE  3200               	nop2	;2 cycle nop
  5963  0EEF  3200               	nop2	;2 cycle nop
  5964  0EF0  3200               	nop2	;2 cycle nop
  5965  0EF1  0021               	banksel	157	;# 
  5966  0EF2  149D               	bsf	29,1	;# 
  5967  0EF3                     l2606:
  5968                           
  5969                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 665:     _delay(3u);
  5970  0EF3  3200               	nop2	;2 cycle nop
  5971  0EF4  0000               	nop
  5972  0EF5  0022               	banksel	269	;# 
  5973  0EF6  108D               	bcf	13,1	;# 
  5974  0EF7  1080               	bcf	0,1	;# 
  5975  0EF8                     l100:
  5976  0EF8  0008               	return
  5977  0EF9                     __end_of_MTOUCH_CVD_ScanB_4:
  5978                           
  5979                           	psect	text32
  5980  0EB9                     __ptext32:	
  5981 ;; *************** function _MTOUCH_CVD_ScanB_3 *****************
  5982 ;; Defined at:
  5983 ;;		line 494 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  5984 ;; Parameters:    Size  Location     Type
  5985 ;;		None
  5986 ;; Auto vars:     Size  Location     Type
  5987 ;;		None
  5988 ;; Return value:  Size  Location     Type
  5989 ;;                  1    wreg      void 
  5990 ;; Registers used:
  5991 ;;		wreg
  5992 ;; Tracked objects:
  5993 ;;		On entry : 0/0
  5994 ;;		On exit  : 0/0
  5995 ;;		Unchanged: 0/0
  5996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5997 ;;      Params:         0       0       0       0       0       0
  5998 ;;      Locals:         0       0       0       0       0       0
  5999 ;;      Temps:          0       0       0       0       0       0
  6000 ;;      Totals:         0       0       0       0       0       0
  6001 ;;Total ram usage:        0 bytes
  6002 ;; Hardware stack levels used:    1
  6003 ;; This function calls:
  6004 ;;		Nothing
  6005 ;; This function is called by:
  6006 ;;		_Sensor_Acq_ExecuteScan
  6007 ;; This function uses a non-reentrant model
  6008 ;;
  6009                           
  6010                           
  6011                           ;psect for function _MTOUCH_CVD_ScanB_3
  6012  0EB9                     _MTOUCH_CVD_ScanB_3:
  6013  0EB9                     l2578:	
  6014                           ;incstack = 0
  6015                           ; Regs used in _MTOUCH_CVD_ScanB_3: [wreg]
  6016                           
  6017  0EB9  0022               	banksel	268	;# 
  6018  0EBA  110C               	bcf	12,2	;# 
  6019  0EBB  0021               	banksel	157	;# 
  6020  0EBC  3009               	movlw	9	;# 
  6021  0EBD  009D               	movwf	29	;# 
  6022  0EBE                     l2580:
  6023                           
  6024                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 506:     _delay(16u);
  6025  0EBE  3005               	movlw	5
  6026  0EBF                     u2057:
  6027  0EBF  0B89               	decfsz	9,f
  6028  0EC0  2EBF               	goto	u2057
  6029  0EC1  0000               	nop
  6030  0EC2  308C               	movlw	140	;# 
  6031  0EC3  0084               	movwf	4	;# 
  6032  0EC4  3000               	movlw	0	;# 
  6033  0EC5  0085               	movwf	5	;# 
  6034  0EC6  300C               	movlw	12	;# 
  6035  0EC7  0086               	movwf	6	;# 
  6036  0EC8  3001               	movlw	1	;# 
  6037  0EC9  0087               	movwf	7	;# 
  6038  0ECA  3011               	movlw	17	;# 
  6039  0ECB  1600               	bsf	0,4	;# 
  6040  0ECC                     l2582:
  6041                           
  6042                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 524:     _delay(0u);
  6043  0ECC  009D               	movwf	29	;# 
  6044  0ECD                     l2584:
  6045                           
  6046                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 531:     _delay(8u);
  6047  0ECD  3200               	nop2	;2 cycle nop
  6048  0ECE  3200               	nop2	;2 cycle nop
  6049  0ECF  3200               	nop2	;2 cycle nop
  6050  0ED0  3200               	nop2	;2 cycle nop
  6051  0ED1  0021               	banksel	157	;# 
  6052  0ED2  149D               	bsf	29,1	;# 
  6053  0ED3                     l2586:
  6054                           
  6055                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 538:     _delay(3u);
  6056  0ED3  3200               	nop2	;2 cycle nop
  6057  0ED4  0000               	nop
  6058  0ED5  0022               	banksel	268	;# 
  6059  0ED6  120C               	bcf	12,4	;# 
  6060  0ED7  1200               	bcf	0,4	;# 
  6061  0ED8                     l94:
  6062  0ED8  0008               	return
  6063  0ED9                     __end_of_MTOUCH_CVD_ScanB_3:
  6064                           
  6065                           	psect	text33
  6066  0E99                     __ptext33:	
  6067 ;; *************** function _MTOUCH_CVD_ScanB_2 *****************
  6068 ;; Defined at:
  6069 ;;		line 367 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  6070 ;; Parameters:    Size  Location     Type
  6071 ;;		None
  6072 ;; Auto vars:     Size  Location     Type
  6073 ;;		None
  6074 ;; Return value:  Size  Location     Type
  6075 ;;                  1    wreg      void 
  6076 ;; Registers used:
  6077 ;;		wreg
  6078 ;; Tracked objects:
  6079 ;;		On entry : 0/0
  6080 ;;		On exit  : 0/0
  6081 ;;		Unchanged: 0/0
  6082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6083 ;;      Params:         0       0       0       0       0       0
  6084 ;;      Locals:         0       0       0       0       0       0
  6085 ;;      Temps:          0       0       0       0       0       0
  6086 ;;      Totals:         0       0       0       0       0       0
  6087 ;;Total ram usage:        0 bytes
  6088 ;; Hardware stack levels used:    1
  6089 ;; This function calls:
  6090 ;;		Nothing
  6091 ;; This function is called by:
  6092 ;;		_Sensor_Acq_ExecuteScan
  6093 ;; This function uses a non-reentrant model
  6094 ;;
  6095                           
  6096                           
  6097                           ;psect for function _MTOUCH_CVD_ScanB_2
  6098  0E99                     _MTOUCH_CVD_ScanB_2:
  6099  0E99                     l2558:	
  6100                           ;incstack = 0
  6101                           ; Regs used in _MTOUCH_CVD_ScanB_2: [wreg]
  6102                           
  6103  0E99  0022               	banksel	268	;# 
  6104  0E9A  108C               	bcf	12,1	;# 
  6105  0E9B  0021               	banksel	157	;# 
  6106  0E9C  3005               	movlw	5	;# 
  6107  0E9D  009D               	movwf	29	;# 
  6108  0E9E                     l2560:
  6109                           
  6110                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 379:     _delay(16u);
  6111  0E9E  3005               	movlw	5
  6112  0E9F                     u2067:
  6113  0E9F  0B89               	decfsz	9,f
  6114  0EA0  2E9F               	goto	u2067
  6115  0EA1  0000               	nop
  6116  0EA2  308C               	movlw	140	;# 
  6117  0EA3  0084               	movwf	4	;# 
  6118  0EA4  3000               	movlw	0	;# 
  6119  0EA5  0085               	movwf	5	;# 
  6120  0EA6  300C               	movlw	12	;# 
  6121  0EA7  0086               	movwf	6	;# 
  6122  0EA8  3001               	movlw	1	;# 
  6123  0EA9  0087               	movwf	7	;# 
  6124  0EAA  3009               	movlw	9	;# 
  6125  0EAB  1500               	bsf	0,2	;# 
  6126  0EAC                     l2562:
  6127                           
  6128                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 397:     _delay(0u);
  6129  0EAC  009D               	movwf	29	;# 
  6130  0EAD                     l2564:
  6131                           
  6132                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 404:     _delay(8u);
  6133  0EAD  3200               	nop2	;2 cycle nop
  6134  0EAE  3200               	nop2	;2 cycle nop
  6135  0EAF  3200               	nop2	;2 cycle nop
  6136  0EB0  3200               	nop2	;2 cycle nop
  6137  0EB1  0021               	banksel	157	;# 
  6138  0EB2  149D               	bsf	29,1	;# 
  6139  0EB3                     l2566:
  6140                           
  6141                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 411:     _delay(3u);
  6142  0EB3  3200               	nop2	;2 cycle nop
  6143  0EB4  0000               	nop
  6144  0EB5  0022               	banksel	268	;# 
  6145  0EB6  110C               	bcf	12,2	;# 
  6146  0EB7  1100               	bcf	0,2	;# 
  6147  0EB8                     l88:
  6148  0EB8  0008               	return
  6149  0EB9                     __end_of_MTOUCH_CVD_ScanB_2:
  6150                           
  6151                           	psect	text34
  6152  0E79                     __ptext34:	
  6153 ;; *************** function _MTOUCH_CVD_ScanB_1 *****************
  6154 ;; Defined at:
  6155 ;;		line 240 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  6156 ;; Parameters:    Size  Location     Type
  6157 ;;		None
  6158 ;; Auto vars:     Size  Location     Type
  6159 ;;		None
  6160 ;; Return value:  Size  Location     Type
  6161 ;;                  1    wreg      void 
  6162 ;; Registers used:
  6163 ;;		wreg
  6164 ;; Tracked objects:
  6165 ;;		On entry : 0/0
  6166 ;;		On exit  : 0/0
  6167 ;;		Unchanged: 0/0
  6168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6169 ;;      Params:         0       0       0       0       0       0
  6170 ;;      Locals:         0       0       0       0       0       0
  6171 ;;      Temps:          0       0       0       0       0       0
  6172 ;;      Totals:         0       0       0       0       0       0
  6173 ;;Total ram usage:        0 bytes
  6174 ;; Hardware stack levels used:    1
  6175 ;; This function calls:
  6176 ;;		Nothing
  6177 ;; This function is called by:
  6178 ;;		_Sensor_Acq_ExecuteScan
  6179 ;; This function uses a non-reentrant model
  6180 ;;
  6181                           
  6182                           
  6183                           ;psect for function _MTOUCH_CVD_ScanB_1
  6184  0E79                     _MTOUCH_CVD_ScanB_1:
  6185  0E79                     l2538:	
  6186                           ;incstack = 0
  6187                           ; Regs used in _MTOUCH_CVD_ScanB_1: [wreg]
  6188                           
  6189  0E79  0022               	banksel	268	;# 
  6190  0E7A  100C               	bcf	12,0	;# 
  6191  0E7B  0021               	banksel	157	;# 
  6192  0E7C  3001               	movlw	1	;# 
  6193  0E7D  009D               	movwf	29	;# 
  6194  0E7E                     l2540:
  6195                           
  6196                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 252:     _delay(16u);
  6197  0E7E  3005               	movlw	5
  6198  0E7F                     u2077:
  6199  0E7F  0B89               	decfsz	9,f
  6200  0E80  2E7F               	goto	u2077
  6201  0E81  0000               	nop
  6202  0E82  308C               	movlw	140	;# 
  6203  0E83  0084               	movwf	4	;# 
  6204  0E84  3000               	movlw	0	;# 
  6205  0E85  0085               	movwf	5	;# 
  6206  0E86  300C               	movlw	12	;# 
  6207  0E87  0086               	movwf	6	;# 
  6208  0E88  3001               	movlw	1	;# 
  6209  0E89  0087               	movwf	7	;# 
  6210  0E8A  3005               	movlw	5	;# 
  6211  0E8B  1480               	bsf	0,1	;# 
  6212  0E8C                     l2542:
  6213                           
  6214                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 270:     _delay(0u);
  6215  0E8C  009D               	movwf	29	;# 
  6216  0E8D                     l2544:
  6217                           
  6218                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 277:     _delay(8u);
  6219  0E8D  3200               	nop2	;2 cycle nop
  6220  0E8E  3200               	nop2	;2 cycle nop
  6221  0E8F  3200               	nop2	;2 cycle nop
  6222  0E90  3200               	nop2	;2 cycle nop
  6223  0E91  0021               	banksel	157	;# 
  6224  0E92  149D               	bsf	29,1	;# 
  6225  0E93                     l2546:
  6226                           
  6227                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 284:     _delay(3u);
  6228  0E93  3200               	nop2	;2 cycle nop
  6229  0E94  0000               	nop
  6230  0E95  0022               	banksel	268	;# 
  6231  0E96  108C               	bcf	12,1	;# 
  6232  0E97  1080               	bcf	0,1	;# 
  6233  0E98                     l82:
  6234  0E98  0008               	return
  6235  0E99                     __end_of_MTOUCH_CVD_ScanB_1:
  6236                           
  6237                           	psect	text35
  6238  0E59                     __ptext35:	
  6239 ;; *************** function _MTOUCH_CVD_ScanB_0 *****************
  6240 ;; Defined at:
  6241 ;;		line 113 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  6242 ;; Parameters:    Size  Location     Type
  6243 ;;		None
  6244 ;; Auto vars:     Size  Location     Type
  6245 ;;		None
  6246 ;; Return value:  Size  Location     Type
  6247 ;;                  1    wreg      void 
  6248 ;; Registers used:
  6249 ;;		wreg
  6250 ;; Tracked objects:
  6251 ;;		On entry : 0/0
  6252 ;;		On exit  : 0/0
  6253 ;;		Unchanged: 0/0
  6254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6255 ;;      Params:         0       0       0       0       0       0
  6256 ;;      Locals:         0       0       0       0       0       0
  6257 ;;      Temps:          0       0       0       0       0       0
  6258 ;;      Totals:         0       0       0       0       0       0
  6259 ;;Total ram usage:        0 bytes
  6260 ;; Hardware stack levels used:    1
  6261 ;; This function calls:
  6262 ;;		Nothing
  6263 ;; This function is called by:
  6264 ;;		_Sensor_Acq_ExecuteScan
  6265 ;; This function uses a non-reentrant model
  6266 ;;
  6267                           
  6268                           
  6269                           ;psect for function _MTOUCH_CVD_ScanB_0
  6270  0E59                     _MTOUCH_CVD_ScanB_0:
  6271  0E59                     l2518:	
  6272                           ;incstack = 0
  6273                           ; Regs used in _MTOUCH_CVD_ScanB_0: [wreg]
  6274                           
  6275  0E59  0022               	banksel	269	;# 
  6276  0E5A  138D               	bcf	13,7	;# 
  6277  0E5B  0021               	banksel	157	;# 
  6278  0E5C  3019               	movlw	25	;# 
  6279  0E5D  009D               	movwf	29	;# 
  6280  0E5E                     l2520:
  6281                           
  6282                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 125:     _delay(16u);
  6283  0E5E  3005               	movlw	5
  6284  0E5F                     u2087:
  6285  0E5F  0B89               	decfsz	9,f
  6286  0E60  2E5F               	goto	u2087
  6287  0E61  0000               	nop
  6288  0E62  308C               	movlw	140	;# 
  6289  0E63  0084               	movwf	4	;# 
  6290  0E64  3000               	movlw	0	;# 
  6291  0E65  0085               	movwf	5	;# 
  6292  0E66  300C               	movlw	12	;# 
  6293  0E67  0086               	movwf	6	;# 
  6294  0E68  3001               	movlw	1	;# 
  6295  0E69  0087               	movwf	7	;# 
  6296  0E6A  3001               	movlw	1	;# 
  6297  0E6B  1400               	bsf	0,0	;# 
  6298  0E6C                     l2522:
  6299                           
  6300                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 143:     _delay(0u);
  6301  0E6C  009D               	movwf	29	;# 
  6302  0E6D                     l2524:
  6303                           
  6304                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 150:     _delay(8u);
  6305  0E6D  3200               	nop2	;2 cycle nop
  6306  0E6E  3200               	nop2	;2 cycle nop
  6307  0E6F  3200               	nop2	;2 cycle nop
  6308  0E70  3200               	nop2	;2 cycle nop
  6309  0E71  0021               	banksel	157	;# 
  6310  0E72  149D               	bsf	29,1	;# 
  6311  0E73                     l2526:
  6312                           
  6313                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 157:     _delay(3u);
  6314  0E73  3200               	nop2	;2 cycle nop
  6315  0E74  0000               	nop
  6316  0E75  0022               	banksel	268	;# 
  6317  0E76  100C               	bcf	12,0	;# 
  6318  0E77  1000               	bcf	0,0	;# 
  6319  0E78                     l76:
  6320  0E78  0008               	return
  6321  0E79                     __end_of_MTOUCH_CVD_ScanB_0:
  6322                           
  6323                           	psect	text36
  6324  0E39                     __ptext36:	
  6325 ;; *************** function _MTOUCH_CVD_ScanB_9 *****************
  6326 ;; Defined at:
  6327 ;;		line 1256 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  6328 ;; Parameters:    Size  Location     Type
  6329 ;;		None
  6330 ;; Auto vars:     Size  Location     Type
  6331 ;;		None
  6332 ;; Return value:  Size  Location     Type
  6333 ;;                  1    wreg      void 
  6334 ;; Registers used:
  6335 ;;		wreg
  6336 ;; Tracked objects:
  6337 ;;		On entry : 0/0
  6338 ;;		On exit  : 0/0
  6339 ;;		Unchanged: 0/0
  6340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6341 ;;      Params:         0       0       0       0       0       0
  6342 ;;      Locals:         0       0       0       0       0       0
  6343 ;;      Temps:          0       0       0       0       0       0
  6344 ;;      Totals:         0       0       0       0       0       0
  6345 ;;Total ram usage:        0 bytes
  6346 ;; Hardware stack levels used:    1
  6347 ;; This function calls:
  6348 ;;		Nothing
  6349 ;; This function is called by:
  6350 ;;		_Sensor_Acq_ExecuteScan
  6351 ;; This function uses a non-reentrant model
  6352 ;;
  6353                           
  6354                           
  6355                           ;psect for function _MTOUCH_CVD_ScanB_9
  6356  0E39                     _MTOUCH_CVD_ScanB_9:
  6357  0E39                     l2698:	
  6358                           ;incstack = 0
  6359                           ; Regs used in _MTOUCH_CVD_ScanB_9: [wreg]
  6360                           
  6361  0E39  0022               	banksel	269	;# 
  6362  0E3A  130D               	bcf	13,6	;# 
  6363  0E3B  0021               	banksel	157	;# 
  6364  0E3C  3015               	movlw	21	;# 
  6365  0E3D  009D               	movwf	29	;# 
  6366  0E3E                     l2700:
  6367                           
  6368                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1268:     _delay(16u);
  6369  0E3E  3005               	movlw	5
  6370  0E3F                     u2097:
  6371  0E3F  0B89               	decfsz	9,f
  6372  0E40  2E3F               	goto	u2097
  6373  0E41  0000               	nop
  6374  0E42  308D               	movlw	141	;# 
  6375  0E43  0084               	movwf	4	;# 
  6376  0E44  3000               	movlw	0	;# 
  6377  0E45  0085               	movwf	5	;# 
  6378  0E46  300D               	movlw	13	;# 
  6379  0E47  0086               	movwf	6	;# 
  6380  0E48  3001               	movlw	1	;# 
  6381  0E49  0087               	movwf	7	;# 
  6382  0E4A  3019               	movlw	25	;# 
  6383  0E4B  1780               	bsf	0,7	;# 
  6384  0E4C                     l2702:
  6385                           
  6386                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1286:     _delay(0u);
  6387  0E4C  009D               	movwf	29	;# 
  6388  0E4D                     l2704:
  6389                           
  6390                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1293:     _delay(8u);
  6391  0E4D  3200               	nop2	;2 cycle nop
  6392  0E4E  3200               	nop2	;2 cycle nop
  6393  0E4F  3200               	nop2	;2 cycle nop
  6394  0E50  3200               	nop2	;2 cycle nop
  6395  0E51  0021               	banksel	157	;# 
  6396  0E52  149D               	bsf	29,1	;# 
  6397  0E53                     l2706:
  6398                           
  6399                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1300:     _delay(3u);
  6400  0E53  3200               	nop2	;2 cycle nop
  6401  0E54  0000               	nop
  6402  0E55  0022               	banksel	269	;# 
  6403  0E56  138D               	bcf	13,7	;# 
  6404  0E57  1380               	bcf	0,7	;# 
  6405  0E58                     l130:
  6406  0E58  0008               	return
  6407  0E59                     __end_of_MTOUCH_CVD_ScanB_9:
  6408                           
  6409                           	psect	text37
  6410  0E19                     __ptext37:	
  6411 ;; *************** function _MTOUCH_CVD_ScanA_8 *****************
  6412 ;; Defined at:
  6413 ;;		line 1066 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  6414 ;; Parameters:    Size  Location     Type
  6415 ;;		None
  6416 ;; Auto vars:     Size  Location     Type
  6417 ;;		None
  6418 ;; Return value:  Size  Location     Type
  6419 ;;                  1    wreg      void 
  6420 ;; Registers used:
  6421 ;;		wreg
  6422 ;; Tracked objects:
  6423 ;;		On entry : 0/0
  6424 ;;		On exit  : 0/0
  6425 ;;		Unchanged: 0/0
  6426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6427 ;;      Params:         0       0       0       0       0       0
  6428 ;;      Locals:         0       0       0       0       0       0
  6429 ;;      Temps:          0       0       0       0       0       0
  6430 ;;      Totals:         0       0       0       0       0       0
  6431 ;;Total ram usage:        0 bytes
  6432 ;; Hardware stack levels used:    1
  6433 ;; This function calls:
  6434 ;;		Nothing
  6435 ;; This function is called by:
  6436 ;;		_Sensor_Acq_ExecuteScan
  6437 ;; This function uses a non-reentrant model
  6438 ;;
  6439                           
  6440                           
  6441                           ;psect for function _MTOUCH_CVD_ScanA_8
  6442  0E19                     _MTOUCH_CVD_ScanA_8:
  6443  0E19                     l2668:	
  6444                           ;incstack = 0
  6445                           ; Regs used in _MTOUCH_CVD_ScanA_8: [wreg]
  6446                           
  6447  0E19  0022               	banksel	269	;# 
  6448  0E1A  168D               	bsf	13,5	;# 
  6449  0E1B  0021               	banksel	157	;# 
  6450  0E1C  301D               	movlw	29	;# 
  6451  0E1D  009D               	movwf	29	;# 
  6452  0E1E                     l2670:
  6453                           
  6454                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1078:     _delay(16u);
  6455  0E1E  3005               	movlw	5
  6456  0E1F                     u2107:
  6457  0E1F  0B89               	decfsz	9,f
  6458  0E20  2E1F               	goto	u2107
  6459  0E21  0000               	nop
  6460  0E22  308D               	movlw	141	;# 
  6461  0E23  0084               	movwf	4	;# 
  6462  0E24  3000               	movlw	0	;# 
  6463  0E25  0085               	movwf	5	;# 
  6464  0E26  300D               	movlw	13	;# 
  6465  0E27  0086               	movwf	6	;# 
  6466  0E28  3001               	movlw	1	;# 
  6467  0E29  0087               	movwf	7	;# 
  6468  0E2A  3015               	movlw	21	;# 
  6469  0E2B  1700               	bsf	0,6	;# 
  6470  0E2C                     l2672:
  6471                           
  6472                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1096:     _delay(0u);
  6473  0E2C  009D               	movwf	29	;# 
  6474  0E2D                     l2674:
  6475                           
  6476                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1102:     _delay(8u);
  6477  0E2D  3200               	nop2	;2 cycle nop
  6478  0E2E  3200               	nop2	;2 cycle nop
  6479  0E2F  3200               	nop2	;2 cycle nop
  6480  0E30  3200               	nop2	;2 cycle nop
  6481  0E31  0021               	banksel	157	;# 
  6482  0E32  149D               	bsf	29,1	;# 
  6483  0E33                     l2676:
  6484                           
  6485                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1109:     _delay(3u);
  6486  0E33  3200               	nop2	;2 cycle nop
  6487  0E34  0000               	nop
  6488  0E35  0022               	banksel	269	;# 
  6489  0E36  170D               	bsf	13,6	;# 
  6490  0E37  1300               	bcf	0,6	;# 
  6491  0E38                     l121:
  6492  0E38  0008               	return
  6493  0E39                     __end_of_MTOUCH_CVD_ScanA_8:
  6494                           
  6495                           	psect	text38
  6496  0DF9                     __ptext38:	
  6497 ;; *************** function _MTOUCH_CVD_ScanA_7 *****************
  6498 ;; Defined at:
  6499 ;;		line 939 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  6500 ;; Parameters:    Size  Location     Type
  6501 ;;		None
  6502 ;; Auto vars:     Size  Location     Type
  6503 ;;		None
  6504 ;; Return value:  Size  Location     Type
  6505 ;;                  1    wreg      void 
  6506 ;; Registers used:
  6507 ;;		wreg
  6508 ;; Tracked objects:
  6509 ;;		On entry : 0/0
  6510 ;;		On exit  : 0/0
  6511 ;;		Unchanged: 0/0
  6512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6513 ;;      Params:         0       0       0       0       0       0
  6514 ;;      Locals:         0       0       0       0       0       0
  6515 ;;      Temps:          0       0       0       0       0       0
  6516 ;;      Totals:         0       0       0       0       0       0
  6517 ;;Total ram usage:        0 bytes
  6518 ;; Hardware stack levels used:    1
  6519 ;; This function calls:
  6520 ;;		Nothing
  6521 ;; This function is called by:
  6522 ;;		_Sensor_Acq_ExecuteScan
  6523 ;; This function uses a non-reentrant model
  6524 ;;
  6525                           
  6526                           
  6527                           ;psect for function _MTOUCH_CVD_ScanA_7
  6528  0DF9                     _MTOUCH_CVD_ScanA_7:
  6529  0DF9                     l2648:	
  6530                           ;incstack = 0
  6531                           ; Regs used in _MTOUCH_CVD_ScanA_7: [wreg]
  6532                           
  6533  0DF9  0022               	banksel	269	;# 
  6534  0DFA  160D               	bsf	13,4	;# 
  6535  0DFB  0021               	banksel	157	;# 
  6536  0DFC  3021               	movlw	33	;# 
  6537  0DFD  009D               	movwf	29	;# 
  6538  0DFE                     l2650:
  6539                           
  6540                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 951:     _delay(16u);
  6541  0DFE  3005               	movlw	5
  6542  0DFF                     u2117:
  6543  0DFF  0B89               	decfsz	9,f
  6544  0E00  2DFF               	goto	u2117
  6545  0E01  0000               	nop
  6546  0E02  308D               	movlw	141	;# 
  6547  0E03  0084               	movwf	4	;# 
  6548  0E04  3000               	movlw	0	;# 
  6549  0E05  0085               	movwf	5	;# 
  6550  0E06  300D               	movlw	13	;# 
  6551  0E07  0086               	movwf	6	;# 
  6552  0E08  3001               	movlw	1	;# 
  6553  0E09  0087               	movwf	7	;# 
  6554  0E0A  301D               	movlw	29	;# 
  6555  0E0B  1680               	bsf	0,5	;# 
  6556  0E0C                     l2652:
  6557                           
  6558                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 969:     _delay(0u);
  6559  0E0C  009D               	movwf	29	;# 
  6560  0E0D                     l2654:
  6561                           
  6562                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 975:     _delay(8u);
  6563  0E0D  3200               	nop2	;2 cycle nop
  6564  0E0E  3200               	nop2	;2 cycle nop
  6565  0E0F  3200               	nop2	;2 cycle nop
  6566  0E10  3200               	nop2	;2 cycle nop
  6567  0E11  0021               	banksel	157	;# 
  6568  0E12  149D               	bsf	29,1	;# 
  6569  0E13                     l2656:
  6570                           
  6571                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 982:     _delay(3u);
  6572  0E13  3200               	nop2	;2 cycle nop
  6573  0E14  0000               	nop
  6574  0E15  0022               	banksel	269	;# 
  6575  0E16  168D               	bsf	13,5	;# 
  6576  0E17  1280               	bcf	0,5	;# 
  6577  0E18                     l115:
  6578  0E18  0008               	return
  6579  0E19                     __end_of_MTOUCH_CVD_ScanA_7:
  6580                           
  6581                           	psect	text39
  6582  0DD9                     __ptext39:	
  6583 ;; *************** function _MTOUCH_CVD_ScanA_6 *****************
  6584 ;; Defined at:
  6585 ;;		line 812 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  6586 ;; Parameters:    Size  Location     Type
  6587 ;;		None
  6588 ;; Auto vars:     Size  Location     Type
  6589 ;;		None
  6590 ;; Return value:  Size  Location     Type
  6591 ;;                  1    wreg      void 
  6592 ;; Registers used:
  6593 ;;		wreg
  6594 ;; Tracked objects:
  6595 ;;		On entry : 0/0
  6596 ;;		On exit  : 0/0
  6597 ;;		Unchanged: 0/0
  6598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6599 ;;      Params:         0       0       0       0       0       0
  6600 ;;      Locals:         0       0       0       0       0       0
  6601 ;;      Temps:          0       0       0       0       0       0
  6602 ;;      Totals:         0       0       0       0       0       0
  6603 ;;Total ram usage:        0 bytes
  6604 ;; Hardware stack levels used:    1
  6605 ;; This function calls:
  6606 ;;		Nothing
  6607 ;; This function is called by:
  6608 ;;		_Sensor_Acq_ExecuteScan
  6609 ;; This function uses a non-reentrant model
  6610 ;;
  6611                           
  6612                           
  6613                           ;psect for function _MTOUCH_CVD_ScanA_6
  6614  0DD9                     _MTOUCH_CVD_ScanA_6:
  6615  0DD9                     l2628:	
  6616                           ;incstack = 0
  6617                           ; Regs used in _MTOUCH_CVD_ScanA_6: [wreg]
  6618                           
  6619  0DD9  0022               	banksel	269	;# 
  6620  0DDA  158D               	bsf	13,3	;# 
  6621  0DDB  0021               	banksel	157	;# 
  6622  0DDC  3025               	movlw	37	;# 
  6623  0DDD  009D               	movwf	29	;# 
  6624  0DDE                     l2630:
  6625                           
  6626                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 824:     _delay(16u);
  6627  0DDE  3005               	movlw	5
  6628  0DDF                     u2127:
  6629  0DDF  0B89               	decfsz	9,f
  6630  0DE0  2DDF               	goto	u2127
  6631  0DE1  0000               	nop
  6632  0DE2  308D               	movlw	141	;# 
  6633  0DE3  0084               	movwf	4	;# 
  6634  0DE4  3000               	movlw	0	;# 
  6635  0DE5  0085               	movwf	5	;# 
  6636  0DE6  300D               	movlw	13	;# 
  6637  0DE7  0086               	movwf	6	;# 
  6638  0DE8  3001               	movlw	1	;# 
  6639  0DE9  0087               	movwf	7	;# 
  6640  0DEA  3021               	movlw	33	;# 
  6641  0DEB  1600               	bsf	0,4	;# 
  6642  0DEC                     l2632:
  6643                           
  6644                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 842:     _delay(0u);
  6645  0DEC  009D               	movwf	29	;# 
  6646  0DED                     l2634:
  6647                           
  6648                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 848:     _delay(8u);
  6649  0DED  3200               	nop2	;2 cycle nop
  6650  0DEE  3200               	nop2	;2 cycle nop
  6651  0DEF  3200               	nop2	;2 cycle nop
  6652  0DF0  3200               	nop2	;2 cycle nop
  6653  0DF1  0021               	banksel	157	;# 
  6654  0DF2  149D               	bsf	29,1	;# 
  6655  0DF3                     l2636:
  6656                           
  6657                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 855:     _delay(3u);
  6658  0DF3  3200               	nop2	;2 cycle nop
  6659  0DF4  0000               	nop
  6660  0DF5  0022               	banksel	269	;# 
  6661  0DF6  160D               	bsf	13,4	;# 
  6662  0DF7  1200               	bcf	0,4	;# 
  6663  0DF8                     l109:
  6664  0DF8  0008               	return
  6665  0DF9                     __end_of_MTOUCH_CVD_ScanA_6:
  6666                           
  6667                           	psect	text40
  6668  0DB9                     __ptext40:	
  6669 ;; *************** function _MTOUCH_CVD_ScanA_5 *****************
  6670 ;; Defined at:
  6671 ;;		line 685 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  6672 ;; Parameters:    Size  Location     Type
  6673 ;;		None
  6674 ;; Auto vars:     Size  Location     Type
  6675 ;;		None
  6676 ;; Return value:  Size  Location     Type
  6677 ;;                  1    wreg      void 
  6678 ;; Registers used:
  6679 ;;		wreg
  6680 ;; Tracked objects:
  6681 ;;		On entry : 0/0
  6682 ;;		On exit  : 0/0
  6683 ;;		Unchanged: 0/0
  6684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6685 ;;      Params:         0       0       0       0       0       0
  6686 ;;      Locals:         0       0       0       0       0       0
  6687 ;;      Temps:          0       0       0       0       0       0
  6688 ;;      Totals:         0       0       0       0       0       0
  6689 ;;Total ram usage:        0 bytes
  6690 ;; Hardware stack levels used:    1
  6691 ;; This function calls:
  6692 ;;		Nothing
  6693 ;; This function is called by:
  6694 ;;		_Sensor_Acq_ExecuteScan
  6695 ;; This function uses a non-reentrant model
  6696 ;;
  6697                           
  6698                           
  6699                           ;psect for function _MTOUCH_CVD_ScanA_5
  6700  0DB9                     _MTOUCH_CVD_ScanA_5:
  6701  0DB9                     l2608:	
  6702                           ;incstack = 0
  6703                           ; Regs used in _MTOUCH_CVD_ScanA_5: [wreg]
  6704                           
  6705  0DB9  0022               	banksel	269	;# 
  6706  0DBA  148D               	bsf	13,1	;# 
  6707  0DBB  0021               	banksel	157	;# 
  6708  0DBC  302D               	movlw	45	;# 
  6709  0DBD  009D               	movwf	29	;# 
  6710  0DBE                     l2610:
  6711                           
  6712                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 697:     _delay(16u);
  6713  0DBE  3005               	movlw	5
  6714  0DBF                     u2137:
  6715  0DBF  0B89               	decfsz	9,f
  6716  0DC0  2DBF               	goto	u2137
  6717  0DC1  0000               	nop
  6718  0DC2  308D               	movlw	141	;# 
  6719  0DC3  0084               	movwf	4	;# 
  6720  0DC4  3000               	movlw	0	;# 
  6721  0DC5  0085               	movwf	5	;# 
  6722  0DC6  300D               	movlw	13	;# 
  6723  0DC7  0086               	movwf	6	;# 
  6724  0DC8  3001               	movlw	1	;# 
  6725  0DC9  0087               	movwf	7	;# 
  6726  0DCA  3025               	movlw	37	;# 
  6727  0DCB  1580               	bsf	0,3	;# 
  6728  0DCC                     l2612:
  6729                           
  6730                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 715:     _delay(0u);
  6731  0DCC  009D               	movwf	29	;# 
  6732  0DCD                     l2614:
  6733                           
  6734                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 721:     _delay(8u);
  6735  0DCD  3200               	nop2	;2 cycle nop
  6736  0DCE  3200               	nop2	;2 cycle nop
  6737  0DCF  3200               	nop2	;2 cycle nop
  6738  0DD0  3200               	nop2	;2 cycle nop
  6739  0DD1  0021               	banksel	157	;# 
  6740  0DD2  149D               	bsf	29,1	;# 
  6741  0DD3                     l2616:
  6742                           
  6743                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 728:     _delay(3u);
  6744  0DD3  3200               	nop2	;2 cycle nop
  6745  0DD4  0000               	nop
  6746  0DD5  0022               	banksel	269	;# 
  6747  0DD6  158D               	bsf	13,3	;# 
  6748  0DD7  1180               	bcf	0,3	;# 
  6749  0DD8                     l103:
  6750  0DD8  0008               	return
  6751  0DD9                     __end_of_MTOUCH_CVD_ScanA_5:
  6752                           
  6753                           	psect	text41
  6754  0D99                     __ptext41:	
  6755 ;; *************** function _MTOUCH_CVD_ScanA_4 *****************
  6756 ;; Defined at:
  6757 ;;		line 558 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  6758 ;; Parameters:    Size  Location     Type
  6759 ;;		None
  6760 ;; Auto vars:     Size  Location     Type
  6761 ;;		None
  6762 ;; Return value:  Size  Location     Type
  6763 ;;                  1    wreg      void 
  6764 ;; Registers used:
  6765 ;;		wreg
  6766 ;; Tracked objects:
  6767 ;;		On entry : 0/0
  6768 ;;		On exit  : 0/0
  6769 ;;		Unchanged: 0/0
  6770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6771 ;;      Params:         0       0       0       0       0       0
  6772 ;;      Locals:         0       0       0       0       0       0
  6773 ;;      Temps:          0       0       0       0       0       0
  6774 ;;      Totals:         0       0       0       0       0       0
  6775 ;;Total ram usage:        0 bytes
  6776 ;; Hardware stack levels used:    1
  6777 ;; This function calls:
  6778 ;;		Nothing
  6779 ;; This function is called by:
  6780 ;;		_Sensor_Acq_ExecuteScan
  6781 ;; This function uses a non-reentrant model
  6782 ;;
  6783                           
  6784                           
  6785                           ;psect for function _MTOUCH_CVD_ScanA_4
  6786  0D99                     _MTOUCH_CVD_ScanA_4:
  6787  0D99                     l2588:	
  6788                           ;incstack = 0
  6789                           ; Regs used in _MTOUCH_CVD_ScanA_4: [wreg]
  6790                           
  6791  0D99  0022               	banksel	268	;# 
  6792  0D9A  160C               	bsf	12,4	;# 
  6793  0D9B  0021               	banksel	157	;# 
  6794  0D9C  3011               	movlw	17	;# 
  6795  0D9D  009D               	movwf	29	;# 
  6796  0D9E                     l2590:
  6797                           
  6798                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 570:     _delay(16u);
  6799  0D9E  3005               	movlw	5
  6800  0D9F                     u2147:
  6801  0D9F  0B89               	decfsz	9,f
  6802  0DA0  2D9F               	goto	u2147
  6803  0DA1  0000               	nop
  6804  0DA2  308D               	movlw	141	;# 
  6805  0DA3  0084               	movwf	4	;# 
  6806  0DA4  3000               	movlw	0	;# 
  6807  0DA5  0085               	movwf	5	;# 
  6808  0DA6  300D               	movlw	13	;# 
  6809  0DA7  0086               	movwf	6	;# 
  6810  0DA8  3001               	movlw	1	;# 
  6811  0DA9  0087               	movwf	7	;# 
  6812  0DAA  302D               	movlw	45	;# 
  6813  0DAB  1480               	bsf	0,1	;# 
  6814  0DAC                     l2592:
  6815                           
  6816                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 588:     _delay(0u);
  6817  0DAC  009D               	movwf	29	;# 
  6818  0DAD                     l2594:
  6819                           
  6820                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 594:     _delay(8u);
  6821  0DAD  3200               	nop2	;2 cycle nop
  6822  0DAE  3200               	nop2	;2 cycle nop
  6823  0DAF  3200               	nop2	;2 cycle nop
  6824  0DB0  3200               	nop2	;2 cycle nop
  6825  0DB1  0021               	banksel	157	;# 
  6826  0DB2  149D               	bsf	29,1	;# 
  6827  0DB3                     l2596:
  6828                           
  6829                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 601:     _delay(3u);
  6830  0DB3  3200               	nop2	;2 cycle nop
  6831  0DB4  0000               	nop
  6832  0DB5  0022               	banksel	269	;# 
  6833  0DB6  148D               	bsf	13,1	;# 
  6834  0DB7  1080               	bcf	0,1	;# 
  6835  0DB8                     l97:
  6836  0DB8  0008               	return
  6837  0DB9                     __end_of_MTOUCH_CVD_ScanA_4:
  6838                           
  6839                           	psect	text42
  6840  0D79                     __ptext42:	
  6841 ;; *************** function _MTOUCH_CVD_ScanA_3 *****************
  6842 ;; Defined at:
  6843 ;;		line 431 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  6844 ;; Parameters:    Size  Location     Type
  6845 ;;		None
  6846 ;; Auto vars:     Size  Location     Type
  6847 ;;		None
  6848 ;; Return value:  Size  Location     Type
  6849 ;;                  1    wreg      void 
  6850 ;; Registers used:
  6851 ;;		wreg
  6852 ;; Tracked objects:
  6853 ;;		On entry : 0/0
  6854 ;;		On exit  : 0/0
  6855 ;;		Unchanged: 0/0
  6856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6857 ;;      Params:         0       0       0       0       0       0
  6858 ;;      Locals:         0       0       0       0       0       0
  6859 ;;      Temps:          0       0       0       0       0       0
  6860 ;;      Totals:         0       0       0       0       0       0
  6861 ;;Total ram usage:        0 bytes
  6862 ;; Hardware stack levels used:    1
  6863 ;; This function calls:
  6864 ;;		Nothing
  6865 ;; This function is called by:
  6866 ;;		_Sensor_Acq_ExecuteScan
  6867 ;; This function uses a non-reentrant model
  6868 ;;
  6869                           
  6870                           
  6871                           ;psect for function _MTOUCH_CVD_ScanA_3
  6872  0D79                     _MTOUCH_CVD_ScanA_3:
  6873  0D79                     l2568:	
  6874                           ;incstack = 0
  6875                           ; Regs used in _MTOUCH_CVD_ScanA_3: [wreg]
  6876                           
  6877  0D79  0022               	banksel	268	;# 
  6878  0D7A  150C               	bsf	12,2	;# 
  6879  0D7B  0021               	banksel	157	;# 
  6880  0D7C  3009               	movlw	9	;# 
  6881  0D7D  009D               	movwf	29	;# 
  6882  0D7E                     l2570:
  6883                           
  6884                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 443:     _delay(16u);
  6885  0D7E  3005               	movlw	5
  6886  0D7F                     u2157:
  6887  0D7F  0B89               	decfsz	9,f
  6888  0D80  2D7F               	goto	u2157
  6889  0D81  0000               	nop
  6890  0D82  308C               	movlw	140	;# 
  6891  0D83  0084               	movwf	4	;# 
  6892  0D84  3000               	movlw	0	;# 
  6893  0D85  0085               	movwf	5	;# 
  6894  0D86  300C               	movlw	12	;# 
  6895  0D87  0086               	movwf	6	;# 
  6896  0D88  3001               	movlw	1	;# 
  6897  0D89  0087               	movwf	7	;# 
  6898  0D8A  3011               	movlw	17	;# 
  6899  0D8B  1600               	bsf	0,4	;# 
  6900  0D8C                     l2572:
  6901                           
  6902                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 461:     _delay(0u);
  6903  0D8C  009D               	movwf	29	;# 
  6904  0D8D                     l2574:
  6905                           
  6906                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 467:     _delay(8u);
  6907  0D8D  3200               	nop2	;2 cycle nop
  6908  0D8E  3200               	nop2	;2 cycle nop
  6909  0D8F  3200               	nop2	;2 cycle nop
  6910  0D90  3200               	nop2	;2 cycle nop
  6911  0D91  0021               	banksel	157	;# 
  6912  0D92  149D               	bsf	29,1	;# 
  6913  0D93                     l2576:
  6914                           
  6915                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 474:     _delay(3u);
  6916  0D93  3200               	nop2	;2 cycle nop
  6917  0D94  0000               	nop
  6918  0D95  0022               	banksel	268	;# 
  6919  0D96  160C               	bsf	12,4	;# 
  6920  0D97  1200               	bcf	0,4	;# 
  6921  0D98                     l91:
  6922  0D98  0008               	return
  6923  0D99                     __end_of_MTOUCH_CVD_ScanA_3:
  6924                           
  6925                           	psect	text43
  6926  0D59                     __ptext43:	
  6927 ;; *************** function _MTOUCH_CVD_ScanA_2 *****************
  6928 ;; Defined at:
  6929 ;;		line 304 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  6930 ;; Parameters:    Size  Location     Type
  6931 ;;		None
  6932 ;; Auto vars:     Size  Location     Type
  6933 ;;		None
  6934 ;; Return value:  Size  Location     Type
  6935 ;;                  1    wreg      void 
  6936 ;; Registers used:
  6937 ;;		wreg
  6938 ;; Tracked objects:
  6939 ;;		On entry : 0/0
  6940 ;;		On exit  : 0/0
  6941 ;;		Unchanged: 0/0
  6942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6943 ;;      Params:         0       0       0       0       0       0
  6944 ;;      Locals:         0       0       0       0       0       0
  6945 ;;      Temps:          0       0       0       0       0       0
  6946 ;;      Totals:         0       0       0       0       0       0
  6947 ;;Total ram usage:        0 bytes
  6948 ;; Hardware stack levels used:    1
  6949 ;; This function calls:
  6950 ;;		Nothing
  6951 ;; This function is called by:
  6952 ;;		_Sensor_Acq_ExecuteScan
  6953 ;; This function uses a non-reentrant model
  6954 ;;
  6955                           
  6956                           
  6957                           ;psect for function _MTOUCH_CVD_ScanA_2
  6958  0D59                     _MTOUCH_CVD_ScanA_2:
  6959  0D59                     l2548:	
  6960                           ;incstack = 0
  6961                           ; Regs used in _MTOUCH_CVD_ScanA_2: [wreg]
  6962                           
  6963  0D59  0022               	banksel	268	;# 
  6964  0D5A  148C               	bsf	12,1	;# 
  6965  0D5B  0021               	banksel	157	;# 
  6966  0D5C  3005               	movlw	5	;# 
  6967  0D5D  009D               	movwf	29	;# 
  6968  0D5E                     l2550:
  6969                           
  6970                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 316:     _delay(16u);
  6971  0D5E  3005               	movlw	5
  6972  0D5F                     u2167:
  6973  0D5F  0B89               	decfsz	9,f
  6974  0D60  2D5F               	goto	u2167
  6975  0D61  0000               	nop
  6976  0D62  308C               	movlw	140	;# 
  6977  0D63  0084               	movwf	4	;# 
  6978  0D64  3000               	movlw	0	;# 
  6979  0D65  0085               	movwf	5	;# 
  6980  0D66  300C               	movlw	12	;# 
  6981  0D67  0086               	movwf	6	;# 
  6982  0D68  3001               	movlw	1	;# 
  6983  0D69  0087               	movwf	7	;# 
  6984  0D6A  3009               	movlw	9	;# 
  6985  0D6B  1500               	bsf	0,2	;# 
  6986  0D6C                     l2552:
  6987                           
  6988                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 334:     _delay(0u);
  6989  0D6C  009D               	movwf	29	;# 
  6990  0D6D                     l2554:
  6991                           
  6992                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 340:     _delay(8u);
  6993  0D6D  3200               	nop2	;2 cycle nop
  6994  0D6E  3200               	nop2	;2 cycle nop
  6995  0D6F  3200               	nop2	;2 cycle nop
  6996  0D70  3200               	nop2	;2 cycle nop
  6997  0D71  0021               	banksel	157	;# 
  6998  0D72  149D               	bsf	29,1	;# 
  6999  0D73                     l2556:
  7000                           
  7001                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 347:     _delay(3u);
  7002  0D73  3200               	nop2	;2 cycle nop
  7003  0D74  0000               	nop
  7004  0D75  0022               	banksel	268	;# 
  7005  0D76  150C               	bsf	12,2	;# 
  7006  0D77  1100               	bcf	0,2	;# 
  7007  0D78                     l85:
  7008  0D78  0008               	return
  7009  0D79                     __end_of_MTOUCH_CVD_ScanA_2:
  7010                           
  7011                           	psect	text44
  7012  0D39                     __ptext44:	
  7013 ;; *************** function _MTOUCH_CVD_ScanA_1 *****************
  7014 ;; Defined at:
  7015 ;;		line 177 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  7016 ;; Parameters:    Size  Location     Type
  7017 ;;		None
  7018 ;; Auto vars:     Size  Location     Type
  7019 ;;		None
  7020 ;; Return value:  Size  Location     Type
  7021 ;;                  1    wreg      void 
  7022 ;; Registers used:
  7023 ;;		wreg
  7024 ;; Tracked objects:
  7025 ;;		On entry : 0/0
  7026 ;;		On exit  : 0/0
  7027 ;;		Unchanged: 0/0
  7028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7029 ;;      Params:         0       0       0       0       0       0
  7030 ;;      Locals:         0       0       0       0       0       0
  7031 ;;      Temps:          0       0       0       0       0       0
  7032 ;;      Totals:         0       0       0       0       0       0
  7033 ;;Total ram usage:        0 bytes
  7034 ;; Hardware stack levels used:    1
  7035 ;; This function calls:
  7036 ;;		Nothing
  7037 ;; This function is called by:
  7038 ;;		_Sensor_Acq_ExecuteScan
  7039 ;; This function uses a non-reentrant model
  7040 ;;
  7041                           
  7042                           
  7043                           ;psect for function _MTOUCH_CVD_ScanA_1
  7044  0D39                     _MTOUCH_CVD_ScanA_1:
  7045  0D39                     l2528:	
  7046                           ;incstack = 0
  7047                           ; Regs used in _MTOUCH_CVD_ScanA_1: [wreg]
  7048                           
  7049  0D39  0022               	banksel	268	;# 
  7050  0D3A  140C               	bsf	12,0	;# 
  7051  0D3B  0021               	banksel	157	;# 
  7052  0D3C  3001               	movlw	1	;# 
  7053  0D3D  009D               	movwf	29	;# 
  7054  0D3E                     l2530:
  7055                           
  7056                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 189:     _delay(16u);
  7057  0D3E  3005               	movlw	5
  7058  0D3F                     u2177:
  7059  0D3F  0B89               	decfsz	9,f
  7060  0D40  2D3F               	goto	u2177
  7061  0D41  0000               	nop
  7062  0D42  308C               	movlw	140	;# 
  7063  0D43  0084               	movwf	4	;# 
  7064  0D44  3000               	movlw	0	;# 
  7065  0D45  0085               	movwf	5	;# 
  7066  0D46  300C               	movlw	12	;# 
  7067  0D47  0086               	movwf	6	;# 
  7068  0D48  3001               	movlw	1	;# 
  7069  0D49  0087               	movwf	7	;# 
  7070  0D4A  3005               	movlw	5	;# 
  7071  0D4B  1480               	bsf	0,1	;# 
  7072  0D4C                     l2532:
  7073                           
  7074                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 207:     _delay(0u);
  7075  0D4C  009D               	movwf	29	;# 
  7076  0D4D                     l2534:
  7077                           
  7078                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 213:     _delay(8u);
  7079  0D4D  3200               	nop2	;2 cycle nop
  7080  0D4E  3200               	nop2	;2 cycle nop
  7081  0D4F  3200               	nop2	;2 cycle nop
  7082  0D50  3200               	nop2	;2 cycle nop
  7083  0D51  0021               	banksel	157	;# 
  7084  0D52  149D               	bsf	29,1	;# 
  7085  0D53                     l2536:
  7086                           
  7087                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 220:     _delay(3u);
  7088  0D53  3200               	nop2	;2 cycle nop
  7089  0D54  0000               	nop
  7090  0D55  0022               	banksel	268	;# 
  7091  0D56  148C               	bsf	12,1	;# 
  7092  0D57  1080               	bcf	0,1	;# 
  7093  0D58                     l79:
  7094  0D58  0008               	return
  7095  0D59                     __end_of_MTOUCH_CVD_ScanA_1:
  7096                           
  7097                           	psect	text45
  7098  0D19                     __ptext45:	
  7099 ;; *************** function _MTOUCH_CVD_ScanA_0 *****************
  7100 ;; Defined at:
  7101 ;;		line 50 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  7102 ;; Parameters:    Size  Location     Type
  7103 ;;		None
  7104 ;; Auto vars:     Size  Location     Type
  7105 ;;		None
  7106 ;; Return value:  Size  Location     Type
  7107 ;;                  1    wreg      void 
  7108 ;; Registers used:
  7109 ;;		wreg
  7110 ;; Tracked objects:
  7111 ;;		On entry : 0/0
  7112 ;;		On exit  : 0/0
  7113 ;;		Unchanged: 0/0
  7114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7115 ;;      Params:         0       0       0       0       0       0
  7116 ;;      Locals:         0       0       0       0       0       0
  7117 ;;      Temps:          0       0       0       0       0       0
  7118 ;;      Totals:         0       0       0       0       0       0
  7119 ;;Total ram usage:        0 bytes
  7120 ;; Hardware stack levels used:    1
  7121 ;; This function calls:
  7122 ;;		Nothing
  7123 ;; This function is called by:
  7124 ;;		_Sensor_Acq_ExecuteScan
  7125 ;; This function uses a non-reentrant model
  7126 ;;
  7127                           
  7128                           
  7129                           ;psect for function _MTOUCH_CVD_ScanA_0
  7130  0D19                     _MTOUCH_CVD_ScanA_0:
  7131  0D19                     l2508:	
  7132                           ;incstack = 0
  7133                           ; Regs used in _MTOUCH_CVD_ScanA_0: [wreg]
  7134                           
  7135  0D19  0022               	banksel	269	;# 
  7136  0D1A  178D               	bsf	13,7	;# 
  7137  0D1B  0021               	banksel	157	;# 
  7138  0D1C  3019               	movlw	25	;# 
  7139  0D1D  009D               	movwf	29	;# 
  7140  0D1E                     l2510:
  7141                           
  7142                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 62:     _delay(16u);
  7143  0D1E  3005               	movlw	5
  7144  0D1F                     u2187:
  7145  0D1F  0B89               	decfsz	9,f
  7146  0D20  2D1F               	goto	u2187
  7147  0D21  0000               	nop
  7148  0D22  308C               	movlw	140	;# 
  7149  0D23  0084               	movwf	4	;# 
  7150  0D24  3000               	movlw	0	;# 
  7151  0D25  0085               	movwf	5	;# 
  7152  0D26  300C               	movlw	12	;# 
  7153  0D27  0086               	movwf	6	;# 
  7154  0D28  3001               	movlw	1	;# 
  7155  0D29  0087               	movwf	7	;# 
  7156  0D2A  3001               	movlw	1	;# 
  7157  0D2B  1400               	bsf	0,0	;# 
  7158  0D2C                     l2512:
  7159                           
  7160                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 80:     _delay(0u);
  7161  0D2C  009D               	movwf	29	;# 
  7162  0D2D                     l2514:
  7163                           
  7164                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 86:     _delay(8u);
  7165  0D2D  3200               	nop2	;2 cycle nop
  7166  0D2E  3200               	nop2	;2 cycle nop
  7167  0D2F  3200               	nop2	;2 cycle nop
  7168  0D30  3200               	nop2	;2 cycle nop
  7169  0D31  0021               	banksel	157	;# 
  7170  0D32  149D               	bsf	29,1	;# 
  7171  0D33                     l2516:
  7172                           
  7173                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 93:     _delay(3u);
  7174  0D33  3200               	nop2	;2 cycle nop
  7175  0D34  0000               	nop
  7176  0D35  0022               	banksel	268	;# 
  7177  0D36  140C               	bsf	12,0	;# 
  7178  0D37  1000               	bcf	0,0	;# 
  7179  0D38                     l73:
  7180  0D38  0008               	return
  7181  0D39                     __end_of_MTOUCH_CVD_ScanA_0:
  7182                           
  7183                           	psect	text46
  7184  0CF9                     __ptext46:	
  7185 ;; *************** function _MTOUCH_CVD_ScanA_9 *****************
  7186 ;; Defined at:
  7187 ;;		line 1193 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  7188 ;; Parameters:    Size  Location     Type
  7189 ;;		None
  7190 ;; Auto vars:     Size  Location     Type
  7191 ;;		None
  7192 ;; Return value:  Size  Location     Type
  7193 ;;                  1    wreg      void 
  7194 ;; Registers used:
  7195 ;;		wreg
  7196 ;; Tracked objects:
  7197 ;;		On entry : 0/0
  7198 ;;		On exit  : 0/0
  7199 ;;		Unchanged: 0/0
  7200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7201 ;;      Params:         0       0       0       0       0       0
  7202 ;;      Locals:         0       0       0       0       0       0
  7203 ;;      Temps:          0       0       0       0       0       0
  7204 ;;      Totals:         0       0       0       0       0       0
  7205 ;;Total ram usage:        0 bytes
  7206 ;; Hardware stack levels used:    1
  7207 ;; This function calls:
  7208 ;;		Nothing
  7209 ;; This function is called by:
  7210 ;;		_Sensor_Acq_ExecuteScan
  7211 ;; This function uses a non-reentrant model
  7212 ;;
  7213                           
  7214                           
  7215                           ;psect for function _MTOUCH_CVD_ScanA_9
  7216  0CF9                     _MTOUCH_CVD_ScanA_9:
  7217  0CF9                     l2688:	
  7218                           ;incstack = 0
  7219                           ; Regs used in _MTOUCH_CVD_ScanA_9: [wreg]
  7220                           
  7221  0CF9  0022               	banksel	269	;# 
  7222  0CFA  170D               	bsf	13,6	;# 
  7223  0CFB  0021               	banksel	157	;# 
  7224  0CFC  3015               	movlw	21	;# 
  7225  0CFD  009D               	movwf	29	;# 
  7226  0CFE                     l2690:
  7227                           
  7228                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1205:     _delay(16u);
  7229  0CFE  3005               	movlw	5
  7230  0CFF                     u2197:
  7231  0CFF  0B89               	decfsz	9,f
  7232  0D00  2CFF               	goto	u2197
  7233  0D01  0000               	nop
  7234  0D02  308D               	movlw	141	;# 
  7235  0D03  0084               	movwf	4	;# 
  7236  0D04  3000               	movlw	0	;# 
  7237  0D05  0085               	movwf	5	;# 
  7238  0D06  300D               	movlw	13	;# 
  7239  0D07  0086               	movwf	6	;# 
  7240  0D08  3001               	movlw	1	;# 
  7241  0D09  0087               	movwf	7	;# 
  7242  0D0A  3019               	movlw	25	;# 
  7243  0D0B  1780               	bsf	0,7	;# 
  7244  0D0C                     l2692:
  7245                           
  7246                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1223:     _delay(0u);
  7247  0D0C  009D               	movwf	29	;# 
  7248  0D0D                     l2694:
  7249                           
  7250                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1229:     _delay(8u);
  7251  0D0D  3200               	nop2	;2 cycle nop
  7252  0D0E  3200               	nop2	;2 cycle nop
  7253  0D0F  3200               	nop2	;2 cycle nop
  7254  0D10  3200               	nop2	;2 cycle nop
  7255  0D11  0021               	banksel	157	;# 
  7256  0D12  149D               	bsf	29,1	;# 
  7257  0D13                     l2696:
  7258                           
  7259                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1236:     _delay(3u);
  7260  0D13  3200               	nop2	;2 cycle nop
  7261  0D14  0000               	nop
  7262  0D15  0022               	banksel	269	;# 
  7263  0D16  178D               	bsf	13,7	;# 
  7264  0D17  1380               	bcf	0,7	;# 
  7265  0D18                     l127:
  7266  0D18  0008               	return
  7267  0D19                     __end_of_MTOUCH_CVD_ScanA_9:
  7268                           
  7269                           	psect	text47
  7270  0C5C                     __ptext47:	
  7271 ;; *************** function _MTOUCH_Random *****************
  7272 ;; Defined at:
  7273 ;;		line 66 in file "mcc_generated_files/mtouch/mtouch_random.c"
  7274 ;; Parameters:    Size  Location     Type
  7275 ;;		None
  7276 ;; Auto vars:     Size  Location     Type
  7277 ;;		None
  7278 ;; Return value:  Size  Location     Type
  7279 ;;                  1    wreg      unsigned char 
  7280 ;; Registers used:
  7281 ;;		wreg, status,2, status,0
  7282 ;; Tracked objects:
  7283 ;;		On entry : 0/0
  7284 ;;		On exit  : 0/0
  7285 ;;		Unchanged: 0/0
  7286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7287 ;;      Params:         0       0       0       0       0       0
  7288 ;;      Locals:         0       0       0       0       0       0
  7289 ;;      Temps:          1       0       0       0       0       0
  7290 ;;      Totals:         1       0       0       0       0       0
  7291 ;;Total ram usage:        1 bytes
  7292 ;; Hardware stack levels used:    1
  7293 ;; This function calls:
  7294 ;;		Nothing
  7295 ;; This function is called by:
  7296 ;;		_Sensor_Acq_ExecutePacket
  7297 ;; This function uses a non-reentrant model
  7298 ;;
  7299                           
  7300                           
  7301                           ;psect for function _MTOUCH_Random
  7302  0C5C                     _MTOUCH_Random:
  7303  0C5C                     l2722:	
  7304                           ;incstack = 0
  7305                           ; Regs used in _MTOUCH_Random: [wreg+status,2+status,0]
  7306                           
  7307                           
  7308                           ;mcc_generated_files/mtouch/mtouch_random.c: 68:     static MTOUCH_RANDOM_t seed = (MTOU
      +                          CH_RANDOM_t)0;;mcc_generated_files/mtouch/mtouch_random.c: 70:     if ((seed & (MTOUCH_R
      +                          ANDOM_t)1) != (MTOUCH_RANDOM_t)0)
  7309  0C5C  0020               	movlb	0	; select bank0
  7310  0C5D  1C4B               	btfss	MTOUCH_Random@seed,0
  7311  0C5E  2C60               	goto	u1051
  7312  0C5F  2C61               	goto	u1050
  7313  0C60                     u1051:
  7314  0C60  2C66               	goto	l2726
  7315  0C61                     u1050:
  7316  0C61                     l2724:
  7317                           
  7318                           ;mcc_generated_files/mtouch/mtouch_random.c: 71:     {;mcc_generated_files/mtouch/mtouch
      +                          _random.c: 73:         seed = seed >> (uint8_t)1;
  7319  0C61  364B               	lsrf	MTOUCH_Random@seed,w
  7320  0C62  00F0               	movwf	??_MTOUCH_Random
  7321  0C63  0870               	movf	??_MTOUCH_Random,w
  7322  0C64  00CB               	movwf	MTOUCH_Random@seed
  7323                           
  7324                           ;mcc_generated_files/mtouch/mtouch_random.c: 74:     }
  7325  0C65  2C6F               	goto	l2730
  7326  0C66                     l2726:
  7327                           
  7328                           ;mcc_generated_files/mtouch/mtouch_random.c: 76:     {;mcc_generated_files/mtouch/mtouch
      +                          _random.c: 81:         seed = seed >> (uint8_t)1;
  7329  0C66  364B               	lsrf	MTOUCH_Random@seed,w
  7330  0C67  00F0               	movwf	??_MTOUCH_Random
  7331  0C68  0870               	movf	??_MTOUCH_Random,w
  7332  0C69  00CB               	movwf	MTOUCH_Random@seed
  7333  0C6A                     l2728:
  7334                           
  7335                           ;mcc_generated_files/mtouch/mtouch_random.c: 82:         seed = seed ^ (MTOUCH_RANDOM_t)
      +                          0xB4;
  7336  0C6A  084B               	movf	MTOUCH_Random@seed,w
  7337  0C6B  3AB4               	xorlw	180
  7338  0C6C  00F0               	movwf	??_MTOUCH_Random
  7339  0C6D  0870               	movf	??_MTOUCH_Random,w
  7340  0C6E  00CB               	movwf	MTOUCH_Random@seed
  7341  0C6F                     l2730:
  7342                           
  7343                           ;mcc_generated_files/mtouch/mtouch_random.c: 85:     return (uint8_t)seed & 0x0F;
  7344  0C6F  084B               	movf	MTOUCH_Random@seed,w
  7345  0C70  390F               	andlw	15
  7346  0C71                     l7:
  7347  0C71  0008               	return
  7348  0C72                     __end_of_MTOUCH_Random:
  7349                           
  7350                           	psect	text48
  7351  0C35                     __ptext48:	
  7352 ;; *************** function _MTOUCH_Delay *****************
  7353 ;; Defined at:
  7354 ;;		line 371 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  7355 ;; Parameters:    Size  Location     Type
  7356 ;;		None
  7357 ;; Auto vars:     Size  Location     Type
  7358 ;;  i               1    1[COMMON] unsigned char 
  7359 ;; Return value:  Size  Location     Type
  7360 ;;                  1    wreg      void 
  7361 ;; Registers used:
  7362 ;;		wreg, status,2, status,0
  7363 ;; Tracked objects:
  7364 ;;		On entry : 0/0
  7365 ;;		On exit  : 0/0
  7366 ;;		Unchanged: 0/0
  7367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7368 ;;      Params:         0       0       0       0       0       0
  7369 ;;      Locals:         1       0       0       0       0       0
  7370 ;;      Temps:          1       0       0       0       0       0
  7371 ;;      Totals:         2       0       0       0       0       0
  7372 ;;Total ram usage:        2 bytes
  7373 ;; Hardware stack levels used:    1
  7374 ;; This function calls:
  7375 ;;		Nothing
  7376 ;; This function is called by:
  7377 ;;		_Sensor_Acq_ExecutePacket
  7378 ;; This function uses a non-reentrant model
  7379 ;;
  7380                           
  7381                           
  7382                           ;psect for function _MTOUCH_Delay
  7383  0C35                     _MTOUCH_Delay:
  7384  0C35                     l2776:	
  7385                           ;incstack = 0
  7386                           ; Regs used in _MTOUCH_Delay: [wreg+status,2+status,0]
  7387                           
  7388                           
  7389                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 373:     for(uint8_t i = sample_delay;i>0;i
      +                          --)
  7390  0C35  0020               	movlb	0	; select bank0
  7391  0C36  0845               	movf	_sample_delay,w
  7392  0C37  00F0               	movwf	??_MTOUCH_Delay
  7393  0C38  0870               	movf	??_MTOUCH_Delay,w
  7394  0C39  00F1               	movwf	MTOUCH_Delay@i
  7395  0C3A                     l2778:
  7396  0C3A  0871               	movf	MTOUCH_Delay@i,w
  7397  0C3B  1D03               	btfss	3,2
  7398  0C3C  2C3E               	goto	u1101
  7399  0C3D  2C3F               	goto	u1100
  7400  0C3E                     u1101:
  7401  0C3E  2C40               	goto	l2782
  7402  0C3F                     u1100:
  7403  0C3F  2C47               	goto	l301
  7404  0C40                     l2782:
  7405                           
  7406                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 374:     { }
  7407  0C40  3001               	movlw	1
  7408  0C41  02F1               	subwf	MTOUCH_Delay@i,f
  7409  0C42  0871               	movf	MTOUCH_Delay@i,w
  7410  0C43  1D03               	btfss	3,2
  7411  0C44  2C46               	goto	u1111
  7412  0C45  2C47               	goto	u1110
  7413  0C46                     u1111:
  7414  0C46  2C40               	goto	l2782
  7415  0C47                     u1110:
  7416  0C47                     l301:
  7417  0C47  0008               	return
  7418  0C48                     __end_of_MTOUCH_Delay:
  7419                           
  7420                           	psect	text49
  7421  0BC4                     __ptext49:	
  7422 ;; *************** function _MTOUCH_Initialize *****************
  7423 ;; Defined at:
  7424 ;;		line 81 in file "mcc_generated_files/mtouch/mtouch.c"
  7425 ;; Parameters:    Size  Location     Type
  7426 ;;		None
  7427 ;; Auto vars:     Size  Location     Type
  7428 ;;		None
  7429 ;; Return value:  Size  Location     Type
  7430 ;;                  1    wreg      void 
  7431 ;; Registers used:
  7432 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7433 ;; Tracked objects:
  7434 ;;		On entry : 0/0
  7435 ;;		On exit  : 0/0
  7436 ;;		Unchanged: 0/0
  7437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7438 ;;      Params:         0       0       0       0       0       0
  7439 ;;      Locals:         0       0       0       0       0       0
  7440 ;;      Temps:          0       0       0       0       0       0
  7441 ;;      Totals:         0       0       0       0       0       0
  7442 ;;Total ram usage:        0 bytes
  7443 ;; Hardware stack levels used:    1
  7444 ;; Hardware stack levels required when called:    4
  7445 ;; This function calls:
  7446 ;;		_MTOUCH_Button_InitializeAll
  7447 ;;		_MTOUCH_Sensor_InitializeAll
  7448 ;;		_MTOUCH_Sensor_Sampled_ResetAll
  7449 ;;		_MTOUCH_Sensor_Scan_Initialize
  7450 ;; This function is called by:
  7451 ;;		_MTOUCH_Service_Mainloop
  7452 ;;		_SYSTEM_Initialize
  7453 ;; This function uses a non-reentrant model
  7454 ;;
  7455                           
  7456                           
  7457                           ;psect for function _MTOUCH_Initialize
  7458  0BC4                     _MTOUCH_Initialize:
  7459  0BC4                     l3148:	
  7460                           ;incstack = 0
  7461                           ; Regs used in _MTOUCH_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7462                           
  7463                           
  7464                           ;mcc_generated_files/mtouch/mtouch.c: 83:     MTOUCH_Sensor_InitializeAll();
  7465  0BC4  318B  23D1  318B   	fcall	_MTOUCH_Sensor_InitializeAll
  7466  0BC7                     l3150:
  7467                           
  7468                           ;mcc_generated_files/mtouch/mtouch.c: 84:     MTOUCH_Button_InitializeAll();
  7469  0BC7  318F  2779  318B   	fcall	_MTOUCH_Button_InitializeAll
  7470  0BCA                     l3152:
  7471                           
  7472                           ;mcc_generated_files/mtouch/mtouch.c: 85:     MTOUCH_Sensor_Sampled_ResetAll();
  7473  0BCA  3181  2154  318B   	fcall	_MTOUCH_Sensor_Sampled_ResetAll
  7474  0BCD                     l3154:
  7475                           
  7476                           ;mcc_generated_files/mtouch/mtouch.c: 86:     MTOUCH_Sensor_Scan_Initialize();
  7477  0BCD  318B  2363  318B   	fcall	_MTOUCH_Sensor_Scan_Initialize
  7478  0BD0                     l49:
  7479  0BD0  0008               	return
  7480  0BD1                     __end_of_MTOUCH_Initialize:
  7481                           
  7482                           	psect	text50
  7483  0B63                     __ptext50:	
  7484 ;; *************** function _MTOUCH_Sensor_Scan_Initialize *****************
  7485 ;; Defined at:
  7486 ;;		line 180 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  7487 ;; Parameters:    Size  Location     Type
  7488 ;;		None
  7489 ;; Auto vars:     Size  Location     Type
  7490 ;;		None
  7491 ;; Return value:  Size  Location     Type
  7492 ;;                  1    wreg      void 
  7493 ;; Registers used:
  7494 ;;		wreg, status,2
  7495 ;; Tracked objects:
  7496 ;;		On entry : 0/0
  7497 ;;		On exit  : 0/0
  7498 ;;		Unchanged: 0/0
  7499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7500 ;;      Params:         0       0       0       0       0       0
  7501 ;;      Locals:         0       0       0       0       0       0
  7502 ;;      Temps:          0       0       0       0       0       0
  7503 ;;      Totals:         0       0       0       0       0       0
  7504 ;;Total ram usage:        0 bytes
  7505 ;; Hardware stack levels used:    1
  7506 ;; This function calls:
  7507 ;;		Nothing
  7508 ;; This function is called by:
  7509 ;;		_MTOUCH_Initialize
  7510 ;;		_Sensor_Acq_ExecutePacket
  7511 ;; This function uses a non-reentrant model
  7512 ;;
  7513                           
  7514                           
  7515                           ;psect for function _MTOUCH_Sensor_Scan_Initialize
  7516  0B63                     _MTOUCH_Sensor_Scan_Initialize:
  7517  0B63                     l2734:	
  7518                           ;incstack = 0
  7519                           ; Regs used in _MTOUCH_Sensor_Scan_Initialize: [wreg+status,2]
  7520                           
  7521                           
  7522                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 183:     ADCON0 = (uint8_t)0;
  7523  0B63  0021               	movlb	1	; select bank1
  7524  0B64  019D               	clrf	29	;volatile
  7525  0B65                     l2736:
  7526                           
  7527                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 184:     ADCON1 = (uint8_t)( 0x1<<7 | 0x2<<
      +                          4 | 0x0 );
  7528  0B65  30A0               	movlw	160
  7529  0B66  009E               	movwf	30	;volatile
  7530  0B67                     l243:
  7531  0B67  0008               	return
  7532  0B68                     __end_of_MTOUCH_Sensor_Scan_Initialize:
  7533                           
  7534                           	psect	text51
  7535  0154                     __ptext51:	
  7536 ;; *************** function _MTOUCH_Sensor_Sampled_ResetAll *****************
  7537 ;; Defined at:
  7538 ;;		line 555 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  7539 ;; Parameters:    Size  Location     Type
  7540 ;;		None
  7541 ;; Auto vars:     Size  Location     Type
  7542 ;;  sensor          2   10[COMMON] PTR struct .
  7543 ;;		 -> mtouch_sensor(90), 
  7544 ;; Return value:  Size  Location     Type
  7545 ;;                  1    wreg      void 
  7546 ;; Registers used:
  7547 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7548 ;; Tracked objects:
  7549 ;;		On entry : 0/0
  7550 ;;		On exit  : 0/0
  7551 ;;		Unchanged: 0/0
  7552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7553 ;;      Params:         0       0       0       0       0       0
  7554 ;;      Locals:         2       0       0       0       0       0
  7555 ;;      Temps:          2       0       0       0       0       0
  7556 ;;      Totals:         4       0       0       0       0       0
  7557 ;;Total ram usage:        4 bytes
  7558 ;; Hardware stack levels used:    1
  7559 ;; Hardware stack levels required when called:    1
  7560 ;; This function calls:
  7561 ;;		_Sensor_Sampled_Reset
  7562 ;; This function is called by:
  7563 ;;		_MTOUCH_Initialize
  7564 ;;		_MTOUCH_Service_Mainloop
  7565 ;; This function uses a non-reentrant model
  7566 ;;
  7567                           
  7568                           
  7569                           ;psect for function _MTOUCH_Sensor_Sampled_ResetAll
  7570  0154                     _MTOUCH_Sensor_Sampled_ResetAll:
  7571  0154                     l3078:	
  7572                           ;incstack = 0
  7573                           ; Regs used in _MTOUCH_Sensor_Sampled_ResetAll: [wreg+fsr1l+fsr1h+status,2+status,0+pcla
      +                          th+cstack]
  7574                           
  7575                           
  7576                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 557:     mtouch_sensor_t* sensor;;mcc_gener
      +                          ated_files/mtouch/mtouch_sensor.c: 558:     for(sensor = &mtouch_sensor[0];sensor<= &mto
      +                          uch_sensor[10u -1];sensor++)
  7577  0154  306C               	movlw	108
  7578  0155  00FA               	movwf	MTOUCH_Sensor_Sampled_ResetAll@sensor
  7579  0156  3020               	movlw	32
  7580  0157  00FB               	movwf	MTOUCH_Sensor_Sampled_ResetAll@sensor+1
  7581  0158  30BD               	movlw	189
  7582  0159  00F8               	movwf	??_MTOUCH_Sensor_Sampled_ResetAll
  7583  015A  3020               	movlw	32
  7584  015B  00F9               	movwf	??_MTOUCH_Sensor_Sampled_ResetAll+1
  7585  015C  087B               	movf	MTOUCH_Sensor_Sampled_ResetAll@sensor+1,w
  7586  015D  0279               	subwf	??_MTOUCH_Sensor_Sampled_ResetAll+1,w
  7587  015E  1D03               	skipz
  7588  015F  2962               	goto	u1505
  7589  0160  087A               	movf	MTOUCH_Sensor_Sampled_ResetAll@sensor,w
  7590  0161  0278               	subwf	??_MTOUCH_Sensor_Sampled_ResetAll,w
  7591  0162                     u1505:
  7592  0162  1803               	skipnc
  7593  0163  2965               	goto	u1501
  7594  0164  2966               	goto	u1500
  7595  0165                     u1501:
  7596  0165  2967               	goto	l3082
  7597  0166                     u1500:
  7598  0166  2980               	goto	l372
  7599  0167                     l3082:
  7600                           
  7601                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 559:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 560:         Sensor_Sampled_Reset(sensor);
  7602  0167  087B               	movf	MTOUCH_Sensor_Sampled_ResetAll@sensor+1,w
  7603  0168  00F7               	movwf	Sensor_Sampled_Reset@sensor+1
  7604  0169  087A               	movf	MTOUCH_Sensor_Sampled_ResetAll@sensor,w
  7605  016A  00F6               	movwf	Sensor_Sampled_Reset@sensor
  7606  016B  318B  237A  3181   	fcall	_Sensor_Sampled_Reset
  7607  016E                     l3084:
  7608                           
  7609                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 561:     }
  7610  016E  3009               	movlw	9
  7611  016F  07FA               	addwf	MTOUCH_Sensor_Sampled_ResetAll@sensor,f
  7612  0170  3000               	movlw	0
  7613  0171  3DFB               	addwfc	MTOUCH_Sensor_Sampled_ResetAll@sensor+1,f
  7614  0172                     l3086:
  7615  0172  30BD               	movlw	189
  7616  0173  00F8               	movwf	??_MTOUCH_Sensor_Sampled_ResetAll
  7617  0174  3020               	movlw	32
  7618  0175  00F9               	movwf	??_MTOUCH_Sensor_Sampled_ResetAll+1
  7619  0176  087B               	movf	MTOUCH_Sensor_Sampled_ResetAll@sensor+1,w
  7620  0177  0279               	subwf	??_MTOUCH_Sensor_Sampled_ResetAll+1,w
  7621  0178  1D03               	skipz
  7622  0179  297C               	goto	u1515
  7623  017A  087A               	movf	MTOUCH_Sensor_Sampled_ResetAll@sensor,w
  7624  017B  0278               	subwf	??_MTOUCH_Sensor_Sampled_ResetAll,w
  7625  017C                     u1515:
  7626  017C  1803               	skipnc
  7627  017D  297F               	goto	u1511
  7628  017E  2980               	goto	u1510
  7629  017F                     u1511:
  7630  017F  2967               	goto	l3082
  7631  0180                     u1510:
  7632  0180                     l372:
  7633  0180  0008               	return
  7634  0181                     __end_of_MTOUCH_Sensor_Sampled_ResetAll:
  7635                           
  7636                           	psect	text52
  7637  0BD1                     __ptext52:	
  7638 ;; *************** function _MTOUCH_Sensor_InitializeAll *****************
  7639 ;; Defined at:
  7640 ;;		line 165 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  7641 ;; Parameters:    Size  Location     Type
  7642 ;;		None
  7643 ;; Auto vars:     Size  Location     Type
  7644 ;;  sensor          1   13[COMMON] enum E2470
  7645 ;; Return value:  Size  Location     Type
  7646 ;;                  1    wreg      void 
  7647 ;; Registers used:
  7648 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7649 ;; Tracked objects:
  7650 ;;		On entry : 0/0
  7651 ;;		On exit  : 0/0
  7652 ;;		Unchanged: 0/0
  7653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7654 ;;      Params:         0       0       0       0       0       0
  7655 ;;      Locals:         1       0       0       0       0       0
  7656 ;;      Temps:          1       0       0       0       0       0
  7657 ;;      Totals:         2       0       0       0       0       0
  7658 ;;Total ram usage:        2 bytes
  7659 ;; Hardware stack levels used:    1
  7660 ;; Hardware stack levels required when called:    3
  7661 ;; This function calls:
  7662 ;;		_MTOUCH_Sensor_Initialize
  7663 ;; This function is called by:
  7664 ;;		_MTOUCH_Initialize
  7665 ;; This function uses a non-reentrant model
  7666 ;;
  7667                           
  7668                           
  7669                           ;psect for function _MTOUCH_Sensor_InitializeAll
  7670  0BD1                     _MTOUCH_Sensor_InitializeAll:
  7671  0BD1                     l3052:	
  7672                           ;incstack = 0
  7673                           ; Regs used in _MTOUCH_Sensor_InitializeAll: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  7674                           
  7675                           
  7676                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 167:     enum mtouch_sensor_names sensor;;m
      +                          cc_generated_files/mtouch/mtouch_sensor.c: 168:     for (sensor = 0; sensor < 10u; senso
      +                          r++)
  7677  0BD1  01FD               	clrf	MTOUCH_Sensor_InitializeAll@sensor
  7678  0BD2                     l3058:
  7679                           
  7680                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 169:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 170:         MTOUCH_Sensor_Initialize(sensor);
  7681  0BD2  087D               	movf	MTOUCH_Sensor_InitializeAll@sensor,w
  7682  0BD3  318F  27DD  318B   	fcall	_MTOUCH_Sensor_Initialize
  7683  0BD6                     l3060:
  7684                           
  7685                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 171:     }
  7686  0BD6  3001               	movlw	1
  7687  0BD7  00FC               	movwf	??_MTOUCH_Sensor_InitializeAll
  7688  0BD8  087C               	movf	??_MTOUCH_Sensor_InitializeAll,w
  7689  0BD9  07FD               	addwf	MTOUCH_Sensor_InitializeAll@sensor,f
  7690  0BDA                     l3062:
  7691  0BDA  300A               	movlw	10
  7692  0BDB  027D               	subwf	MTOUCH_Sensor_InitializeAll@sensor,w
  7693  0BDC  1C03               	skipc
  7694  0BDD  2BDF               	goto	u1481
  7695  0BDE  2BE0               	goto	u1480
  7696  0BDF                     u1481:
  7697  0BDF  2BD2               	goto	l3058
  7698  0BE0                     u1480:
  7699  0BE0                     l240:
  7700  0BE0  0008               	return
  7701  0BE1                     __end_of_MTOUCH_Sensor_InitializeAll:
  7702                           
  7703                           	psect	text53
  7704  0FDD                     __ptext53:	
  7705 ;; *************** function _MTOUCH_Sensor_Initialize *****************
  7706 ;; Defined at:
  7707 ;;		line 151 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  7708 ;; Parameters:    Size  Location     Type
  7709 ;;  sensor          1    wreg     enum E2470
  7710 ;; Auto vars:     Size  Location     Type
  7711 ;;  sensor          1   11[COMMON] enum E2470
  7712 ;; Return value:  Size  Location     Type
  7713 ;;                  1    wreg      enum E2481
  7714 ;; Registers used:
  7715 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7716 ;; Tracked objects:
  7717 ;;		On entry : 0/0
  7718 ;;		On exit  : 0/0
  7719 ;;		Unchanged: 0/0
  7720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7721 ;;      Params:         0       0       0       0       0       0
  7722 ;;      Locals:         1       0       0       0       0       0
  7723 ;;      Temps:          0       4       0       0       0       0
  7724 ;;      Totals:         1       4       0       0       0       0
  7725 ;;Total ram usage:        5 bytes
  7726 ;; Hardware stack levels used:    1
  7727 ;; Hardware stack levels required when called:    2
  7728 ;; This function calls:
  7729 ;;		_MTOUCH_Sensor_Enable
  7730 ;;		_Sensor_Sampled_Reset
  7731 ;;		___wmul
  7732 ;; This function is called by:
  7733 ;;		_MTOUCH_Sensor_InitializeAll
  7734 ;; This function uses a non-reentrant model
  7735 ;;
  7736                           
  7737                           
  7738                           ;psect for function _MTOUCH_Sensor_Initialize
  7739  0FDD                     _MTOUCH_Sensor_Initialize:
  7740                           
  7741                           ;incstack = 0
  7742                           ; Regs used in _MTOUCH_Sensor_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  7743                           ;MTOUCH_Sensor_Initialize@sensor stored from wreg
  7744  0FDD  00FB               	movwf	MTOUCH_Sensor_Initialize@sensor
  7745  0FDE                     l2898:
  7746                           
  7747                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 151: enum mtouch_sensor_error MTOUCH_Sensor
      +                          _Initialize(enum mtouch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c:
      +                           152: {;mcc_generated_files/mtouch/mtouch_sensor.c: 153:     MTOUCH_Sensor_Enable(sensor
      +                          );
  7748  0FDE  087B               	movf	MTOUCH_Sensor_Initialize@sensor,w
  7749  0FDF  318F  279A  318F   	fcall	_MTOUCH_Sensor_Enable
  7750                           
  7751                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 154:     Sensor_Sampled_Reset(&mtouch_senso
      +                          r[sensor]);
  7752  0FE2  087B               	movf	MTOUCH_Sensor_Initialize@sensor,w
  7753  0FE3  0020               	movlb	0	; select bank0
  7754  0FE4  00A0               	movwf	??_MTOUCH_Sensor_Initialize
  7755  0FE5  01A1               	clrf	??_MTOUCH_Sensor_Initialize+1
  7756  0FE6  0820               	movf	??_MTOUCH_Sensor_Initialize,w
  7757  0FE7  00F0               	movwf	___wmul@multiplier
  7758  0FE8  0821               	movf	??_MTOUCH_Sensor_Initialize+1,w
  7759  0FE9  00F1               	movwf	___wmul@multiplier+1
  7760  0FEA  3009               	movlw	9
  7761  0FEB  00F2               	movwf	___wmul@multiplicand
  7762  0FEC  3000               	movlw	0
  7763  0FED  00F3               	movwf	___wmul@multiplicand+1
  7764  0FEE  318C  24DA  318F   	fcall	___wmul
  7765  0FF1  306C               	movlw	108
  7766  0FF2  0020               	movlb	0	; select bank0
  7767  0FF3  00A2               	movwf	??_MTOUCH_Sensor_Initialize+2
  7768  0FF4  3020               	movlw	32
  7769  0FF5  00A3               	movwf	??_MTOUCH_Sensor_Initialize+3
  7770  0FF6  0870               	movf	?___wmul,w
  7771  0FF7  0722               	addwf	??_MTOUCH_Sensor_Initialize+2,w
  7772  0FF8  00F6               	movwf	Sensor_Sampled_Reset@sensor
  7773  0FF9  0871               	movf	?___wmul+1,w
  7774  0FFA  3D23               	addwfc	??_MTOUCH_Sensor_Initialize+3,w
  7775  0FFB  00F7               	movwf	Sensor_Sampled_Reset@sensor+1
  7776  0FFC  318B  237A  318F   	fcall	_Sensor_Sampled_Reset
  7777  0FFF                     l235:
  7778  0FFF  0008               	return
  7779  1000                     __end_of_MTOUCH_Sensor_Initialize:
  7780                           
  7781                           	psect	text54
  7782  0B7A                     __ptext54:	
  7783 ;; *************** function _Sensor_Sampled_Reset *****************
  7784 ;; Defined at:
  7785 ;;		line 572 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  7786 ;; Parameters:    Size  Location     Type
  7787 ;;  sensor          2    6[COMMON] PTR struct .
  7788 ;;		 -> mtouch_sensor(90), 
  7789 ;; Auto vars:     Size  Location     Type
  7790 ;;		None
  7791 ;; Return value:  Size  Location     Type
  7792 ;;                  1    wreg      void 
  7793 ;; Registers used:
  7794 ;;		wreg, fsr1l, fsr1h
  7795 ;; Tracked objects:
  7796 ;;		On entry : 0/0
  7797 ;;		On exit  : 0/0
  7798 ;;		Unchanged: 0/0
  7799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7800 ;;      Params:         2       0       0       0       0       0
  7801 ;;      Locals:         0       0       0       0       0       0
  7802 ;;      Temps:          0       0       0       0       0       0
  7803 ;;      Totals:         2       0       0       0       0       0
  7804 ;;Total ram usage:        2 bytes
  7805 ;; Hardware stack levels used:    1
  7806 ;; This function calls:
  7807 ;;		Nothing
  7808 ;; This function is called by:
  7809 ;;		_MTOUCH_Sensor_Initialize
  7810 ;;		_MTOUCH_Sensor_Sampled_ResetAll
  7811 ;; This function uses a non-reentrant model
  7812 ;;
  7813                           
  7814                           
  7815                           ;psect for function _Sensor_Sampled_Reset
  7816  0B7A                     _Sensor_Sampled_Reset:
  7817  0B7A                     l2800:	
  7818                           ;incstack = 0
  7819                           ; Regs used in _Sensor_Sampled_Reset: [wregfsr1]
  7820                           
  7821                           
  7822                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 572: static __attribute__((inline)) void Se
      +                          nsor_Sampled_Reset(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 
      +                          573: {;mcc_generated_files/mtouch/mtouch_sensor.c: 574:     sensor->sampled = 0;
  7823  0B7A  0876               	movf	Sensor_Sampled_Reset@sensor,w
  7824  0B7B  0086               	movwf	6
  7825  0B7C  0877               	movf	Sensor_Sampled_Reset@sensor+1,w
  7826  0B7D  0087               	movwf	7
  7827  0B7E  3148               	addfsr 1,8
  7828  0B7F  1081               	bcf	1,1
  7829  0B80                     l380:
  7830  0B80  0008               	return
  7831  0B81                     __end_of_Sensor_Sampled_Reset:
  7832                           
  7833                           	psect	text55
  7834  0F9A                     __ptext55:	
  7835 ;; *************** function _MTOUCH_Sensor_Enable *****************
  7836 ;; Defined at:
  7837 ;;		line 489 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  7838 ;; Parameters:    Size  Location     Type
  7839 ;;  sensor          1    wreg     enum E2470
  7840 ;; Auto vars:     Size  Location     Type
  7841 ;;  sensor          1   10[COMMON] enum E2470
  7842 ;; Return value:  Size  Location     Type
  7843 ;;                  1    wreg      void 
  7844 ;; Registers used:
  7845 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7846 ;; Tracked objects:
  7847 ;;		On entry : 0/0
  7848 ;;		On exit  : 0/0
  7849 ;;		Unchanged: 0/0
  7850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7851 ;;      Params:         0       0       0       0       0       0
  7852 ;;      Locals:         1       0       0       0       0       0
  7853 ;;      Temps:          4       0       0       0       0       0
  7854 ;;      Totals:         5       0       0       0       0       0
  7855 ;;Total ram usage:        5 bytes
  7856 ;; Hardware stack levels used:    1
  7857 ;; Hardware stack levels required when called:    1
  7858 ;; This function calls:
  7859 ;;		___wmul
  7860 ;; This function is called by:
  7861 ;;		_MTOUCH_Sensor_Initialize
  7862 ;; This function uses a non-reentrant model
  7863 ;;
  7864                           
  7865                           
  7866                           ;psect for function _MTOUCH_Sensor_Enable
  7867  0F9A                     _MTOUCH_Sensor_Enable:
  7868                           
  7869                           ;incstack = 0
  7870                           ; Regs used in _MTOUCH_Sensor_Enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7871                           ;MTOUCH_Sensor_Enable@sensor stored from wreg
  7872  0F9A  00FA               	movwf	MTOUCH_Sensor_Enable@sensor
  7873  0F9B                     l2796:
  7874                           
  7875                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 489: void MTOUCH_Sensor_Enable(enum mtouch_
      +                          sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 490: {;mcc_generated_fi
      +                          les/mtouch/mtouch_sensor.c: 491:     if(sensor < 10u)
  7876  0F9B  300A               	movlw	10
  7877  0F9C  027A               	subwf	MTOUCH_Sensor_Enable@sensor,w
  7878  0F9D  1803               	skipnc
  7879  0F9E  2FA0               	goto	u1131
  7880  0F9F  2FA1               	goto	u1130
  7881  0FA0                     u1131:
  7882  0FA0  2FBA               	goto	l341
  7883  0FA1                     u1130:
  7884  0FA1                     l2798:
  7885                           
  7886                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 492:         mtouch_sensor[sensor].enabled 
      +                          = 1;
  7887  0FA1  087A               	movf	MTOUCH_Sensor_Enable@sensor,w
  7888  0FA2  00F6               	movwf	??_MTOUCH_Sensor_Enable
  7889  0FA3  01F7               	clrf	??_MTOUCH_Sensor_Enable+1
  7890  0FA4  0876               	movf	??_MTOUCH_Sensor_Enable,w
  7891  0FA5  00F0               	movwf	___wmul@multiplier
  7892  0FA6  0877               	movf	??_MTOUCH_Sensor_Enable+1,w
  7893  0FA7  00F1               	movwf	___wmul@multiplier+1
  7894  0FA8  3009               	movlw	9
  7895  0FA9  00F2               	movwf	___wmul@multiplicand
  7896  0FAA  3000               	movlw	0
  7897  0FAB  00F3               	movwf	___wmul@multiplicand+1
  7898  0FAC  318C  24DA  318F   	fcall	___wmul
  7899  0FAF  3074               	movlw	116
  7900  0FB0  00F8               	movwf	??_MTOUCH_Sensor_Enable+2
  7901  0FB1  3020               	movlw	32
  7902  0FB2  00F9               	movwf	??_MTOUCH_Sensor_Enable+3
  7903  0FB3  0870               	movf	?___wmul,w
  7904  0FB4  0778               	addwf	??_MTOUCH_Sensor_Enable+2,w
  7905  0FB5  0086               	movwf	6
  7906  0FB6  0871               	movf	?___wmul+1,w
  7907  0FB7  3D79               	addwfc	??_MTOUCH_Sensor_Enable+3,w
  7908  0FB8  0087               	movwf	7
  7909  0FB9  1401               	bsf	1,0
  7910  0FBA                     l341:
  7911  0FBA  0008               	return
  7912  0FBB                     __end_of_MTOUCH_Sensor_Enable:
  7913                           
  7914                           	psect	text56
  7915  0F79                     __ptext56:	
  7916 ;; *************** function _MTOUCH_Button_InitializeAll *****************
  7917 ;; Defined at:
  7918 ;;		line 248 in file "mcc_generated_files/mtouch/mtouch_button.c"
  7919 ;; Parameters:    Size  Location     Type
  7920 ;;		None
  7921 ;; Auto vars:     Size  Location     Type
  7922 ;;  button          1    0[BANK0 ] enum E2698
  7923 ;; Return value:  Size  Location     Type
  7924 ;;                  1    wreg      void 
  7925 ;; Registers used:
  7926 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7927 ;; Tracked objects:
  7928 ;;		On entry : 0/0
  7929 ;;		On exit  : 0/0
  7930 ;;		Unchanged: 0/0
  7931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7932 ;;      Params:         0       0       0       0       0       0
  7933 ;;      Locals:         0       1       0       0       0       0
  7934 ;;      Temps:          1       0       0       0       0       0
  7935 ;;      Totals:         1       1       0       0       0       0
  7936 ;;Total ram usage:        2 bytes
  7937 ;; Hardware stack levels used:    1
  7938 ;; Hardware stack levels required when called:    2
  7939 ;; This function calls:
  7940 ;;		_MTOUCH_Button_Initialize
  7941 ;;		_memcpy
  7942 ;; This function is called by:
  7943 ;;		_MTOUCH_Initialize
  7944 ;; This function uses a non-reentrant model
  7945 ;;
  7946                           
  7947                           
  7948                           ;psect for function _MTOUCH_Button_InitializeAll
  7949  0F79                     _MTOUCH_Button_InitializeAll:
  7950  0F79                     l3064:	
  7951                           ;incstack = 0
  7952                           ; Regs used in _MTOUCH_Button_InitializeAll: [wreg-fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  7953                           
  7954                           
  7955                           ;mcc_generated_files/mtouch/mtouch_button.c: 250:     enum mtouch_button_names button;;m
      +                          cc_generated_files/mtouch/mtouch_button.c: 252:     memcpy(mtouch_button,mtouch_button_i
      +                          nit,sizeof(mtouch_button_init));
  7956  0F79  30C6               	movlw	198
  7957  0F7A  00F0               	movwf	memcpy@d1
  7958  0F7B  3020               	movlw	32
  7959  0F7C  00F1               	movwf	memcpy@d1+1
  7960  0F7D  3000               	movlw	low (_mtouch_button_init| (0+32768))
  7961  0F7E  00F2               	movwf	memcpy@s1
  7962  0F7F  3088               	movlw	high (_mtouch_button_init| (0+32768))
  7963  0F80  00F3               	movwf	memcpy@s1+1
  7964  0F81  30AA               	movlw	170
  7965  0F82  00F4               	movwf	memcpy@n
  7966  0F83  3000               	movlw	0
  7967  0F84  00F5               	movwf	memcpy@n+1
  7968  0F85  3181  2128  318F   	fcall	_memcpy
  7969  0F88                     l3066:
  7970                           
  7971                           ;mcc_generated_files/mtouch/mtouch_button.c: 254:     for (button = 0; button < 10u; but
      +                          ton++)
  7972  0F88  0020               	movlb	0	; select bank0
  7973  0F89  01A0               	clrf	MTOUCH_Button_InitializeAll@button
  7974  0F8A                     l3072:
  7975                           
  7976                           ;mcc_generated_files/mtouch/mtouch_button.c: 255:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 256:         MTOUCH_Button_Initialize(button);
  7977  0F8A  0820               	movf	MTOUCH_Button_InitializeAll@button,w
  7978  0F8B  3181  21B0  318F   	fcall	_MTOUCH_Button_Initialize
  7979  0F8E                     l3074:
  7980                           
  7981                           ;mcc_generated_files/mtouch/mtouch_button.c: 257:     }
  7982  0F8E  3001               	movlw	1
  7983  0F8F  00FD               	movwf	??_MTOUCH_Button_InitializeAll
  7984  0F90  087D               	movf	??_MTOUCH_Button_InitializeAll,w
  7985  0F91  0020               	movlb	0	; select bank0
  7986  0F92  07A0               	addwf	MTOUCH_Button_InitializeAll@button,f
  7987  0F93                     l3076:
  7988  0F93  300A               	movlw	10
  7989  0F94  0220               	subwf	MTOUCH_Button_InitializeAll@button,w
  7990  0F95  1C03               	skipc
  7991  0F96  2F98               	goto	u1491
  7992  0F97  2F99               	goto	u1490
  7993  0F98                     u1491:
  7994  0F98  2F8A               	goto	l3072
  7995  0F99                     u1490:
  7996  0F99                     l450:
  7997  0F99  0008               	return
  7998  0F9A                     __end_of_MTOUCH_Button_InitializeAll:
  7999                           
  8000                           	psect	text57
  8001  0128                     __ptext57:	
  8002 ;; *************** function _memcpy *****************
  8003 ;; Defined at:
  8004 ;;		line 4 in file "/Applications/microchip/xc8/v2.20/pic/sources/c99/common/memcpy.c"
  8005 ;; Parameters:    Size  Location     Type
  8006 ;;  d1              2    0[COMMON] PTR void 
  8007 ;;		 -> mtouch_button(170), 
  8008 ;;  s1              2    2[COMMON] PTR const void 
  8009 ;;		 -> mtouch_button_init(170), 
  8010 ;;  n               2    4[COMMON] unsigned int 
  8011 ;; Auto vars:     Size  Location     Type
  8012 ;;  s               2    9[COMMON] PTR const unsigned char 
  8013 ;;		 -> mtouch_button_init(170), 
  8014 ;;  d               2    7[COMMON] PTR unsigned char 
  8015 ;;		 -> mtouch_button(170), 
  8016 ;;  tmp             1   11[COMMON] unsigned char 
  8017 ;; Return value:  Size  Location     Type
  8018 ;;                  2    0[COMMON] PTR void 
  8019 ;; Registers used:
  8020 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  8021 ;; Tracked objects:
  8022 ;;		On entry : 0/0
  8023 ;;		On exit  : 0/0
  8024 ;;		Unchanged: 0/0
  8025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8026 ;;      Params:         6       0       0       0       0       0
  8027 ;;      Locals:         5       0       0       0       0       0
  8028 ;;      Temps:          1       0       0       0       0       0
  8029 ;;      Totals:        12       0       0       0       0       0
  8030 ;;Total ram usage:       12 bytes
  8031 ;; Hardware stack levels used:    1
  8032 ;; This function calls:
  8033 ;;		Nothing
  8034 ;; This function is called by:
  8035 ;;		_MTOUCH_Button_InitializeAll
  8036 ;; This function uses a non-reentrant model
  8037 ;;
  8038                           
  8039                           
  8040                           ;psect for function _memcpy
  8041  0128                     _memcpy:
  8042  0128                     l2956:	
  8043                           ;incstack = 0
  8044                           ; Regs used in _memcpy: [wreg-fsr1h+status,2+status,0+pclath]
  8045                           
  8046  0128  0873               	movf	memcpy@s1+1,w
  8047  0129  00FA               	movwf	memcpy@s+1
  8048  012A  0872               	movf	memcpy@s1,w
  8049  012B  00F9               	movwf	memcpy@s
  8050  012C  0871               	movf	memcpy@d1+1,w
  8051  012D  00F8               	movwf	memcpy@d+1
  8052  012E  0870               	movf	memcpy@d1,w
  8053  012F  00F7               	movwf	memcpy@d
  8054  0130  2947               	goto	l2966
  8055  0131                     l2958:
  8056  0131  0879               	movf	memcpy@s,w
  8057  0132  0084               	movwf	4
  8058  0133  087A               	movf	memcpy@s+1,w
  8059  0134  0085               	movwf	5
  8060  0135  0800               	movf	0,w	;code access
  8061  0136  00F6               	movwf	??_memcpy
  8062  0137  0876               	movf	??_memcpy,w
  8063  0138  00FB               	movwf	memcpy@tmp
  8064  0139                     l2960:
  8065  0139  3001               	movlw	1
  8066  013A  07F9               	addwf	memcpy@s,f
  8067  013B  3000               	movlw	0
  8068  013C  3DFA               	addwfc	memcpy@s+1,f
  8069  013D                     l2962:
  8070  013D  0877               	movf	memcpy@d,w
  8071  013E  0086               	movwf	6
  8072  013F  0878               	movf	memcpy@d+1,w
  8073  0140  0087               	movwf	7
  8074  0141  087B               	movf	memcpy@tmp,w
  8075  0142  0081               	movwf	1
  8076  0143                     l2964:
  8077  0143  3001               	movlw	1
  8078  0144  07F7               	addwf	memcpy@d,f
  8079  0145  3000               	movlw	0
  8080  0146  3DF8               	addwfc	memcpy@d+1,f
  8081  0147                     l2966:
  8082  0147  3001               	movlw	1
  8083  0148  02F4               	subwf	memcpy@n,f
  8084  0149  3000               	movlw	0
  8085  014A  3BF5               	subwfb	memcpy@n+1,f
  8086  014B  0A74               	incf	memcpy@n,w
  8087  014C  1D03               	skipz
  8088  014D  2952               	goto	u1301
  8089  014E  0A75               	incf	memcpy@n+1,w
  8090  014F  1D03               	btfss	3,2
  8091  0150  2952               	goto	u1301
  8092  0151  2953               	goto	u1300
  8093  0152                     u1301:
  8094  0152  2931               	goto	l2958
  8095  0153                     u1300:
  8096  0153                     l1420:
  8097  0153  0008               	return
  8098  0154                     __end_of_memcpy:
  8099                           
  8100                           	psect	text58
  8101  0C11                     __ptext58:	
  8102 ;; *************** function _MTOUCH_Button_ServiceAll *****************
  8103 ;; Defined at:
  8104 ;;		line 266 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8105 ;; Parameters:    Size  Location     Type
  8106 ;;		None
  8107 ;; Auto vars:     Size  Location     Type
  8108 ;;  button          1   19[BANK0 ] enum E2698
  8109 ;; Return value:  Size  Location     Type
  8110 ;;                  1    wreg      void 
  8111 ;; Registers used:
  8112 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8113 ;; Tracked objects:
  8114 ;;		On entry : 0/0
  8115 ;;		On exit  : 0/0
  8116 ;;		Unchanged: 0/0
  8117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8118 ;;      Params:         0       0       0       0       0       0
  8119 ;;      Locals:         0       1       0       0       0       0
  8120 ;;      Temps:          1       0       0       0       0       0
  8121 ;;      Totals:         1       1       0       0       0       0
  8122 ;;Total ram usage:        2 bytes
  8123 ;; Hardware stack levels used:    1
  8124 ;; Hardware stack levels required when called:    5
  8125 ;; This function calls:
  8126 ;;		_Button_Service
  8127 ;; This function is called by:
  8128 ;;		_MTOUCH_Service_Mainloop
  8129 ;; This function uses a non-reentrant model
  8130 ;;
  8131                           
  8132                           
  8133                           ;psect for function _MTOUCH_Button_ServiceAll
  8134  0C11                     _MTOUCH_Button_ServiceAll:
  8135  0C11                     l3176:	
  8136                           ;incstack = 0
  8137                           ; Regs used in _MTOUCH_Button_ServiceAll: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8138                           
  8139                           
  8140                           ;mcc_generated_files/mtouch/mtouch_button.c: 268:     enum mtouch_button_names button;;m
      +                          cc_generated_files/mtouch/mtouch_button.c: 271:     for (button = 0; button < 10u; butto
      +                          n++)
  8141  0C11  0020               	movlb	0	; select bank0
  8142  0C12  01B3               	clrf	MTOUCH_Button_ServiceAll@button
  8143  0C13                     l3182:
  8144                           
  8145                           ;mcc_generated_files/mtouch/mtouch_button.c: 272:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 273:         Button_Service(button);
  8146  0C13  0833               	movf	MTOUCH_Button_ServiceAll@button,w
  8147  0C14  3184  2435  318C   	fcall	_Button_Service
  8148  0C17                     l3184:
  8149                           
  8150                           ;mcc_generated_files/mtouch/mtouch_button.c: 274:     }
  8151  0C17  3001               	movlw	1
  8152  0C18  00FD               	movwf	??_MTOUCH_Button_ServiceAll
  8153  0C19  087D               	movf	??_MTOUCH_Button_ServiceAll,w
  8154  0C1A  0020               	movlb	0	; select bank0
  8155  0C1B  07B3               	addwf	MTOUCH_Button_ServiceAll@button,f
  8156  0C1C                     l3186:
  8157  0C1C  300A               	movlw	10
  8158  0C1D  0233               	subwf	MTOUCH_Button_ServiceAll@button,w
  8159  0C1E  1C03               	skipc
  8160  0C1F  2C21               	goto	u1601
  8161  0C20  2C22               	goto	u1600
  8162  0C21                     u1601:
  8163  0C21  2C13               	goto	l3182
  8164  0C22                     u1600:
  8165  0C22                     l455:
  8166  0C22  0008               	return
  8167  0C23                     __end_of_MTOUCH_Button_ServiceAll:
  8168                           
  8169                           	psect	text59
  8170  0435                     __ptext59:	
  8171 ;; *************** function _Button_Service *****************
  8172 ;; Defined at:
  8173 ;;		line 277 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8174 ;; Parameters:    Size  Location     Type
  8175 ;;  name            1    wreg     enum E2698
  8176 ;; Auto vars:     Size  Location     Type
  8177 ;;  name            1   16[BANK0 ] enum E2698
  8178 ;;  button          2   17[BANK0 ] PTR struct .
  8179 ;;		 -> mtouch_button(170), 
  8180 ;; Return value:  Size  Location     Type
  8181 ;;                  1    wreg      void 
  8182 ;; Registers used:
  8183 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8184 ;; Tracked objects:
  8185 ;;		On entry : 0/0
  8186 ;;		On exit  : 0/0
  8187 ;;		Unchanged: 0/0
  8188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8189 ;;      Params:         0       0       0       0       0       0
  8190 ;;      Locals:         0       3       0       0       0       0
  8191 ;;      Temps:          0       4       0       0       0       0
  8192 ;;      Totals:         0       7       0       0       0       0
  8193 ;;Total ram usage:        7 bytes
  8194 ;; Hardware stack levels used:    1
  8195 ;; Hardware stack levels required when called:    4
  8196 ;; This function calls:
  8197 ;;		_Button_Deviation_Update
  8198 ;;		_Button_Reading_Update
  8199 ;;		_Button_State_Initializing
  8200 ;;		_Button_State_NotPressed
  8201 ;;		_Button_State_Pressed
  8202 ;;		_MTOUCH_Button_Initialize
  8203 ;;		_MTOUCH_Sensor_isCalibrated
  8204 ;;		_MTOUCH_Sensor_wasSampled
  8205 ;;		___wmul
  8206 ;; This function is called by:
  8207 ;;		_MTOUCH_Button_ServiceAll
  8208 ;; This function uses a non-reentrant model
  8209 ;;
  8210                           
  8211                           
  8212                           ;psect for function _Button_Service
  8213  0435                     _Button_Service:
  8214                           
  8215                           ;incstack = 0
  8216                           ; Regs used in _Button_Service: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8217                           ;Button_Service@name stored from wreg
  8218  0435  0020               	movlb	0	; select bank0
  8219  0436  00B0               	movwf	Button_Service@name
  8220  0437                     l3128:
  8221                           
  8222                           ;mcc_generated_files/mtouch/mtouch_button.c: 277: static void Button_Service(enum mtouch
      +                          _button_names name);mcc_generated_files/mtouch/mtouch_button.c: 278: {;mcc_generated_fil
      +                          es/mtouch/mtouch_button.c: 279:     mtouch_button_t* button = &mtouch_button[name];
  8223  0437  0830               	movf	Button_Service@name,w
  8224  0438  00AC               	movwf	??_Button_Service
  8225  0439  01AD               	clrf	??_Button_Service+1
  8226  043A  082C               	movf	??_Button_Service,w
  8227  043B  00F0               	movwf	___wmul@multiplier
  8228  043C  082D               	movf	??_Button_Service+1,w
  8229  043D  00F1               	movwf	___wmul@multiplier+1
  8230  043E  3011               	movlw	17
  8231  043F  00F2               	movwf	___wmul@multiplicand
  8232  0440  3000               	movlw	0
  8233  0441  00F3               	movwf	___wmul@multiplicand+1
  8234  0442  318C  24DA  3184   	fcall	___wmul
  8235  0445  30C6               	movlw	198
  8236  0446  0020               	movlb	0	; select bank0
  8237  0447  00AE               	movwf	??_Button_Service+2
  8238  0448  3020               	movlw	32
  8239  0449  00AF               	movwf	??_Button_Service+3
  8240  044A  0870               	movf	?___wmul,w
  8241  044B  072E               	addwf	??_Button_Service+2,w
  8242  044C  00B1               	movwf	Button_Service@button
  8243  044D  0871               	movf	?___wmul+1,w
  8244  044E  3D2F               	addwfc	??_Button_Service+3,w
  8245  044F  00B2               	movwf	Button_Service@button+1
  8246  0450                     l3130:
  8247                           
  8248                           ;mcc_generated_files/mtouch/mtouch_button.c: 281:     if (MTOUCH_Sensor_wasSampled(butto
      +                          n->sensor) && MTOUCH_Sensor_isCalibrated(button->sensor))
  8249  0450  0831               	movf	Button_Service@button,w
  8250  0451  0086               	movwf	6
  8251  0452  0832               	movf	Button_Service@button+1,w
  8252  0453  0087               	movwf	7
  8253  0454  3141               	addfsr 1,1
  8254  0455  0801               	movf	1,w
  8255  0456  3180  2037  3184   	fcall	_MTOUCH_Sensor_wasSampled
  8256  0459  3A00               	xorlw	0
  8257  045A  1903               	skipnz
  8258  045B  2C5D               	goto	u1551
  8259  045C  2C5E               	goto	u1550
  8260  045D                     u1551:
  8261  045D  2CA4               	goto	l460
  8262  045E                     u1550:
  8263  045E                     l3132:
  8264  045E  0020               	movlb	0	; select bank0
  8265  045F  0831               	movf	Button_Service@button,w
  8266  0460  0086               	movwf	6
  8267  0461  0832               	movf	Button_Service@button+1,w
  8268  0462  0087               	movwf	7
  8269  0463  3141               	addfsr 1,1
  8270  0464  0801               	movf	1,w
  8271  0465  318B  2357  3184   	fcall	_MTOUCH_Sensor_isCalibrated
  8272  0468  3A00               	xorlw	0
  8273  0469  1903               	skipnz
  8274  046A  2C6C               	goto	u1561
  8275  046B  2C6D               	goto	u1560
  8276  046C                     u1561:
  8277  046C  2CA4               	goto	l460
  8278  046D                     u1560:
  8279  046D                     l3134:
  8280                           
  8281                           ;mcc_generated_files/mtouch/mtouch_button.c: 282:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 283:         Button_Reading_Update(button);
  8282  046D  0020               	movlb	0	; select bank0
  8283  046E  0832               	movf	Button_Service@button+1,w
  8284  046F  00A5               	movwf	Button_Reading_Update@button+1
  8285  0470  0831               	movf	Button_Service@button,w
  8286  0471  00A4               	movwf	Button_Reading_Update@button
  8287  0472  318C  2472  3184   	fcall	_Button_Reading_Update
  8288                           
  8289                           ;mcc_generated_files/mtouch/mtouch_button.c: 284:         Button_Deviation_Update(button
      +                          );
  8290  0475  0020               	movlb	0	; select bank0
  8291  0476  0832               	movf	Button_Service@button+1,w
  8292  0477  00F1               	movwf	Button_Deviation_Update@button+1
  8293  0478  0831               	movf	Button_Service@button,w
  8294  0479  00F0               	movwf	Button_Deviation_Update@button
  8295  047A  3185  25FE  3184   	fcall	_Button_Deviation_Update
  8296  047D                     l3136:
  8297                           
  8298                           ;mcc_generated_files/mtouch/mtouch_button.c: 286:         if (button->state >= (uint8_t)
      +                          (sizeof(Button_StateMachine)/sizeof(button_statemachine_state_t)))
  8299  047D  0020               	movlb	0	; select bank0
  8300  047E  0831               	movf	Button_Service@button,w
  8301  047F  0086               	movwf	6
  8302  0480  0832               	movf	Button_Service@button+1,w
  8303  0481  0087               	movwf	7
  8304  0482  3142               	addfsr 1,2
  8305  0483  3003               	movlw	3
  8306  0484  0201               	subwf	1,w
  8307  0485  1C03               	skipc
  8308  0486  2C88               	goto	u1571
  8309  0487  2C89               	goto	u1570
  8310  0488                     u1571:
  8311  0488  2C91               	goto	l3140
  8312  0489                     u1570:
  8313  0489                     l3138:
  8314                           
  8315                           ;mcc_generated_files/mtouch/mtouch_button.c: 287:         {;mcc_generated_files/mtouch/m
      +                          touch_button.c: 288:             MTOUCH_Button_Initialize(button->name);
  8316  0489  0831               	movf	Button_Service@button,w
  8317  048A  0086               	movwf	6
  8318  048B  0832               	movf	Button_Service@button+1,w
  8319  048C  0087               	movwf	7
  8320  048D  0801               	movf	1,w
  8321  048E  3181  21B0  3184   	fcall	_MTOUCH_Button_Initialize
  8322  0491                     l3140:
  8323                           
  8324                           ;mcc_generated_files/mtouch/mtouch_button.c: 290:         Button_StateMachine[(uint8_t)b
      +                          utton->state](button);
  8325  0491  0020               	movlb	0	; select bank0
  8326  0492  0832               	movf	Button_Service@button+1,w
  8327  0493  00A7               	movwf	Button_State_Pressed@button+1
  8328  0494  0831               	movf	Button_Service@button,w
  8329  0495  00A6               	movwf	Button_State_Pressed@button
  8330  0496  0831               	movf	Button_Service@button,w
  8331  0497  0086               	movwf	6
  8332  0498  0832               	movf	Button_Service@button+1,w
  8333  0499  0087               	movwf	7
  8334  049A  3142               	addfsr 1,2
  8335  049B  3501               	lslf	1,w
  8336  049C  3E4C               	addlw	(low (_Button_StateMachine| 0))& (0+255)
  8337  049D  0086               	movwf	6
  8338  049E  0187               	clrf	7
  8339  049F  3F41               	moviw [1]fsr1
  8340  04A0  008A               	movwf	10
  8341  04A1  3F40               	moviw [0]fsr1
  8342  04A2  000A               	callw
  8343  04A3  3184               	pagesel	$
  8344  04A4                     l460:
  8345  04A4  0008               	return
  8346  04A5                     __end_of_Button_Service:
  8347                           
  8348                           	psect	text60
  8349  0037                     __ptext60:	
  8350 ;; *************** function _MTOUCH_Sensor_wasSampled *****************
  8351 ;; Defined at:
  8352 ;;		line 564 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  8353 ;; Parameters:    Size  Location     Type
  8354 ;;  sensor          1    wreg     enum E2470
  8355 ;; Auto vars:     Size  Location     Type
  8356 ;;  sensor          1   10[COMMON] enum E2470
  8357 ;; Return value:  Size  Location     Type
  8358 ;;                  1    wreg      _Bool 
  8359 ;; Registers used:
  8360 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8361 ;; Tracked objects:
  8362 ;;		On entry : 0/0
  8363 ;;		On exit  : 0/0
  8364 ;;		Unchanged: 0/0
  8365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8366 ;;      Params:         0       0       0       0       0       0
  8367 ;;      Locals:         1       0       0       0       0       0
  8368 ;;      Temps:          4       0       0       0       0       0
  8369 ;;      Totals:         5       0       0       0       0       0
  8370 ;;Total ram usage:        5 bytes
  8371 ;; Hardware stack levels used:    1
  8372 ;; Hardware stack levels required when called:    1
  8373 ;; This function calls:
  8374 ;;		___wmul
  8375 ;; This function is called by:
  8376 ;;		_Button_Service
  8377 ;; This function uses a non-reentrant model
  8378 ;;
  8379                           
  8380                           
  8381                           ;psect for function _MTOUCH_Sensor_wasSampled
  8382  0037                     _MTOUCH_Sensor_wasSampled:
  8383                           
  8384                           ;incstack = 0
  8385                           ; Regs used in _MTOUCH_Sensor_wasSampled: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  8386                           ;MTOUCH_Sensor_wasSampled@sensor stored from wreg
  8387  0037  00FA               	movwf	MTOUCH_Sensor_wasSampled@sensor
  8388  0038                     l2944:
  8389                           
  8390                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 564: _Bool MTOUCH_Sensor_wasSampled(enum mt
      +                          ouch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 565: {;mcc_generat
      +                          ed_files/mtouch/mtouch_sensor.c: 566:     if(sensor < 10u)
  8391  0038  300A               	movlw	10
  8392  0039  027A               	subwf	MTOUCH_Sensor_wasSampled@sensor,w
  8393  003A  1803               	skipnc
  8394  003B  283D               	goto	u1291
  8395  003C  283E               	goto	u1290
  8396  003D                     u1291:
  8397  003D  2859               	goto	l2952
  8398  003E                     u1290:
  8399  003E                     l2946:
  8400                           
  8401                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 567:         return (_Bool)mtouch_sensor[se
      +                          nsor].sampled;
  8402  003E  087A               	movf	MTOUCH_Sensor_wasSampled@sensor,w
  8403  003F  00F6               	movwf	??_MTOUCH_Sensor_wasSampled
  8404  0040  01F7               	clrf	??_MTOUCH_Sensor_wasSampled+1
  8405  0041  0876               	movf	??_MTOUCH_Sensor_wasSampled,w
  8406  0042  00F0               	movwf	___wmul@multiplier
  8407  0043  0877               	movf	??_MTOUCH_Sensor_wasSampled+1,w
  8408  0044  00F1               	movwf	___wmul@multiplier+1
  8409  0045  3009               	movlw	9
  8410  0046  00F2               	movwf	___wmul@multiplicand
  8411  0047  3000               	movlw	0
  8412  0048  00F3               	movwf	___wmul@multiplicand+1
  8413  0049  318C  24DA  3180   	fcall	___wmul
  8414  004C  3074               	movlw	116
  8415  004D  00F8               	movwf	??_MTOUCH_Sensor_wasSampled+2
  8416  004E  3020               	movlw	32
  8417  004F  00F9               	movwf	??_MTOUCH_Sensor_wasSampled+3
  8418  0050  0870               	movf	?___wmul,w
  8419  0051  0778               	addwf	??_MTOUCH_Sensor_wasSampled+2,w
  8420  0052  0086               	movwf	6
  8421  0053  0871               	movf	?___wmul+1,w
  8422  0054  3D79               	addwfc	??_MTOUCH_Sensor_wasSampled+3,w
  8423  0055  0087               	movwf	7
  8424  0056  0C01               	rrf	1,w
  8425  0057  3901               	andlw	1
  8426  0058  285A               	goto	l376
  8427  0059                     l2952:
  8428                           
  8429                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 569:         return 0;
  8430  0059  3000               	movlw	0
  8431  005A                     l376:
  8432  005A  0008               	return
  8433  005B                     __end_of_MTOUCH_Sensor_wasSampled:
  8434                           
  8435                           	psect	text61
  8436  0B57                     __ptext61:	
  8437 ;; *************** function _MTOUCH_Sensor_isCalibrated *****************
  8438 ;; Defined at:
  8439 ;;		line 537 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  8440 ;; Parameters:    Size  Location     Type
  8441 ;;  sensor          1    wreg     enum E2470
  8442 ;; Auto vars:     Size  Location     Type
  8443 ;;  sensor          1    0[COMMON] enum E2470
  8444 ;; Return value:  Size  Location     Type
  8445 ;;                  1    wreg      _Bool 
  8446 ;; Registers used:
  8447 ;;		wreg
  8448 ;; Tracked objects:
  8449 ;;		On entry : 0/0
  8450 ;;		On exit  : 0/0
  8451 ;;		Unchanged: 0/0
  8452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8453 ;;      Params:         0       0       0       0       0       0
  8454 ;;      Locals:         0       0       0       0       0       0
  8455 ;;      Temps:          0       0       0       0       0       0
  8456 ;;      Totals:         0       0       0       0       0       0
  8457 ;;Total ram usage:        0 bytes
  8458 ;; Hardware stack levels used:    1
  8459 ;; This function calls:
  8460 ;;		Nothing
  8461 ;; This function is called by:
  8462 ;;		_Button_Service
  8463 ;; This function uses a non-reentrant model
  8464 ;;
  8465                           
  8466                           
  8467                           ;psect for function _MTOUCH_Sensor_isCalibrated
  8468  0B57                     _MTOUCH_Sensor_isCalibrated:
  8469  0B57                     l2940:	
  8470                           ;incstack = 0
  8471                           ; Regs used in _MTOUCH_Sensor_isCalibrated: [wreg]
  8472                           
  8473                           
  8474                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 537: _Bool MTOUCH_Sensor_isCalibrated(enum 
      +                          mtouch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 538: {;mcc_gener
      +                          ated_files/mtouch/mtouch_sensor.c: 540:     return 1;
  8475  0B57  3001               	movlw	1
  8476  0B58                     l364:
  8477  0B58  0008               	return
  8478  0B59                     __end_of_MTOUCH_Sensor_isCalibrated:
  8479                           
  8480                           	psect	text62
  8481  071B                     __ptext62:	
  8482 ;; *************** function _Button_State_NotPressed *****************
  8483 ;; Defined at:
  8484 ;;		line 314 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8485 ;; Parameters:    Size  Location     Type
  8486 ;;  button          2    6[BANK0 ] PTR struct .
  8487 ;;		 -> mtouch_button(170), 
  8488 ;; Auto vars:     Size  Location     Type
  8489 ;;		None
  8490 ;; Return value:  Size  Location     Type
  8491 ;;                  1    wreg      void 
  8492 ;; Registers used:
  8493 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8494 ;; Tracked objects:
  8495 ;;		On entry : 0/0
  8496 ;;		On exit  : 0/0
  8497 ;;		Unchanged: 0/0
  8498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8499 ;;      Params:         0       2       0       0       0       0
  8500 ;;      Locals:         0       0       0       0       0       0
  8501 ;;      Temps:          0       2       0       0       0       0
  8502 ;;      Totals:         0       4       0       0       0       0
  8503 ;;Total ram usage:        4 bytes
  8504 ;; Hardware stack levels used:    1
  8505 ;; Hardware stack levels required when called:    2
  8506 ;; This function calls:
  8507 ;;		_Button_Baseline_Update
  8508 ;;		_Button_DefaultCallback
  8509 ;;		_MTOUCH_Button_Initialize
  8510 ;; This function is called by:
  8511 ;;		_Button_Service
  8512 ;; This function uses a non-reentrant model
  8513 ;;
  8514                           
  8515                           
  8516                           ;psect for function _Button_State_NotPressed
  8517  071B                     _Button_State_NotPressed:
  8518  071B                     l3004:	
  8519                           ;incstack = 0
  8520                           ; Regs used in _Button_State_NotPressed: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  8521                           
  8522                           
  8523                           ;mcc_generated_files/mtouch/mtouch_button.c: 314: static void Button_State_NotPressed(mt
      +                          ouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 315: {;mcc_generated_
      +                          files/mtouch/mtouch_button.c: 317:     if ((button->deviation) < (mtouch_button_deviatio
      +                          n_t)(-button->threshold))
  8524  071B  0020               	movlb	0	; select bank0
  8525  071C  0826               	movf	Button_State_NotPressed@button,w
  8526  071D  0086               	movwf	6
  8527  071E  0827               	movf	Button_State_NotPressed@button+1,w
  8528  071F  0087               	movwf	7
  8529  0720  3149               	addfsr 1,9
  8530  0721  0801               	movf	1,w
  8531  0722  3A80               	xorlw	128
  8532  0723  00A8               	movwf	??_Button_State_NotPressed
  8533  0724  0826               	movf	Button_State_NotPressed@button,w
  8534  0725  0086               	movwf	6
  8535  0726  0827               	movf	Button_State_NotPressed@button+1,w
  8536  0727  0087               	movwf	7
  8537  0728  314E               	addfsr 1,14
  8538  0729  0301               	decf	1,w
  8539  072A  3AFF               	xorlw	255
  8540  072B  3A80               	xorlw	128
  8541  072C  02A8               	subwf	??_Button_State_NotPressed,f
  8542  072D  1803               	skipnc
  8543  072E  2F30               	goto	u1391
  8544  072F  2F31               	goto	u1390
  8545  0730                     u1391:
  8546  0730  2F5E               	goto	l3014
  8547  0731                     u1390:
  8548  0731                     l3006:
  8549                           
  8550                           ;mcc_generated_files/mtouch/mtouch_button.c: 318:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 319:         (button->counter)++;
  8551  0731  0826               	movf	Button_State_NotPressed@button,w
  8552  0732  0086               	movwf	6
  8553  0733  0827               	movf	Button_State_NotPressed@button+1,w
  8554  0734  0087               	movwf	7
  8555  0735  314A               	addfsr 1,10
  8556  0736  3001               	movlw	1
  8557  0737  0781               	addwf	1,f
  8558  0738  3141               	addfsr 1,1
  8559  0739  1803               	skipnc
  8560  073A  0A81               	incf	1,f
  8561  073B                     l3008:
  8562                           
  8563                           ;mcc_generated_files/mtouch/mtouch_button.c: 320:         if ((button->counter) > (mtouc
      +                          h_button_statecounter_t)((mtouch_button_statecounter_t)64u))
  8564  073B  0826               	movf	Button_State_NotPressed@button,w
  8565  073C  0086               	movwf	6
  8566  073D  0827               	movf	Button_State_NotPressed@button+1,w
  8567  073E  0087               	movwf	7
  8568  073F  314A               	addfsr 1,10
  8569  0740  3F40               	moviw [0]fsr1
  8570  0741  00A8               	movwf	??_Button_State_NotPressed
  8571  0742  3F41               	moviw [1]fsr1
  8572  0743  00A9               	movwf	??_Button_State_NotPressed+1
  8573  0744  3000               	movlw	0
  8574  0745  0229               	subwf	??_Button_State_NotPressed+1,w
  8575  0746  3041               	movlw	65
  8576  0747  1903               	skipnz
  8577  0748  0228               	subwf	??_Button_State_NotPressed,w
  8578  0749  1C03               	skipc
  8579  074A  2F4C               	goto	u1401
  8580  074B  2F4D               	goto	u1400
  8581  074C                     u1401:
  8582  074C  2FA2               	goto	l3024
  8583  074D                     u1400:
  8584  074D                     l3010:
  8585                           
  8586                           ;mcc_generated_files/mtouch/mtouch_button.c: 321:         {;mcc_generated_files/mtouch/m
      +                          touch_button.c: 322:             button->counter = (mtouch_button_statecounter_t)0;
  8587  074D  0826               	movf	Button_State_NotPressed@button,w
  8588  074E  0086               	movwf	6
  8589  074F  0827               	movf	Button_State_NotPressed@button+1,w
  8590  0750  0087               	movwf	7
  8591  0751  314A               	addfsr 1,10
  8592  0752  3000               	movlw	0
  8593  0753  3FC0               	movwi [0]fsr1
  8594  0754  3FC1               	movwi [1]fsr1
  8595  0755                     l3012:
  8596                           
  8597                           ;mcc_generated_files/mtouch/mtouch_button.c: 323:             MTOUCH_Button_Initialize(b
      +                          utton->name);
  8598  0755  0826               	movf	Button_State_NotPressed@button,w
  8599  0756  0086               	movwf	6
  8600  0757  0827               	movf	Button_State_NotPressed@button+1,w
  8601  0758  0087               	movwf	7
  8602  0759  0801               	movf	1,w
  8603  075A  3181  21B0  3187   	fcall	_MTOUCH_Button_Initialize
  8604  075D  2FA2               	goto	l3024
  8605  075E                     l3014:
  8606  075E  0826               	movf	Button_State_NotPressed@button,w
  8607  075F  0086               	movwf	6
  8608  0760  0827               	movf	Button_State_NotPressed@button+1,w
  8609  0761  0087               	movwf	7
  8610  0762  3149               	addfsr 1,9
  8611  0763  0801               	movf	1,w
  8612  0764  00A8               	movwf	??_Button_State_NotPressed
  8613  0765  01A9               	clrf	??_Button_State_NotPressed+1
  8614  0766  1BA8               	btfsc	??_Button_State_NotPressed,7
  8615  0767  03A9               	decf	??_Button_State_NotPressed+1,f
  8616  0768  0826               	movf	Button_State_NotPressed@button,w
  8617  0769  0086               	movwf	6
  8618  076A  0827               	movf	Button_State_NotPressed@button+1,w
  8619  076B  0087               	movwf	7
  8620  076C  314E               	addfsr 1,14
  8621  076D  0829               	movf	??_Button_State_NotPressed+1,w
  8622  076E  3A80               	xorlw	128
  8623  076F  3C80               	sublw	128
  8624  0770  1D03               	skipz
  8625  0771  2F74               	goto	u1415
  8626  0772  0828               	movf	??_Button_State_NotPressed,w
  8627  0773  0201               	subwf	1,w
  8628  0774                     u1415:
  8629  0774  1803               	skipnc
  8630  0775  2F77               	goto	u1411
  8631  0776  2F78               	goto	u1410
  8632  0777                     u1411:
  8633  0777  2F99               	goto	l3022
  8634  0778                     u1410:
  8635  0778                     l3016:
  8636                           
  8637                           ;mcc_generated_files/mtouch/mtouch_button.c: 328:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 330:         button->state = MTOUCH_BUTTON_STATE_pressed;
  8638  0778  0020               	movlb	0	; select bank0
  8639  0779  0826               	movf	Button_State_NotPressed@button,w
  8640  077A  3E02               	addlw	2
  8641  077B  00A8               	movwf	??_Button_State_NotPressed
  8642  077C  3000               	movlw	0
  8643  077D  3D27               	addwfc	Button_State_NotPressed@button+1,w
  8644  077E  00A9               	movwf	??_Button_State_NotPressed+1
  8645  077F  0828               	movf	??_Button_State_NotPressed,w
  8646  0780  0086               	movwf	6
  8647  0781  0829               	movf	??_Button_State_NotPressed+1,w
  8648  0782  0087               	movwf	7
  8649  0783  3002               	movlw	2
  8650  0784  0081               	movwf	1
  8651  0785                     l3018:
  8652                           
  8653                           ;mcc_generated_files/mtouch/mtouch_button.c: 331:         button->counter = (mtouch_butt
      +                          on_statecounter_t)0;
  8654  0785  0826               	movf	Button_State_NotPressed@button,w
  8655  0786  0086               	movwf	6
  8656  0787  0827               	movf	Button_State_NotPressed@button+1,w
  8657  0788  0087               	movwf	7
  8658  0789  314A               	addfsr 1,10
  8659  078A  3000               	movlw	0
  8660  078B  3FC0               	movwi [0]fsr1
  8661  078C  3FC1               	movwi [1]fsr1
  8662  078D                     l3020:
  8663                           
  8664                           ;mcc_generated_files/mtouch/mtouch_button.c: 332:         callback_pressed(button->name)
      +                          ;
  8665  078D  0826               	movf	Button_State_NotPressed@button,w
  8666  078E  0086               	movwf	6
  8667  078F  0827               	movf	Button_State_NotPressed@button+1,w
  8668  0790  0087               	movwf	7
  8669  0791  0801               	movf	1,w
  8670  0792  00A8               	movwf	??_Button_State_NotPressed
  8671  0793  0828               	movf	??_Button_State_NotPressed,w
  8672  0794  00F0               	movwf	Button_DefaultCallback@button
  8673  0795  318B  2354  3187   	fcall	_Button_DefaultCallback
  8674                           
  8675                           ;mcc_generated_files/mtouch/mtouch_button.c: 333:     }
  8676  0798  2FA2               	goto	l3024
  8677  0799                     l3022:
  8678                           
  8679                           ;mcc_generated_files/mtouch/mtouch_button.c: 335:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 337:         button->counter = (mtouch_button_statecounter_t)0;
  8680  0799  0020               	movlb	0	; select bank0
  8681  079A  0826               	movf	Button_State_NotPressed@button,w
  8682  079B  0086               	movwf	6
  8683  079C  0827               	movf	Button_State_NotPressed@button+1,w
  8684  079D  0087               	movwf	7
  8685  079E  314A               	addfsr 1,10
  8686  079F  3000               	movlw	0
  8687  07A0  3FC0               	movwi [0]fsr1
  8688  07A1  3FC1               	movwi [1]fsr1
  8689  07A2                     l3024:
  8690                           
  8691                           ;mcc_generated_files/mtouch/mtouch_button.c: 342:     (button->baseline_count)++;
  8692  07A2  0020               	movlb	0	; select bank0
  8693  07A3  0826               	movf	Button_State_NotPressed@button,w
  8694  07A4  0086               	movwf	6
  8695  07A5  0827               	movf	Button_State_NotPressed@button+1,w
  8696  07A6  0087               	movwf	7
  8697  07A7  314C               	addfsr 1,12
  8698  07A8  3001               	movlw	1
  8699  07A9  0781               	addwf	1,f
  8700  07AA  3141               	addfsr 1,1
  8701  07AB  1803               	skipnc
  8702  07AC  0A81               	incf	1,f
  8703  07AD                     l3026:
  8704                           
  8705                           ;mcc_generated_files/mtouch/mtouch_button.c: 343:     if ((button->baseline_count) == ((
      +                          mtouch_button_baselinecounter_t)64u))
  8706  07AD  0826               	movf	Button_State_NotPressed@button,w
  8707  07AE  0086               	movwf	6
  8708  07AF  0827               	movf	Button_State_NotPressed@button+1,w
  8709  07B0  0087               	movwf	7
  8710  07B1  314C               	addfsr 1,12
  8711  07B2  0016               	moviw fsr1++
  8712  07B3  3A40               	xorlw	64
  8713  07B4  00A8               	movwf	??_Button_State_NotPressed
  8714  07B5  0016               	moviw fsr1++
  8715  07B6  04A8               	iorwf	??_Button_State_NotPressed,f
  8716  07B7  1D03               	btfss	3,2
  8717  07B8  2FBA               	goto	u1421
  8718  07B9  2FBB               	goto	u1420
  8719  07BA                     u1421:
  8720  07BA  2FCA               	goto	l475
  8721  07BB                     u1420:
  8722  07BB                     l3028:
  8723                           
  8724                           ;mcc_generated_files/mtouch/mtouch_button.c: 344:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 345:         button->baseline_count = (mtouch_button_baselinecounter_t)0;
  8725  07BB  0826               	movf	Button_State_NotPressed@button,w
  8726  07BC  0086               	movwf	6
  8727  07BD  0827               	movf	Button_State_NotPressed@button+1,w
  8728  07BE  0087               	movwf	7
  8729  07BF  314C               	addfsr 1,12
  8730  07C0  3000               	movlw	0
  8731  07C1  3FC0               	movwi [0]fsr1
  8732  07C2  3FC1               	movwi [1]fsr1
  8733  07C3                     l3030:
  8734                           
  8735                           ;mcc_generated_files/mtouch/mtouch_button.c: 346:         Button_Baseline_Update(button)
      +                          ;
  8736  07C3  0827               	movf	Button_State_NotPressed@button+1,w
  8737  07C4  00F1               	movwf	Button_Baseline_Update@button+1
  8738  07C5  0826               	movf	Button_State_NotPressed@button,w
  8739  07C6  00F0               	movwf	Button_Baseline_Update@button
  8740  07C7  3186  268B  3187   	fcall	_Button_Baseline_Update
  8741  07CA                     l475:
  8742  07CA  0008               	return
  8743  07CB                     __end_of_Button_State_NotPressed:
  8744                           
  8745                           	psect	text63
  8746  04A5                     __ptext63:	
  8747 ;; *************** function _Button_State_Initializing *****************
  8748 ;; Defined at:
  8749 ;;		line 294 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8750 ;; Parameters:    Size  Location     Type
  8751 ;;  button          2    6[BANK0 ] PTR struct .
  8752 ;;		 -> mtouch_button(170), 
  8753 ;; Auto vars:     Size  Location     Type
  8754 ;;		None
  8755 ;; Return value:  Size  Location     Type
  8756 ;;                  1    wreg      void 
  8757 ;; Registers used:
  8758 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8759 ;; Tracked objects:
  8760 ;;		On entry : 0/0
  8761 ;;		On exit  : 0/0
  8762 ;;		Unchanged: 0/0
  8763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8764 ;;      Params:         0       2       0       0       0       0
  8765 ;;      Locals:         0       0       0       0       0       0
  8766 ;;      Temps:          0       4       0       0       0       0
  8767 ;;      Totals:         0       6       0       0       0       0
  8768 ;;Total ram usage:        6 bytes
  8769 ;; Hardware stack levels used:    1
  8770 ;; Hardware stack levels required when called:    3
  8771 ;; This function calls:
  8772 ;;		_Button_Baseline_Initialize
  8773 ;;		_Button_Baseline_Update
  8774 ;; This function is called by:
  8775 ;;		_Button_Service
  8776 ;; This function uses a non-reentrant model
  8777 ;;
  8778                           
  8779                           
  8780                           ;psect for function _Button_State_Initializing
  8781  04A5                     _Button_State_Initializing:
  8782  04A5                     l2990:	
  8783                           ;incstack = 0
  8784                           ; Regs used in _Button_State_Initializing: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  8785                           
  8786                           
  8787                           ;mcc_generated_files/mtouch/mtouch_button.c: 294: static void Button_State_Initializing(
      +                          mtouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 295: {;mcc_generate
      +                          d_files/mtouch/mtouch_button.c: 297:     if ((button->counter) <= (mtouch_button_stateco
      +                          unter_t)((mtouch_button_baselinecounter_t)16u)/2)
  8788  04A5  0020               	movlb	0	; select bank0
  8789  04A6  0826               	movf	Button_State_Initializing@button,w
  8790  04A7  0086               	movwf	6
  8791  04A8  0827               	movf	Button_State_Initializing@button+1,w
  8792  04A9  0087               	movwf	7
  8793  04AA  314A               	addfsr 1,10
  8794  04AB  3F40               	moviw [0]fsr1
  8795  04AC  00A8               	movwf	??_Button_State_Initializing
  8796  04AD  3F41               	moviw [1]fsr1
  8797  04AE  00A9               	movwf	??_Button_State_Initializing+1
  8798  04AF  3000               	movlw	0
  8799  04B0  0229               	subwf	??_Button_State_Initializing+1,w
  8800  04B1  3009               	movlw	9
  8801  04B2  1903               	skipnz
  8802  04B3  0228               	subwf	??_Button_State_Initializing,w
  8803  04B4  1803               	skipnc
  8804  04B5  2CB7               	goto	u1361
  8805  04B6  2CB8               	goto	u1360
  8806  04B7                     u1361:
  8807  04B7  2CC0               	goto	l2994
  8808  04B8                     u1360:
  8809  04B8                     l2992:
  8810                           
  8811                           ;mcc_generated_files/mtouch/mtouch_button.c: 298:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 299:         Button_Baseline_Initialize(button);
  8812  04B8  0827               	movf	Button_State_Initializing@button+1,w
  8813  04B9  00A1               	movwf	Button_Baseline_Initialize@button+1
  8814  04BA  0826               	movf	Button_State_Initializing@button,w
  8815  04BB  00A0               	movwf	Button_Baseline_Initialize@button
  8816  04BC  3181  2181  3184   	fcall	_Button_Baseline_Initialize
  8817                           
  8818                           ;mcc_generated_files/mtouch/mtouch_button.c: 300:     } else {
  8819  04BF  2CC7               	goto	l2996
  8820  04C0                     l2994:
  8821                           
  8822                           ;mcc_generated_files/mtouch/mtouch_button.c: 301:         Button_Baseline_Update(button)
      +                          ;
  8823  04C0  0827               	movf	Button_State_Initializing@button+1,w
  8824  04C1  00F1               	movwf	Button_Baseline_Update@button+1
  8825  04C2  0826               	movf	Button_State_Initializing@button,w
  8826  04C3  00F0               	movwf	Button_Baseline_Update@button
  8827  04C4  3186  268B  3184   	fcall	_Button_Baseline_Update
  8828  04C7                     l2996:
  8829                           
  8830                           ;mcc_generated_files/mtouch/mtouch_button.c: 305:     (button->counter)++;
  8831  04C7  0020               	movlb	0	; select bank0
  8832  04C8  0826               	movf	Button_State_Initializing@button,w
  8833  04C9  0086               	movwf	6
  8834  04CA  0827               	movf	Button_State_Initializing@button+1,w
  8835  04CB  0087               	movwf	7
  8836  04CC  314A               	addfsr 1,10
  8837  04CD  3001               	movlw	1
  8838  04CE  0781               	addwf	1,f
  8839  04CF  3141               	addfsr 1,1
  8840  04D0  1803               	skipnc
  8841  04D1  0A81               	incf	1,f
  8842  04D2                     l2998:
  8843                           
  8844                           ;mcc_generated_files/mtouch/mtouch_button.c: 306:     if ((button->counter) >= (mtouch_b
      +                          utton_statecounter_t)((mtouch_button_baselinecounter_t)16u))
  8845  04D2  0826               	movf	Button_State_Initializing@button,w
  8846  04D3  0086               	movwf	6
  8847  04D4  0827               	movf	Button_State_Initializing@button+1,w
  8848  04D5  0087               	movwf	7
  8849  04D6  314A               	addfsr 1,10
  8850  04D7  3F40               	moviw [0]fsr1
  8851  04D8  00A8               	movwf	??_Button_State_Initializing
  8852  04D9  3F41               	moviw [1]fsr1
  8853  04DA  00A9               	movwf	??_Button_State_Initializing+1
  8854  04DB  3000               	movlw	0
  8855  04DC  0229               	subwf	??_Button_State_Initializing+1,w
  8856  04DD  3010               	movlw	16
  8857  04DE  1903               	skipnz
  8858  04DF  0228               	subwf	??_Button_State_Initializing,w
  8859  04E0  1C03               	skipc
  8860  04E1  2CE3               	goto	u1371
  8861  04E2  2CE4               	goto	u1370
  8862  04E3                     u1371:
  8863  04E3  2D15               	goto	l466
  8864  04E4                     u1370:
  8865  04E4                     l3000:
  8866                           
  8867                           ;mcc_generated_files/mtouch/mtouch_button.c: 307:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 308:         button->reading = (mtouch_button_reading_t)((button->baseline)>
      +                          >((uint8_t)4u));
  8868  04E4  0826               	movf	Button_State_Initializing@button,w
  8869  04E5  0086               	movwf	6
  8870  04E6  0827               	movf	Button_State_Initializing@button+1,w
  8871  04E7  0087               	movwf	7
  8872  04E8  3145               	addfsr 1,5
  8873  04E9  3F40               	moviw [0]fsr1
  8874  04EA  00A8               	movwf	??_Button_State_Initializing
  8875  04EB  3F41               	moviw [1]fsr1
  8876  04EC  00A9               	movwf	??_Button_State_Initializing+1
  8877  04ED  3F42               	moviw [2]fsr1
  8878  04EE  00AA               	movwf	??_Button_State_Initializing+2
  8879  04EF  3F43               	moviw [3]fsr1
  8880  04F0  00AB               	movwf	??_Button_State_Initializing+3
  8881  04F1  3004               	movlw	4
  8882  04F2                     u1385:
  8883  04F2  36AB               	lsrf	??_Button_State_Initializing+3,f
  8884  04F3  0CAA               	rrf	??_Button_State_Initializing+2,f
  8885  04F4  0CA9               	rrf	??_Button_State_Initializing+1,f
  8886  04F5  0CA8               	rrf	??_Button_State_Initializing,f
  8887  04F6                     u1380:
  8888  04F6  0B89               	decfsz	9,f
  8889  04F7  2CF2               	goto	u1385
  8890  04F8  0826               	movf	Button_State_Initializing@button,w
  8891  04F9  0086               	movwf	6
  8892  04FA  0827               	movf	Button_State_Initializing@button+1,w
  8893  04FB  0087               	movwf	7
  8894  04FC  3143               	addfsr 1,3
  8895  04FD  0828               	movf	??_Button_State_Initializing,w
  8896  04FE  3FC0               	movwi [0]fsr1
  8897  04FF  0829               	movf	??_Button_State_Initializing+1,w
  8898  0500  3FC1               	movwi [1]fsr1
  8899                           
  8900                           ;mcc_generated_files/mtouch/mtouch_button.c: 309:         button->state = MTOUCH_BUTTON_
      +                          STATE_notPressed;
  8901  0501  0826               	movf	Button_State_Initializing@button,w
  8902  0502  3E02               	addlw	2
  8903  0503  00A8               	movwf	??_Button_State_Initializing
  8904  0504  3000               	movlw	0
  8905  0505  3D27               	addwfc	Button_State_Initializing@button+1,w
  8906  0506  00A9               	movwf	??_Button_State_Initializing+1
  8907  0507  0828               	movf	??_Button_State_Initializing,w
  8908  0508  0086               	movwf	6
  8909  0509  0829               	movf	??_Button_State_Initializing+1,w
  8910  050A  0087               	movwf	7
  8911  050B  3001               	movlw	1
  8912  050C  0081               	movwf	1
  8913  050D                     l3002:
  8914                           
  8915                           ;mcc_generated_files/mtouch/mtouch_button.c: 310:         button->counter = (mtouch_butt
      +                          on_statecounter_t)0;
  8916  050D  0826               	movf	Button_State_Initializing@button,w
  8917  050E  0086               	movwf	6
  8918  050F  0827               	movf	Button_State_Initializing@button+1,w
  8919  0510  0087               	movwf	7
  8920  0511  314A               	addfsr 1,10
  8921  0512  3000               	movlw	0
  8922  0513  3FC0               	movwi [0]fsr1
  8923  0514  3FC1               	movwi [1]fsr1
  8924  0515                     l466:
  8925  0515  0008               	return
  8926  0516                     __end_of_Button_State_Initializing:
  8927                           
  8928                           	psect	text64
  8929  0587                     __ptext64:	
  8930 ;; *************** function _Button_State_Pressed *****************
  8931 ;; Defined at:
  8932 ;;		line 350 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8933 ;; Parameters:    Size  Location     Type
  8934 ;;  button          2    6[BANK0 ] PTR struct .
  8935 ;;		 -> mtouch_button(170), 
  8936 ;; Auto vars:     Size  Location     Type
  8937 ;;		None
  8938 ;; Return value:  Size  Location     Type
  8939 ;;                  1    wreg      void 
  8940 ;; Registers used:
  8941 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8942 ;; Tracked objects:
  8943 ;;		On entry : 0/0
  8944 ;;		On exit  : 0/0
  8945 ;;		Unchanged: 0/0
  8946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8947 ;;      Params:         0       2       0       0       0       0
  8948 ;;      Locals:         0       0       0       0       0       0
  8949 ;;      Temps:          0       2       0       0       0       0
  8950 ;;      Totals:         0       4       0       0       0       0
  8951 ;;Total ram usage:        4 bytes
  8952 ;; Hardware stack levels used:    1
  8953 ;; Hardware stack levels required when called:    2
  8954 ;; This function calls:
  8955 ;;		_Button_DefaultCallback
  8956 ;;		_MTOUCH_Button_Initialize
  8957 ;; This function is called by:
  8958 ;;		_Button_Service
  8959 ;; This function uses a non-reentrant model
  8960 ;;
  8961                           
  8962                           
  8963                           ;psect for function _Button_State_Pressed
  8964  0587                     _Button_State_Pressed:
  8965  0587                     l3032:	
  8966                           ;incstack = 0
  8967                           ; Regs used in _Button_State_Pressed: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8968                           
  8969                           
  8970                           ;mcc_generated_files/mtouch/mtouch_button.c: 350: static void Button_State_Pressed(mtouc
      +                          h_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 351: {;mcc_generated_fil
      +                          es/mtouch/mtouch_button.c: 353:     if ((button->counter) >= ((mtouch_button_statecounte
      +                          r_t)1000u))
  8971  0587  0020               	movlb	0	; select bank0
  8972  0588  0826               	movf	Button_State_Pressed@button,w
  8973  0589  0086               	movwf	6
  8974  058A  0827               	movf	Button_State_Pressed@button+1,w
  8975  058B  0087               	movwf	7
  8976  058C  314A               	addfsr 1,10
  8977  058D  3F40               	moviw [0]fsr1
  8978  058E  00A8               	movwf	??_Button_State_Pressed
  8979  058F  3F41               	moviw [1]fsr1
  8980  0590  00A9               	movwf	??_Button_State_Pressed+1
  8981  0591  3003               	movlw	3
  8982  0592  0229               	subwf	??_Button_State_Pressed+1,w
  8983  0593  30E8               	movlw	232
  8984  0594  1903               	skipnz
  8985  0595  0228               	subwf	??_Button_State_Pressed,w
  8986  0596  1C03               	skipc
  8987  0597  2D99               	goto	u1431
  8988  0598  2D9A               	goto	u1430
  8989  0599                     u1431:
  8990  0599  2DAF               	goto	l3036
  8991  059A                     u1430:
  8992  059A                     l3034:
  8993                           
  8994                           ;mcc_generated_files/mtouch/mtouch_button.c: 354:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 355:         MTOUCH_Button_Initialize(button->name);
  8995  059A  0826               	movf	Button_State_Pressed@button,w
  8996  059B  0086               	movwf	6
  8997  059C  0827               	movf	Button_State_Pressed@button+1,w
  8998  059D  0087               	movwf	7
  8999  059E  0801               	movf	1,w
  9000  059F  3181  21B0  3185   	fcall	_MTOUCH_Button_Initialize
  9001                           
  9002                           ;mcc_generated_files/mtouch/mtouch_button.c: 356:         callback_notPressed(button->na
      +                          me);
  9003  05A2  0020               	movlb	0	; select bank0
  9004  05A3  0826               	movf	Button_State_Pressed@button,w
  9005  05A4  0086               	movwf	6
  9006  05A5  0827               	movf	Button_State_Pressed@button+1,w
  9007  05A6  0087               	movwf	7
  9008  05A7  0801               	movf	1,w
  9009  05A8  00A8               	movwf	??_Button_State_Pressed
  9010  05A9  0828               	movf	??_Button_State_Pressed,w
  9011  05AA  00F0               	movwf	Button_DefaultCallback@button
  9012  05AB  318B  2354  3185   	fcall	_Button_DefaultCallback
  9013                           
  9014                           ;mcc_generated_files/mtouch/mtouch_button.c: 357:     }
  9015  05AE  2DFD               	goto	l481
  9016  05AF                     l3036:
  9017  05AF  0826               	movf	Button_State_Pressed@button,w
  9018  05B0  0086               	movwf	6
  9019  05B1  0827               	movf	Button_State_Pressed@button+1,w
  9020  05B2  0087               	movwf	7
  9021  05B3  3149               	addfsr 1,9
  9022  05B4  0801               	movf	1,w
  9023  05B5  3A80               	xorlw	128
  9024  05B6  00A8               	movwf	??_Button_State_Pressed
  9025  05B7  0826               	movf	Button_State_Pressed@button,w
  9026  05B8  0086               	movwf	6
  9027  05B9  0827               	movf	Button_State_Pressed@button+1,w
  9028  05BA  0087               	movwf	7
  9029  05BB  314E               	addfsr 1,14
  9030  05BC  0826               	movf	Button_State_Pressed@button,w
  9031  05BD  0084               	movwf	4
  9032  05BE  0827               	movf	Button_State_Pressed@button+1,w
  9033  05BF  0085               	movwf	5
  9034  05C0  310E               	addfsr 0,14
  9035  05C1  0800               	movf	0,w
  9036  05C2  00A9               	movwf	??_Button_State_Pressed+1
  9037  05C3  0826               	movf	Button_State_Pressed@button,w
  9038  05C4  0084               	movwf	4
  9039  05C5  0827               	movf	Button_State_Pressed@button+1,w
  9040  05C6  0085               	movwf	5
  9041  05C7  3110               	addfsr 0,16
  9042  05C8  0A00               	incf	0,w
  9043  05C9  2DCB               	goto	u1444
  9044  05CA                     u1445:
  9045  05CA  36A9               	lsrf	??_Button_State_Pressed+1,f
  9046  05CB                     u1444:
  9047  05CB  0B89               	decfsz	9,f
  9048  05CC  2DCA               	goto	u1445
  9049  05CD  0829               	movf	??_Button_State_Pressed+1,w
  9050  05CE  0201               	subwf	1,w
  9051  05CF  3A80               	xorlw	128
  9052  05D0  02A8               	subwf	??_Button_State_Pressed,f
  9053  05D1  1803               	skipnc
  9054  05D2  2DD4               	goto	u1451
  9055  05D3  2DD5               	goto	u1450
  9056  05D4                     u1451:
  9057  05D4  2DFD               	goto	l481
  9058  05D5                     u1450:
  9059  05D5                     l3038:
  9060                           
  9061                           ;mcc_generated_files/mtouch/mtouch_button.c: 361:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 362:         button->state = MTOUCH_BUTTON_STATE_notPressed;
  9062  05D5  0826               	movf	Button_State_Pressed@button,w
  9063  05D6  3E02               	addlw	2
  9064  05D7  00A8               	movwf	??_Button_State_Pressed
  9065  05D8  3000               	movlw	0
  9066  05D9  3D27               	addwfc	Button_State_Pressed@button+1,w
  9067  05DA  00A9               	movwf	??_Button_State_Pressed+1
  9068  05DB  0828               	movf	??_Button_State_Pressed,w
  9069  05DC  0086               	movwf	6
  9070  05DD  0829               	movf	??_Button_State_Pressed+1,w
  9071  05DE  0087               	movwf	7
  9072  05DF  3001               	movlw	1
  9073  05E0  0081               	movwf	1
  9074  05E1                     l3040:
  9075                           
  9076                           ;mcc_generated_files/mtouch/mtouch_button.c: 363:         button->counter = (mtouch_butt
      +                          on_statecounter_t)0;
  9077  05E1  0826               	movf	Button_State_Pressed@button,w
  9078  05E2  0086               	movwf	6
  9079  05E3  0827               	movf	Button_State_Pressed@button+1,w
  9080  05E4  0087               	movwf	7
  9081  05E5  314A               	addfsr 1,10
  9082  05E6  3000               	movlw	0
  9083  05E7  3FC0               	movwi [0]fsr1
  9084  05E8  3FC1               	movwi [1]fsr1
  9085  05E9                     l3042:
  9086                           
  9087                           ;mcc_generated_files/mtouch/mtouch_button.c: 364:         button->baseline_count = (mtou
      +                          ch_button_baselinecounter_t)((0xffff))-((mtouch_button_baselinecounter_t)1024u);
  9088  05E9  0826               	movf	Button_State_Pressed@button,w
  9089  05EA  0086               	movwf	6
  9090  05EB  0827               	movf	Button_State_Pressed@button+1,w
  9091  05EC  0087               	movwf	7
  9092  05ED  314C               	addfsr 1,12
  9093  05EE  30FF               	movlw	255
  9094  05EF  3FC0               	movwi [0]fsr1
  9095  05F0  30FB               	movlw	251
  9096  05F1  3FC1               	movwi [1]fsr1
  9097  05F2                     l3044:
  9098                           
  9099                           ;mcc_generated_files/mtouch/mtouch_button.c: 365:         callback_notPressed(button->na
      +                          me);
  9100  05F2  0826               	movf	Button_State_Pressed@button,w
  9101  05F3  0086               	movwf	6
  9102  05F4  0827               	movf	Button_State_Pressed@button+1,w
  9103  05F5  0087               	movwf	7
  9104  05F6  0801               	movf	1,w
  9105  05F7  00A8               	movwf	??_Button_State_Pressed
  9106  05F8  0828               	movf	??_Button_State_Pressed,w
  9107  05F9  00F0               	movwf	Button_DefaultCallback@button
  9108  05FA  318B  2354  3185   	fcall	_Button_DefaultCallback
  9109  05FD                     l481:
  9110  05FD  0008               	return
  9111  05FE                     __end_of_Button_State_Pressed:
  9112                           
  9113                           	psect	text65
  9114  01B0                     __ptext65:	
  9115 ;; *************** function _MTOUCH_Button_Initialize *****************
  9116 ;; Defined at:
  9117 ;;		line 236 in file "mcc_generated_files/mtouch/mtouch_button.c"
  9118 ;; Parameters:    Size  Location     Type
  9119 ;;  name            1    wreg     enum E2698
  9120 ;; Auto vars:     Size  Location     Type
  9121 ;;  name            1   10[COMMON] enum E2698
  9122 ;;  button          2   11[COMMON] PTR struct .
  9123 ;;		 -> mtouch_button(170), 
  9124 ;; Return value:  Size  Location     Type
  9125 ;;                  1    wreg      void 
  9126 ;; Registers used:
  9127 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9128 ;; Tracked objects:
  9129 ;;		On entry : 0/0
  9130 ;;		On exit  : 0/0
  9131 ;;		Unchanged: 0/0
  9132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9133 ;;      Params:         0       0       0       0       0       0
  9134 ;;      Locals:         3       0       0       0       0       0
  9135 ;;      Temps:          4       0       0       0       0       0
  9136 ;;      Totals:         7       0       0       0       0       0
  9137 ;;Total ram usage:        7 bytes
  9138 ;; Hardware stack levels used:    1
  9139 ;; Hardware stack levels required when called:    1
  9140 ;; This function calls:
  9141 ;;		_MTOUCH_Sensor_Calibrate
  9142 ;;		___wmul
  9143 ;; This function is called by:
  9144 ;;		_MTOUCH_Button_InitializeAll
  9145 ;;		_Button_Service
  9146 ;;		_Button_State_NotPressed
  9147 ;;		_Button_State_Pressed
  9148 ;; This function uses a non-reentrant model
  9149 ;;
  9150                           
  9151                           
  9152                           ;psect for function _MTOUCH_Button_Initialize
  9153  01B0                     _MTOUCH_Button_Initialize:
  9154                           
  9155                           ;incstack = 0
  9156                           ; Regs used in _MTOUCH_Button_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  9157                           ;MTOUCH_Button_Initialize@name stored from wreg
  9158  01B0  00FA               	movwf	MTOUCH_Button_Initialize@name
  9159  01B1                     l2860:
  9160                           
  9161                           ;mcc_generated_files/mtouch/mtouch_button.c: 236: void MTOUCH_Button_Initialize(enum mto
      +                          uch_button_names name);mcc_generated_files/mtouch/mtouch_button.c: 237: {;mcc_generated_
      +                          files/mtouch/mtouch_button.c: 238:     mtouch_button_t* button = &mtouch_button[name];
  9162  01B1  087A               	movf	MTOUCH_Button_Initialize@name,w
  9163  01B2  00F6               	movwf	??_MTOUCH_Button_Initialize
  9164  01B3  01F7               	clrf	??_MTOUCH_Button_Initialize+1
  9165  01B4  0876               	movf	??_MTOUCH_Button_Initialize,w
  9166  01B5  00F0               	movwf	___wmul@multiplier
  9167  01B6  0877               	movf	??_MTOUCH_Button_Initialize+1,w
  9168  01B7  00F1               	movwf	___wmul@multiplier+1
  9169  01B8  3011               	movlw	17
  9170  01B9  00F2               	movwf	___wmul@multiplicand
  9171  01BA  3000               	movlw	0
  9172  01BB  00F3               	movwf	___wmul@multiplicand+1
  9173  01BC  318C  24DA  3181   	fcall	___wmul
  9174  01BF  30C6               	movlw	198
  9175  01C0  00F8               	movwf	??_MTOUCH_Button_Initialize+2
  9176  01C1  3020               	movlw	32
  9177  01C2  00F9               	movwf	??_MTOUCH_Button_Initialize+3
  9178  01C3  0870               	movf	?___wmul,w
  9179  01C4  0778               	addwf	??_MTOUCH_Button_Initialize+2,w
  9180  01C5  00FB               	movwf	MTOUCH_Button_Initialize@button
  9181  01C6  0871               	movf	?___wmul+1,w
  9182  01C7  3D79               	addwfc	??_MTOUCH_Button_Initialize+3,w
  9183  01C8  00FC               	movwf	MTOUCH_Button_Initialize@button+1
  9184  01C9                     l2862:
  9185                           
  9186                           ;mcc_generated_files/mtouch/mtouch_button.c: 240:     button->state = MTOUCH_BUTTON_STAT
      +                          E_initializing;
  9187  01C9  087B               	movf	MTOUCH_Button_Initialize@button,w
  9188  01CA  0086               	movwf	6
  9189  01CB  087C               	movf	MTOUCH_Button_Initialize@button+1,w
  9190  01CC  0087               	movwf	7
  9191  01CD  3142               	addfsr 1,2
  9192  01CE  0181               	clrf	1
  9193  01CF                     l2864:
  9194                           
  9195                           ;mcc_generated_files/mtouch/mtouch_button.c: 241:     button->baseline = (mtouch_button_
      +                          baseline_t)0;
  9196  01CF  087B               	movf	MTOUCH_Button_Initialize@button,w
  9197  01D0  3E05               	addlw	5
  9198  01D1  00F6               	movwf	??_MTOUCH_Button_Initialize
  9199  01D2  3000               	movlw	0
  9200  01D3  3D7C               	addwfc	MTOUCH_Button_Initialize@button+1,w
  9201  01D4  00F7               	movwf	??_MTOUCH_Button_Initialize+1
  9202  01D5  0876               	movf	??_MTOUCH_Button_Initialize,w
  9203  01D6  0086               	movwf	6
  9204  01D7  0877               	movf	??_MTOUCH_Button_Initialize+1,w
  9205  01D8  0087               	movwf	7
  9206  01D9  3000               	movlw	0
  9207  01DA  3FC0               	movwi [0]fsr1
  9208  01DB  3FC1               	movwi [1]fsr1
  9209  01DC  3FC2               	movwi [2]fsr1
  9210  01DD  3FC3               	movwi [3]fsr1
  9211  01DE                     l2866:
  9212                           
  9213                           ;mcc_generated_files/mtouch/mtouch_button.c: 242:     button->counter = (mtouch_button_s
      +                          tatecounter_t)0;
  9214  01DE  087B               	movf	MTOUCH_Button_Initialize@button,w
  9215  01DF  0086               	movwf	6
  9216  01E0  087C               	movf	MTOUCH_Button_Initialize@button+1,w
  9217  01E1  0087               	movwf	7
  9218  01E2  314A               	addfsr 1,10
  9219  01E3  3000               	movlw	0
  9220  01E4  3FC0               	movwi [0]fsr1
  9221  01E5  3FC1               	movwi [1]fsr1
  9222  01E6                     l2868:
  9223                           
  9224                           ;mcc_generated_files/mtouch/mtouch_button.c: 243:     button->baseline_count = (mtouch_b
      +                          utton_baselinecounter_t)0;
  9225  01E6  087B               	movf	MTOUCH_Button_Initialize@button,w
  9226  01E7  0086               	movwf	6
  9227  01E8  087C               	movf	MTOUCH_Button_Initialize@button+1,w
  9228  01E9  0087               	movwf	7
  9229  01EA  314C               	addfsr 1,12
  9230  01EB  3000               	movlw	0
  9231  01EC  3FC0               	movwi [0]fsr1
  9232  01ED  3FC1               	movwi [1]fsr1
  9233  01EE                     l2870:
  9234                           
  9235                           ;mcc_generated_files/mtouch/mtouch_button.c: 245:     MTOUCH_Sensor_Calibrate(button->se
      +                          nsor);
  9236  01EE  087B               	movf	MTOUCH_Button_Initialize@button,w
  9237  01EF  0086               	movwf	6
  9238  01F0  087C               	movf	MTOUCH_Button_Initialize@button+1,w
  9239  01F1  0087               	movwf	7
  9240  01F2  3141               	addfsr 1,1
  9241  01F3  0801               	movf	1,w
  9242  01F4  318B  2355  3181   	fcall	_MTOUCH_Sensor_Calibrate
  9243  01F7                     l445:
  9244  01F7  0008               	return
  9245  01F8                     __end_of_MTOUCH_Button_Initialize:
  9246                           
  9247                           	psect	text66
  9248  0B55                     __ptext66:	
  9249 ;; *************** function _MTOUCH_Sensor_Calibrate *****************
  9250 ;; Defined at:
  9251 ;;		line 543 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  9252 ;; Parameters:    Size  Location     Type
  9253 ;;  sensor          1    wreg     enum E2470
  9254 ;; Auto vars:     Size  Location     Type
  9255 ;;  sensor          1    0[COMMON] enum E2470
  9256 ;; Return value:  Size  Location     Type
  9257 ;;                  1    wreg      void 
  9258 ;; Registers used:
  9259 ;;		wreg
  9260 ;; Tracked objects:
  9261 ;;		On entry : 0/0
  9262 ;;		On exit  : 0/0
  9263 ;;		Unchanged: 0/0
  9264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9265 ;;      Params:         0       0       0       0       0       0
  9266 ;;      Locals:         0       0       0       0       0       0
  9267 ;;      Temps:          0       0       0       0       0       0
  9268 ;;      Totals:         0       0       0       0       0       0
  9269 ;;Total ram usage:        0 bytes
  9270 ;; Hardware stack levels used:    1
  9271 ;; This function calls:
  9272 ;;		Nothing
  9273 ;; This function is called by:
  9274 ;;		_MTOUCH_Button_Initialize
  9275 ;; This function uses a non-reentrant model
  9276 ;;
  9277                           
  9278                           
  9279                           ;psect for function _MTOUCH_Sensor_Calibrate
  9280  0B55                     _MTOUCH_Sensor_Calibrate:
  9281  0B55                     l367:	
  9282                           ;incstack = 0
  9283                           ; Regs used in _MTOUCH_Sensor_Calibrate: [wreg]
  9284                           
  9285  0B55  0008               	return
  9286  0B56                     __end_of_MTOUCH_Sensor_Calibrate:
  9287                           
  9288                           	psect	text67
  9289  0B54                     __ptext67:	
  9290 ;; *************** function _Button_DefaultCallback *****************
  9291 ;; Defined at:
  9292 ;;		line 604 in file "mcc_generated_files/mtouch/mtouch_button.c"
  9293 ;; Parameters:    Size  Location     Type
  9294 ;;  button          1    0[COMMON] enum E2698
  9295 ;; Auto vars:     Size  Location     Type
  9296 ;;		None
  9297 ;; Return value:  Size  Location     Type
  9298 ;;                  1    wreg      void 
  9299 ;; Registers used:
  9300 ;;		None
  9301 ;; Tracked objects:
  9302 ;;		On entry : 0/0
  9303 ;;		On exit  : 0/0
  9304 ;;		Unchanged: 0/0
  9305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9306 ;;      Params:         1       0       0       0       0       0
  9307 ;;      Locals:         0       0       0       0       0       0
  9308 ;;      Temps:          0       0       0       0       0       0
  9309 ;;      Totals:         1       0       0       0       0       0
  9310 ;;Total ram usage:        1 bytes
  9311 ;; Hardware stack levels used:    1
  9312 ;; This function calls:
  9313 ;;		Nothing
  9314 ;; This function is called by:
  9315 ;;		_Button_State_NotPressed
  9316 ;;		_Button_State_Pressed
  9317 ;; This function uses a non-reentrant model
  9318 ;;
  9319                           
  9320                           
  9321                           ;psect for function _Button_DefaultCallback
  9322  0B54                     _Button_DefaultCallback:
  9323  0B54                     l585:	
  9324                           ;incstack = 0
  9325                           ; Regs used in _Button_DefaultCallback: []
  9326                           
  9327  0B54  0008               	return
  9328  0B55                     __end_of_Button_DefaultCallback:
  9329                           
  9330                           	psect	text68
  9331  068B                     __ptext68:	
  9332 ;; *************** function _Button_Baseline_Update *****************
  9333 ;; Defined at:
  9334 ;;		line 558 in file "mcc_generated_files/mtouch/mtouch_button.c"
  9335 ;; Parameters:    Size  Location     Type
  9336 ;;  button          2    0[COMMON] PTR struct .
  9337 ;;		 -> mtouch_button(170), 
  9338 ;; Auto vars:     Size  Location     Type
  9339 ;;		None
  9340 ;; Return value:  Size  Location     Type
  9341 ;;                  1    wreg      void 
  9342 ;; Registers used:
  9343 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9344 ;; Tracked objects:
  9345 ;;		On entry : 0/0
  9346 ;;		On exit  : 0/0
  9347 ;;		Unchanged: 0/0
  9348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9349 ;;      Params:         2       0       0       0       0       0
  9350 ;;      Locals:         0       0       0       0       0       0
  9351 ;;      Temps:          6       0       0       0       0       0
  9352 ;;      Totals:         8       0       0       0       0       0
  9353 ;;Total ram usage:        8 bytes
  9354 ;; Hardware stack levels used:    1
  9355 ;; This function calls:
  9356 ;;		Nothing
  9357 ;; This function is called by:
  9358 ;;		_Button_State_Initializing
  9359 ;;		_Button_State_NotPressed
  9360 ;; This function uses a non-reentrant model
  9361 ;;
  9362                           
  9363                           
  9364                           ;psect for function _Button_Baseline_Update
  9365  068B                     _Button_Baseline_Update:
  9366  068B                     l2876:	
  9367                           ;incstack = 0
  9368                           ; Regs used in _Button_Baseline_Update: [wreg+fsr1l+fsr1h+status,2+status,0]
  9369                           
  9370                           
  9371                           ;mcc_generated_files/mtouch/mtouch_button.c: 558: static void Button_Baseline_Update(mto
      +                          uch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 559: {;mcc_generated_f
      +                          iles/mtouch/mtouch_button.c: 560:     if (GIE == (uint8_t)1)
  9372  068B  1F8B               	btfss	11,7	;volatile
  9373  068C  2E8E               	goto	u1201
  9374  068D  2E8F               	goto	u1200
  9375  068E                     u1201:
  9376  068E  2ED6               	goto	l2886
  9377  068F                     u1200:
  9378  068F                     l2878:
  9379                           
  9380                           ;mcc_generated_files/mtouch/mtouch_button.c: 561:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 562:         GIE = (uint8_t)0;
  9381  068F  138B               	bcf	11,7	;volatile
  9382  0690                     l2880:
  9383                           
  9384                           ;mcc_generated_files/mtouch/mtouch_button.c: 563:         button->baseline -= (button->b
      +                          aseline) >> ((uint8_t)4u);
  9385  0690  0870               	movf	Button_Baseline_Update@button,w
  9386  0691  0086               	movwf	6
  9387  0692  0871               	movf	Button_Baseline_Update@button+1,w
  9388  0693  0087               	movwf	7
  9389  0694  3145               	addfsr 1,5
  9390  0695  3F40               	moviw [0]fsr1
  9391  0696  00F2               	movwf	??_Button_Baseline_Update
  9392  0697  3F41               	moviw [1]fsr1
  9393  0698  00F3               	movwf	??_Button_Baseline_Update+1
  9394  0699  3F42               	moviw [2]fsr1
  9395  069A  00F4               	movwf	??_Button_Baseline_Update+2
  9396  069B  3F43               	moviw [3]fsr1
  9397  069C  00F5               	movwf	??_Button_Baseline_Update+3
  9398  069D  3004               	movlw	4
  9399  069E                     u1215:
  9400  069E  36F5               	lsrf	??_Button_Baseline_Update+3,f
  9401  069F  0CF4               	rrf	??_Button_Baseline_Update+2,f
  9402  06A0  0CF3               	rrf	??_Button_Baseline_Update+1,f
  9403  06A1  0CF2               	rrf	??_Button_Baseline_Update,f
  9404  06A2                     u1210:
  9405  06A2  0B89               	decfsz	9,f
  9406  06A3  2E9E               	goto	u1215
  9407  06A4  0870               	movf	Button_Baseline_Update@button,w
  9408  06A5  0086               	movwf	6
  9409  06A6  0871               	movf	Button_Baseline_Update@button+1,w
  9410  06A7  0087               	movwf	7
  9411  06A8  3145               	addfsr 1,5
  9412  06A9  0872               	movf	??_Button_Baseline_Update,w
  9413  06AA  0281               	subwf	1,f
  9414  06AB  3141               	addfsr 1,1
  9415  06AC  0873               	movf	??_Button_Baseline_Update+1,w
  9416  06AD  3B81               	subwfb	1,f
  9417  06AE  3141               	addfsr 1,1
  9418  06AF  0874               	movf	??_Button_Baseline_Update+2,w
  9419  06B0  3B81               	subwfb	1,f
  9420  06B1  3141               	addfsr 1,1
  9421  06B2  0875               	movf	??_Button_Baseline_Update+3,w
  9422  06B3  3B81               	subwfb	1,f
  9423  06B4  317D               	addfsr 1,-3
  9424  06B5                     l2882:
  9425                           
  9426                           ;mcc_generated_files/mtouch/mtouch_button.c: 564:         button->baseline += button->re
      +                          ading;
  9427  06B5  0870               	movf	Button_Baseline_Update@button,w
  9428  06B6  0086               	movwf	6
  9429  06B7  0871               	movf	Button_Baseline_Update@button+1,w
  9430  06B8  0087               	movwf	7
  9431  06B9  3143               	addfsr 1,3
  9432  06BA  3F40               	moviw [0]fsr1
  9433  06BB  00F2               	movwf	??_Button_Baseline_Update
  9434  06BC  3F41               	moviw [1]fsr1
  9435  06BD  00F3               	movwf	??_Button_Baseline_Update+1
  9436  06BE  0872               	movf	??_Button_Baseline_Update,w
  9437  06BF  00F4               	movwf	??_Button_Baseline_Update+2
  9438  06C0  0873               	movf	??_Button_Baseline_Update+1,w
  9439  06C1  00F5               	movwf	??_Button_Baseline_Update+3
  9440  06C2  01F6               	clrf	??_Button_Baseline_Update+4
  9441  06C3  01F7               	clrf	??_Button_Baseline_Update+5
  9442  06C4  0870               	movf	Button_Baseline_Update@button,w
  9443  06C5  0086               	movwf	6
  9444  06C6  0871               	movf	Button_Baseline_Update@button+1,w
  9445  06C7  0087               	movwf	7
  9446  06C8  3145               	addfsr 1,5
  9447  06C9  0874               	movf	??_Button_Baseline_Update+2,w
  9448  06CA  0781               	addwf	1,f
  9449  06CB  3141               	addfsr 1,1
  9450  06CC  0875               	movf	??_Button_Baseline_Update+3,w
  9451  06CD  3D81               	addwfc	1,f
  9452  06CE  3141               	addfsr 1,1
  9453  06CF  0876               	movf	??_Button_Baseline_Update+4,w
  9454  06D0  3D81               	addwfc	1,f
  9455  06D1  3141               	addfsr 1,1
  9456  06D2  0877               	movf	??_Button_Baseline_Update+5,w
  9457  06D3  3D81               	addwfc	1,f
  9458  06D4                     l2884:
  9459                           
  9460                           ;mcc_generated_files/mtouch/mtouch_button.c: 565:         GIE = (uint8_t)1;
  9461  06D4  178B               	bsf	11,7	;volatile
  9462                           
  9463                           ;mcc_generated_files/mtouch/mtouch_button.c: 566:     }
  9464  06D5  2F1A               	goto	l569
  9465  06D6                     l2886:
  9466                           
  9467                           ;mcc_generated_files/mtouch/mtouch_button.c: 568:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 569:         button->baseline -= (button->baseline) >> ((uint8_t)4u);
  9468  06D6  0870               	movf	Button_Baseline_Update@button,w
  9469  06D7  0086               	movwf	6
  9470  06D8  0871               	movf	Button_Baseline_Update@button+1,w
  9471  06D9  0087               	movwf	7
  9472  06DA  3145               	addfsr 1,5
  9473  06DB  3F40               	moviw [0]fsr1
  9474  06DC  00F2               	movwf	??_Button_Baseline_Update
  9475  06DD  3F41               	moviw [1]fsr1
  9476  06DE  00F3               	movwf	??_Button_Baseline_Update+1
  9477  06DF  3F42               	moviw [2]fsr1
  9478  06E0  00F4               	movwf	??_Button_Baseline_Update+2
  9479  06E1  3F43               	moviw [3]fsr1
  9480  06E2  00F5               	movwf	??_Button_Baseline_Update+3
  9481  06E3  3004               	movlw	4
  9482  06E4                     u1225:
  9483  06E4  36F5               	lsrf	??_Button_Baseline_Update+3,f
  9484  06E5  0CF4               	rrf	??_Button_Baseline_Update+2,f
  9485  06E6  0CF3               	rrf	??_Button_Baseline_Update+1,f
  9486  06E7  0CF2               	rrf	??_Button_Baseline_Update,f
  9487  06E8                     u1220:
  9488  06E8  0B89               	decfsz	9,f
  9489  06E9  2EE4               	goto	u1225
  9490  06EA  0870               	movf	Button_Baseline_Update@button,w
  9491  06EB  0086               	movwf	6
  9492  06EC  0871               	movf	Button_Baseline_Update@button+1,w
  9493  06ED  0087               	movwf	7
  9494  06EE  3145               	addfsr 1,5
  9495  06EF  0872               	movf	??_Button_Baseline_Update,w
  9496  06F0  0281               	subwf	1,f
  9497  06F1  3141               	addfsr 1,1
  9498  06F2  0873               	movf	??_Button_Baseline_Update+1,w
  9499  06F3  3B81               	subwfb	1,f
  9500  06F4  3141               	addfsr 1,1
  9501  06F5  0874               	movf	??_Button_Baseline_Update+2,w
  9502  06F6  3B81               	subwfb	1,f
  9503  06F7  3141               	addfsr 1,1
  9504  06F8  0875               	movf	??_Button_Baseline_Update+3,w
  9505  06F9  3B81               	subwfb	1,f
  9506  06FA  317D               	addfsr 1,-3
  9507  06FB                     l2888:
  9508                           
  9509                           ;mcc_generated_files/mtouch/mtouch_button.c: 570:         button->baseline += button->re
      +                          ading;
  9510  06FB  0870               	movf	Button_Baseline_Update@button,w
  9511  06FC  0086               	movwf	6
  9512  06FD  0871               	movf	Button_Baseline_Update@button+1,w
  9513  06FE  0087               	movwf	7
  9514  06FF  3143               	addfsr 1,3
  9515  0700  3F40               	moviw [0]fsr1
  9516  0701  00F2               	movwf	??_Button_Baseline_Update
  9517  0702  3F41               	moviw [1]fsr1
  9518  0703  00F3               	movwf	??_Button_Baseline_Update+1
  9519  0704  0872               	movf	??_Button_Baseline_Update,w
  9520  0705  00F4               	movwf	??_Button_Baseline_Update+2
  9521  0706  0873               	movf	??_Button_Baseline_Update+1,w
  9522  0707  00F5               	movwf	??_Button_Baseline_Update+3
  9523  0708  01F6               	clrf	??_Button_Baseline_Update+4
  9524  0709  01F7               	clrf	??_Button_Baseline_Update+5
  9525  070A  0870               	movf	Button_Baseline_Update@button,w
  9526  070B  0086               	movwf	6
  9527  070C  0871               	movf	Button_Baseline_Update@button+1,w
  9528  070D  0087               	movwf	7
  9529  070E  3145               	addfsr 1,5
  9530  070F  0874               	movf	??_Button_Baseline_Update+2,w
  9531  0710  0781               	addwf	1,f
  9532  0711  3141               	addfsr 1,1
  9533  0712  0875               	movf	??_Button_Baseline_Update+3,w
  9534  0713  3D81               	addwfc	1,f
  9535  0714  3141               	addfsr 1,1
  9536  0715  0876               	movf	??_Button_Baseline_Update+4,w
  9537  0716  3D81               	addwfc	1,f
  9538  0717  3141               	addfsr 1,1
  9539  0718  0877               	movf	??_Button_Baseline_Update+5,w
  9540  0719  3D81               	addwfc	1,f
  9541  071A                     l569:
  9542  071A  0008               	return
  9543  071B                     __end_of_Button_Baseline_Update:
  9544                           
  9545                           	psect	text69
  9546  0181                     __ptext69:	
  9547 ;; *************** function _Button_Baseline_Initialize *****************
  9548 ;; Defined at:
  9549 ;;		line 552 in file "mcc_generated_files/mtouch/mtouch_button.c"
  9550 ;; Parameters:    Size  Location     Type
  9551 ;;  button          2    0[BANK0 ] PTR struct .
  9552 ;;		 -> mtouch_button(170), 
  9553 ;; Auto vars:     Size  Location     Type
  9554 ;;		None
  9555 ;; Return value:  Size  Location     Type
  9556 ;;                  1    wreg      void 
  9557 ;; Registers used:
  9558 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9559 ;; Tracked objects:
  9560 ;;		On entry : 0/0
  9561 ;;		On exit  : 0/0
  9562 ;;		Unchanged: 0/0
  9563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9564 ;;      Params:         0       2       0       0       0       0
  9565 ;;      Locals:         0       0       0       0       0       0
  9566 ;;      Temps:          0       4       0       0       0       0
  9567 ;;      Totals:         0       6       0       0       0       0
  9568 ;;Total ram usage:        6 bytes
  9569 ;; Hardware stack levels used:    1
  9570 ;; Hardware stack levels required when called:    2
  9571 ;; This function calls:
  9572 ;;		_MTOUCH_Sensor_RawSample_Get
  9573 ;; This function is called by:
  9574 ;;		_Button_State_Initializing
  9575 ;; This function uses a non-reentrant model
  9576 ;;
  9577                           
  9578                           
  9579                           ;psect for function _Button_Baseline_Initialize
  9580  0181                     _Button_Baseline_Initialize:
  9581  0181                     l2872:	
  9582                           ;incstack = 0
  9583                           ; Regs used in _Button_Baseline_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  9584                           
  9585                           
  9586                           ;mcc_generated_files/mtouch/mtouch_button.c: 552: static void Button_Baseline_Initialize
      +                          (mtouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 553: {;mcc_generat
      +                          ed_files/mtouch/mtouch_button.c: 554:     button->baseline = MTOUCH_Sensor_RawSample_Get
      +                          (button->sensor);
  9587  0181  0020               	movlb	0	; select bank0
  9588  0182  0820               	movf	Button_Baseline_Initialize@button,w
  9589  0183  0086               	movwf	6
  9590  0184  0821               	movf	Button_Baseline_Initialize@button+1,w
  9591  0185  0087               	movwf	7
  9592  0186  3141               	addfsr 1,1
  9593  0187  0801               	movf	1,w
  9594  0188  3180  205B  3181   	fcall	_MTOUCH_Sensor_RawSample_Get
  9595  018B  0876               	movf	?_MTOUCH_Sensor_RawSample_Get,w
  9596  018C  0020               	movlb	0	; select bank0
  9597  018D  00A2               	movwf	??_Button_Baseline_Initialize
  9598  018E  0877               	movf	?_MTOUCH_Sensor_RawSample_Get+1,w
  9599  018F  00A3               	movwf	??_Button_Baseline_Initialize+1
  9600  0190  01A4               	clrf	??_Button_Baseline_Initialize+2
  9601  0191  01A5               	clrf	??_Button_Baseline_Initialize+3
  9602  0192  0820               	movf	Button_Baseline_Initialize@button,w
  9603  0193  0086               	movwf	6
  9604  0194  0821               	movf	Button_Baseline_Initialize@button+1,w
  9605  0195  0087               	movwf	7
  9606  0196  3145               	addfsr 1,5
  9607  0197  0822               	movf	??_Button_Baseline_Initialize,w
  9608  0198  3FC0               	movwi [0]fsr1
  9609  0199  0823               	movf	??_Button_Baseline_Initialize+1,w
  9610  019A  3FC1               	movwi [1]fsr1
  9611  019B  0824               	movf	??_Button_Baseline_Initialize+2,w
  9612  019C  3FC2               	movwi [2]fsr1
  9613  019D  0825               	movf	??_Button_Baseline_Initialize+3,w
  9614  019E  3FC3               	movwi [3]fsr1
  9615  019F                     l2874:
  9616                           
  9617                           ;mcc_generated_files/mtouch/mtouch_button.c: 555:     button->baseline <<= ((uint8_t)4u)
      +                          ;
  9618  019F  0820               	movf	Button_Baseline_Initialize@button,w
  9619  01A0  0086               	movwf	6
  9620  01A1  0821               	movf	Button_Baseline_Initialize@button+1,w
  9621  01A2  0087               	movwf	7
  9622  01A3  3145               	addfsr 1,5
  9623  01A4  3004               	movlw	4
  9624  01A5                     u1195:
  9625  01A5  3581               	lslf	1,f
  9626  01A6  3141               	addfsr 1,1
  9627  01A7  0D81               	rlf	1,f
  9628  01A8  3141               	addfsr 1,1
  9629  01A9  0D81               	rlf	1,f
  9630  01AA  3141               	addfsr 1,1
  9631  01AB  0D81               	rlf	1,f
  9632  01AC  317D               	addfsr 1,-3
  9633  01AD  0B89               	decfsz	9,f
  9634  01AE  29A5               	goto	u1195
  9635  01AF                     l564:
  9636  01AF  0008               	return
  9637  01B0                     __end_of_Button_Baseline_Initialize:
  9638                           
  9639                           	psect	text70
  9640  0C72                     __ptext70:	
  9641 ;; *************** function _Button_Reading_Update *****************
  9642 ;; Defined at:
  9643 ;;		line 525 in file "mcc_generated_files/mtouch/mtouch_button.c"
  9644 ;; Parameters:    Size  Location     Type
  9645 ;;  button          2    4[BANK0 ] PTR struct .
  9646 ;;		 -> mtouch_button(170), 
  9647 ;; Auto vars:     Size  Location     Type
  9648 ;;		None
  9649 ;; Return value:  Size  Location     Type
  9650 ;;                  1    wreg      void 
  9651 ;; Registers used:
  9652 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9653 ;; Tracked objects:
  9654 ;;		On entry : 0/0
  9655 ;;		On exit  : 0/0
  9656 ;;		Unchanged: 0/0
  9657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9658 ;;      Params:         0       2       0       0       0       0
  9659 ;;      Locals:         0       0       0       0       0       0
  9660 ;;      Temps:          0       0       0       0       0       0
  9661 ;;      Totals:         0       2       0       0       0       0
  9662 ;;Total ram usage:        2 bytes
  9663 ;; Hardware stack levels used:    1
  9664 ;; Hardware stack levels required when called:    3
  9665 ;; This function calls:
  9666 ;;		_Button_Reading_Update_Helper
  9667 ;; This function is called by:
  9668 ;;		_Button_Service
  9669 ;; This function uses a non-reentrant model
  9670 ;;
  9671                           
  9672                           
  9673                           ;psect for function _Button_Reading_Update
  9674  0C72                     _Button_Reading_Update:
  9675  0C72                     l2968:	
  9676                           ;incstack = 0
  9677                           ; Regs used in _Button_Reading_Update: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  9678                           
  9679                           
  9680                           ;mcc_generated_files/mtouch/mtouch_button.c: 525: static void Button_Reading_Update(mtou
      +                          ch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 526: {;mcc_generated_fi
      +                          les/mtouch/mtouch_button.c: 527:     if (GIE == (uint8_t) 1)
  9681  0C72  1F8B               	btfss	11,7	;volatile
  9682  0C73  2C75               	goto	u1311
  9683  0C74  2C76               	goto	u1310
  9684  0C75                     u1311:
  9685  0C75  2C81               	goto	l2976
  9686  0C76                     u1310:
  9687  0C76                     l2970:
  9688                           
  9689                           ;mcc_generated_files/mtouch/mtouch_button.c: 528:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 529:         GIE = (uint8_t) 0;
  9690  0C76  138B               	bcf	11,7	;volatile
  9691  0C77                     l2972:
  9692                           
  9693                           ;mcc_generated_files/mtouch/mtouch_button.c: 530:         Button_Reading_Update_Helper(b
      +                          utton);
  9694  0C77  0020               	movlb	0	; select bank0
  9695  0C78  0825               	movf	Button_Reading_Update@button+1,w
  9696  0C79  00A1               	movwf	Button_Reading_Update_Helper@button+1
  9697  0C7A  0824               	movf	Button_Reading_Update@button,w
  9698  0C7B  00A0               	movwf	Button_Reading_Update_Helper@button
  9699  0C7C  3181  21F8  318C   	fcall	_Button_Reading_Update_Helper
  9700  0C7F                     l2974:
  9701                           
  9702                           ;mcc_generated_files/mtouch/mtouch_button.c: 531:         GIE = (uint8_t) 1;
  9703  0C7F  178B               	bsf	11,7	;volatile
  9704                           
  9705                           ;mcc_generated_files/mtouch/mtouch_button.c: 532:     }
  9706  0C80  2C89               	goto	l556
  9707  0C81                     l2976:
  9708                           
  9709                           ;mcc_generated_files/mtouch/mtouch_button.c: 534:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 535:         Button_Reading_Update_Helper(button);
  9710  0C81  0020               	movlb	0	; select bank0
  9711  0C82  0825               	movf	Button_Reading_Update@button+1,w
  9712  0C83  00A1               	movwf	Button_Reading_Update_Helper@button+1
  9713  0C84  0824               	movf	Button_Reading_Update@button,w
  9714  0C85  00A0               	movwf	Button_Reading_Update_Helper@button
  9715  0C86  3181  21F8  318C   	fcall	_Button_Reading_Update_Helper
  9716  0C89                     l556:
  9717  0C89  0008               	return
  9718  0C8A                     __end_of_Button_Reading_Update:
  9719                           
  9720                           	psect	text71
  9721  01F8                     __ptext71:	
  9722 ;; *************** function _Button_Reading_Update_Helper *****************
  9723 ;; Defined at:
  9724 ;;		line 539 in file "mcc_generated_files/mtouch/mtouch_button.c"
  9725 ;; Parameters:    Size  Location     Type
  9726 ;;  button          2    0[BANK0 ] PTR struct .
  9727 ;;		 -> mtouch_button(170), 
  9728 ;; Auto vars:     Size  Location     Type
  9729 ;;		None
  9730 ;; Return value:  Size  Location     Type
  9731 ;;                  1    wreg      void 
  9732 ;; Registers used:
  9733 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9734 ;; Tracked objects:
  9735 ;;		On entry : 0/0
  9736 ;;		On exit  : 0/0
  9737 ;;		Unchanged: 0/0
  9738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9739 ;;      Params:         0       2       0       0       0       0
  9740 ;;      Locals:         0       0       0       0       0       0
  9741 ;;      Temps:          0       2       0       0       0       0
  9742 ;;      Totals:         0       4       0       0       0       0
  9743 ;;Total ram usage:        4 bytes
  9744 ;; Hardware stack levels used:    1
  9745 ;; Hardware stack levels required when called:    2
  9746 ;; This function calls:
  9747 ;;		_MTOUCH_Sensor_RawSample_Get
  9748 ;; This function is called by:
  9749 ;;		_Button_Reading_Update
  9750 ;; This function uses a non-reentrant model
  9751 ;;
  9752                           
  9753                           
  9754                           ;psect for function _Button_Reading_Update_Helper
  9755  01F8                     _Button_Reading_Update_Helper:
  9756  01F8                     l2890:	
  9757                           ;incstack = 0
  9758                           ; Regs used in _Button_Reading_Update_Helper: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
  9759                           
  9760                           
  9761                           ;mcc_generated_files/mtouch/mtouch_button.c: 539: static void Button_Reading_Update_Help
      +                          er(mtouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 540: {;mcc_gener
      +                          ated_files/mtouch/mtouch_button.c: 541:     if (button->state != MTOUCH_BUTTON_STATE_ini
      +                          tializing)
  9762  01F8  0020               	movlb	0	; select bank0
  9763  01F9  0820               	movf	Button_Reading_Update_Helper@button,w
  9764  01FA  0086               	movwf	6
  9765  01FB  0821               	movf	Button_Reading_Update_Helper@button+1,w
  9766  01FC  0087               	movwf	7
  9767  01FD  3142               	addfsr 1,2
  9768  01FE  0801               	movf	1,w
  9769  01FF  1903               	btfsc	3,2
  9770  0200  2A02               	goto	u1231
  9771  0201  2A03               	goto	u1230
  9772  0202                     u1231:
  9773  0202  2A39               	goto	l2896
  9774  0203                     u1230:
  9775  0203                     l2892:
  9776                           
  9777                           ;mcc_generated_files/mtouch/mtouch_button.c: 542:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 543:         button->reading -= button->reading>>((uint8_t)2u);
  9778  0203  0820               	movf	Button_Reading_Update_Helper@button,w
  9779  0204  0086               	movwf	6
  9780  0205  0821               	movf	Button_Reading_Update_Helper@button+1,w
  9781  0206  0087               	movwf	7
  9782  0207  3143               	addfsr 1,3
  9783  0208  3F40               	moviw [0]fsr1
  9784  0209  00A2               	movwf	??_Button_Reading_Update_Helper
  9785  020A  3F41               	moviw [1]fsr1
  9786  020B  00A3               	movwf	??_Button_Reading_Update_Helper+1
  9787  020C  36A3               	lsrf	??_Button_Reading_Update_Helper+1,f
  9788  020D  0CA2               	rrf	??_Button_Reading_Update_Helper,f
  9789  020E  36A3               	lsrf	??_Button_Reading_Update_Helper+1,f
  9790  020F  0CA2               	rrf	??_Button_Reading_Update_Helper,f
  9791  0210  0820               	movf	Button_Reading_Update_Helper@button,w
  9792  0211  0086               	movwf	6
  9793  0212  0821               	movf	Button_Reading_Update_Helper@button+1,w
  9794  0213  0087               	movwf	7
  9795  0214  3143               	addfsr 1,3
  9796  0215  0822               	movf	??_Button_Reading_Update_Helper,w
  9797  0216  0281               	subwf	1,f
  9798  0217  3141               	addfsr 1,1
  9799  0218  0823               	movf	??_Button_Reading_Update_Helper+1,w
  9800  0219  3B81               	subwfb	1,f
  9801  021A  317F               	addfsr 1,-1
  9802  021B                     l2894:
  9803                           
  9804                           ;mcc_generated_files/mtouch/mtouch_button.c: 544:         button->reading += MTOUCH_Sens
      +                          or_RawSample_Get(button->sensor) >> ((uint8_t)2u);
  9805  021B  0820               	movf	Button_Reading_Update_Helper@button,w
  9806  021C  0086               	movwf	6
  9807  021D  0821               	movf	Button_Reading_Update_Helper@button+1,w
  9808  021E  0087               	movwf	7
  9809  021F  3141               	addfsr 1,1
  9810  0220  0801               	movf	1,w
  9811  0221  3180  205B  3181   	fcall	_MTOUCH_Sensor_RawSample_Get
  9812  0224  0876               	movf	?_MTOUCH_Sensor_RawSample_Get,w
  9813  0225  0020               	movlb	0	; select bank0
  9814  0226  00A2               	movwf	??_Button_Reading_Update_Helper
  9815  0227  0877               	movf	?_MTOUCH_Sensor_RawSample_Get+1,w
  9816  0228  00A3               	movwf	??_Button_Reading_Update_Helper+1
  9817  0229  36A3               	lsrf	??_Button_Reading_Update_Helper+1,f
  9818  022A  0CA2               	rrf	??_Button_Reading_Update_Helper,f
  9819  022B  36A3               	lsrf	??_Button_Reading_Update_Helper+1,f
  9820  022C  0CA2               	rrf	??_Button_Reading_Update_Helper,f
  9821  022D  0820               	movf	Button_Reading_Update_Helper@button,w
  9822  022E  0086               	movwf	6
  9823  022F  0821               	movf	Button_Reading_Update_Helper@button+1,w
  9824  0230  0087               	movwf	7
  9825  0231  3143               	addfsr 1,3
  9826  0232  0822               	movf	??_Button_Reading_Update_Helper,w
  9827  0233  0781               	addwf	1,f
  9828  0234  3141               	addfsr 1,1
  9829  0235  0823               	movf	??_Button_Reading_Update_Helper+1,w
  9830  0236  3D81               	addwfc	1,f
  9831  0237  317F               	addfsr 1,-1
  9832                           
  9833                           ;mcc_generated_files/mtouch/mtouch_button.c: 545:     }
  9834  0238  2A4C               	goto	l561
  9835  0239                     l2896:
  9836                           
  9837                           ;mcc_generated_files/mtouch/mtouch_button.c: 547:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 548:         button->reading = MTOUCH_Sensor_RawSample_Get(button->sensor);
  9838  0239  0820               	movf	Button_Reading_Update_Helper@button,w
  9839  023A  0086               	movwf	6
  9840  023B  0821               	movf	Button_Reading_Update_Helper@button+1,w
  9841  023C  0087               	movwf	7
  9842  023D  3141               	addfsr 1,1
  9843  023E  0801               	movf	1,w
  9844  023F  3180  205B  3181   	fcall	_MTOUCH_Sensor_RawSample_Get
  9845  0242  0020               	movlb	0	; select bank0
  9846  0243  0820               	movf	Button_Reading_Update_Helper@button,w
  9847  0244  0086               	movwf	6
  9848  0245  0821               	movf	Button_Reading_Update_Helper@button+1,w
  9849  0246  0087               	movwf	7
  9850  0247  3143               	addfsr 1,3
  9851  0248  0876               	movf	?_MTOUCH_Sensor_RawSample_Get,w
  9852  0249  3FC0               	movwi [0]fsr1
  9853  024A  0877               	movf	?_MTOUCH_Sensor_RawSample_Get+1,w
  9854  024B  3FC1               	movwi [1]fsr1
  9855  024C                     l561:
  9856  024C  0008               	return
  9857  024D                     __end_of_Button_Reading_Update_Helper:
  9858                           
  9859                           	psect	text72
  9860  005B                     __ptext72:	
  9861 ;; *************** function _MTOUCH_Sensor_RawSample_Get *****************
  9862 ;; Defined at:
  9863 ;;		line 428 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  9864 ;; Parameters:    Size  Location     Type
  9865 ;;  name            1    wreg     enum E2470
  9866 ;; Auto vars:     Size  Location     Type
  9867 ;;  name            1   12[COMMON] enum E2470
  9868 ;; Return value:  Size  Location     Type
  9869 ;;                  2    6[COMMON] unsigned short 
  9870 ;; Registers used:
  9871 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9872 ;; Tracked objects:
  9873 ;;		On entry : 0/0
  9874 ;;		On exit  : 0/0
  9875 ;;		Unchanged: 0/0
  9876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9877 ;;      Params:         2       0       0       0       0       0
  9878 ;;      Locals:         1       0       0       0       0       0
  9879 ;;      Temps:          4       0       0       0       0       0
  9880 ;;      Totals:         7       0       0       0       0       0
  9881 ;;Total ram usage:        7 bytes
  9882 ;; Hardware stack levels used:    1
  9883 ;; Hardware stack levels required when called:    1
  9884 ;; This function calls:
  9885 ;;		___wmul
  9886 ;; This function is called by:
  9887 ;;		_Button_Reading_Update_Helper
  9888 ;;		_Button_Baseline_Initialize
  9889 ;; This function uses a non-reentrant model
  9890 ;;
  9891                           
  9892                           
  9893                           ;psect for function _MTOUCH_Sensor_RawSample_Get
  9894  005B                     _MTOUCH_Sensor_RawSample_Get:
  9895                           
  9896                           ;incstack = 0
  9897                           ; Regs used in _MTOUCH_Sensor_RawSample_Get: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  9898                           ;MTOUCH_Sensor_RawSample_Get@name stored from wreg
  9899  005B  00FC               	movwf	MTOUCH_Sensor_RawSample_Get@name
  9900  005C                     l2784:
  9901  005C  300A               	movlw	10
  9902  005D  027C               	subwf	MTOUCH_Sensor_RawSample_Get@name,w
  9903  005E  1803               	skipnc
  9904  005F  2861               	goto	u1121
  9905  0060  2862               	goto	u1120
  9906  0061                     u1121:
  9907  0061  287F               	goto	l2792
  9908  0062                     u1120:
  9909  0062                     l2786:
  9910  0062  087C               	movf	MTOUCH_Sensor_RawSample_Get@name,w
  9911  0063  00F8               	movwf	??_MTOUCH_Sensor_RawSample_Get
  9912  0064  01F9               	clrf	??_MTOUCH_Sensor_RawSample_Get+1
  9913  0065  0878               	movf	??_MTOUCH_Sensor_RawSample_Get,w
  9914  0066  00F0               	movwf	___wmul@multiplier
  9915  0067  0879               	movf	??_MTOUCH_Sensor_RawSample_Get+1,w
  9916  0068  00F1               	movwf	___wmul@multiplier+1
  9917  0069  3009               	movlw	9
  9918  006A  00F2               	movwf	___wmul@multiplicand
  9919  006B  3000               	movlw	0
  9920  006C  00F3               	movwf	___wmul@multiplicand+1
  9921  006D  318C  24DA  3180   	fcall	___wmul
  9922  0070  3072               	movlw	114
  9923  0071  00FA               	movwf	??_MTOUCH_Sensor_RawSample_Get+2
  9924  0072  3020               	movlw	32
  9925  0073  00FB               	movwf	??_MTOUCH_Sensor_RawSample_Get+3
  9926  0074  0870               	movf	?___wmul,w
  9927  0075  077A               	addwf	??_MTOUCH_Sensor_RawSample_Get+2,w
  9928  0076  0086               	movwf	6
  9929  0077  0871               	movf	?___wmul+1,w
  9930  0078  3D7B               	addwfc	??_MTOUCH_Sensor_RawSample_Get+3,w
  9931  0079  0087               	movwf	7
  9932  007A  3F40               	moviw [0]fsr1
  9933  007B  00F6               	movwf	?_MTOUCH_Sensor_RawSample_Get
  9934  007C  3F41               	moviw [1]fsr1
  9935  007D  00F7               	movwf	?_MTOUCH_Sensor_RawSample_Get+1
  9936  007E  2881               	goto	l318
  9937  007F                     l2792:
  9938  007F  01F6               	clrf	?_MTOUCH_Sensor_RawSample_Get
  9939  0080  01F7               	clrf	?_MTOUCH_Sensor_RawSample_Get+1
  9940  0081                     l318:
  9941  0081  0008               	return
  9942  0082                     __end_of_MTOUCH_Sensor_RawSample_Get:
  9943                           
  9944                           	psect	text73
  9945  05FE                     __ptext73:	
  9946 ;; *************** function _Button_Deviation_Update *****************
  9947 ;; Defined at:
  9948 ;;		line 476 in file "mcc_generated_files/mtouch/mtouch_button.c"
  9949 ;; Parameters:    Size  Location     Type
  9950 ;;  button          2    0[COMMON] PTR struct .
  9951 ;;		 -> mtouch_button(170), 
  9952 ;; Auto vars:     Size  Location     Type
  9953 ;;  deviation       4    0[BANK0 ] long 
  9954 ;; Return value:  Size  Location     Type
  9955 ;;                  1    wreg      void 
  9956 ;; Registers used:
  9957 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9958 ;; Tracked objects:
  9959 ;;		On entry : 0/0
  9960 ;;		On exit  : 0/0
  9961 ;;		Unchanged: 0/0
  9962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9963 ;;      Params:         2       0       0       0       0       0
  9964 ;;      Locals:         0       4       0       0       0       0
  9965 ;;      Temps:         10       0       0       0       0       0
  9966 ;;      Totals:        12       4       0       0       0       0
  9967 ;;Total ram usage:       16 bytes
  9968 ;; Hardware stack levels used:    1
  9969 ;; This function calls:
  9970 ;;		Nothing
  9971 ;; This function is called by:
  9972 ;;		_Button_Service
  9973 ;; This function uses a non-reentrant model
  9974 ;;
  9975                           
  9976                           
  9977                           ;psect for function _Button_Deviation_Update
  9978  05FE                     _Button_Deviation_Update:
  9979  05FE                     l2978:	
  9980                           ;incstack = 0
  9981                           ; Regs used in _Button_Deviation_Update: [wreg+fsr1l+fsr1h+status,2+status,0]
  9982                           
  9983                           
  9984                           ;mcc_generated_files/mtouch/mtouch_button.c: 476: static void Button_Deviation_Update(mt
      +                          ouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 477: {;mcc_generated_
      +                          files/mtouch/mtouch_button.c: 478:     int32_t deviation;;mcc_generated_files/mtouch/mto
      +                          uch_button.c: 480:     deviation = (int32_t)((int32_t)(button->reading) - (int32_t)((but
      +                          ton->baseline)>>((uint8_t)4u)));
  9985  05FE  0870               	movf	Button_Deviation_Update@button,w
  9986  05FF  0086               	movwf	6
  9987  0600  0871               	movf	Button_Deviation_Update@button+1,w
  9988  0601  0087               	movwf	7
  9989  0602  3145               	addfsr 1,5
  9990  0603  3F40               	moviw [0]fsr1
  9991  0604  00F2               	movwf	??_Button_Deviation_Update
  9992  0605  3F41               	moviw [1]fsr1
  9993  0606  00F3               	movwf	??_Button_Deviation_Update+1
  9994  0607  3F42               	moviw [2]fsr1
  9995  0608  00F4               	movwf	??_Button_Deviation_Update+2
  9996  0609  3F43               	moviw [3]fsr1
  9997  060A  00F5               	movwf	??_Button_Deviation_Update+3
  9998  060B  3004               	movlw	4
  9999  060C                     u1325:
 10000  060C  36F5               	lsrf	??_Button_Deviation_Update+3,f
 10001  060D  0CF4               	rrf	??_Button_Deviation_Update+2,f
 10002  060E  0CF3               	rrf	??_Button_Deviation_Update+1,f
 10003  060F  0CF2               	rrf	??_Button_Deviation_Update,f
 10004  0610                     u1320:
 10005  0610  0B89               	decfsz	9,f
 10006  0611  2E0C               	goto	u1325
 10007  0612  0870               	movf	Button_Deviation_Update@button,w
 10008  0613  0086               	movwf	6
 10009  0614  0871               	movf	Button_Deviation_Update@button+1,w
 10010  0615  0087               	movwf	7
 10011  0616  3143               	addfsr 1,3
 10012  0617  3F40               	moviw [0]fsr1
 10013  0618  00F6               	movwf	??_Button_Deviation_Update+4
 10014  0619  3F41               	moviw [1]fsr1
 10015  061A  00F7               	movwf	??_Button_Deviation_Update+5
 10016  061B  0876               	movf	??_Button_Deviation_Update+4,w
 10017  061C  00F8               	movwf	??_Button_Deviation_Update+6
 10018  061D  0877               	movf	??_Button_Deviation_Update+5,w
 10019  061E  00F9               	movwf	??_Button_Deviation_Update+7
 10020  061F  01FA               	clrf	??_Button_Deviation_Update+8
 10021  0620  01FB               	clrf	??_Button_Deviation_Update+9
 10022  0621  0872               	movf	??_Button_Deviation_Update,w
 10023  0622  02F8               	subwf	??_Button_Deviation_Update+6,f
 10024  0623  0873               	movf	??_Button_Deviation_Update+1,w
 10025  0624  3BF9               	subwfb	??_Button_Deviation_Update+7,f
 10026  0625  0874               	movf	??_Button_Deviation_Update+2,w
 10027  0626  3BFA               	subwfb	??_Button_Deviation_Update+8,f
 10028  0627  0875               	movf	??_Button_Deviation_Update+3,w
 10029  0628  3BFB               	subwfb	??_Button_Deviation_Update+9,f
 10030  0629  087B               	movf	??_Button_Deviation_Update+9,w
 10031  062A  0020               	movlb	0	; select bank0
 10032  062B  00A3               	movwf	Button_Deviation_Update@deviation+3
 10033  062C  087A               	movf	??_Button_Deviation_Update+8,w
 10034  062D  00A2               	movwf	Button_Deviation_Update@deviation+2
 10035  062E  0879               	movf	??_Button_Deviation_Update+7,w
 10036  062F  00A1               	movwf	Button_Deviation_Update@deviation+1
 10037  0630  0878               	movf	??_Button_Deviation_Update+6,w
 10038  0631  00A0               	movwf	Button_Deviation_Update@deviation
 10039                           
 10040                           ;mcc_generated_files/mtouch/mtouch_button.c: 483:     deviation = deviation >> (button->
      +                          scaling);
 10041  0632  0820               	movf	Button_Deviation_Update@deviation,w
 10042  0633  00F2               	movwf	??_Button_Deviation_Update
 10043  0634  0821               	movf	Button_Deviation_Update@deviation+1,w
 10044  0635  00F3               	movwf	??_Button_Deviation_Update+1
 10045  0636  0822               	movf	Button_Deviation_Update@deviation+2,w
 10046  0637  00F4               	movwf	??_Button_Deviation_Update+2
 10047  0638  0823               	movf	Button_Deviation_Update@deviation+3,w
 10048  0639  00F5               	movwf	??_Button_Deviation_Update+3
 10049  063A  0870               	movf	Button_Deviation_Update@button,w
 10050  063B  0086               	movwf	6
 10051  063C  0871               	movf	Button_Deviation_Update@button+1,w
 10052  063D  0087               	movwf	7
 10053  063E  314F               	addfsr 1,15
 10054  063F  0A01               	incf	1,w
 10055  0640  2E45               	goto	u1330
 10056  0641                     u1335:
 10057  0641  37F5               	asrf	??_Button_Deviation_Update+3,f
 10058  0642  0CF4               	rrf	??_Button_Deviation_Update+2,f
 10059  0643  0CF3               	rrf	??_Button_Deviation_Update+1,f
 10060  0644  0CF2               	rrf	??_Button_Deviation_Update,f
 10061  0645                     u1330:
 10062  0645  0B89               	decfsz	9,f
 10063  0646  2E41               	goto	u1335
 10064  0647  0875               	movf	??_Button_Deviation_Update+3,w
 10065  0648  00A3               	movwf	Button_Deviation_Update@deviation+3
 10066  0649  0874               	movf	??_Button_Deviation_Update+2,w
 10067  064A  00A2               	movwf	Button_Deviation_Update@deviation+2
 10068  064B  0873               	movf	??_Button_Deviation_Update+1,w
 10069  064C  00A1               	movwf	Button_Deviation_Update@deviation+1
 10070  064D  0872               	movf	??_Button_Deviation_Update,w
 10071  064E  00A0               	movwf	Button_Deviation_Update@deviation
 10072  064F                     l2980:
 10073                           
 10074                           ;mcc_generated_files/mtouch/mtouch_button.c: 486:     if (deviation > ((0x7f)))
 10075  064F  1BA3               	btfsc	Button_Deviation_Update@deviation+3,7
 10076  0650  2E5F               	goto	u1341
 10077  0651  0823               	movf	Button_Deviation_Update@deviation+3,w
 10078  0652  1D03               	btfss	3,2
 10079  0653  2E60               	goto	u1340
 10080  0654  0822               	movf	Button_Deviation_Update@deviation+2,w
 10081  0655  1D03               	btfss	3,2
 10082  0656  2E60               	goto	u1340
 10083  0657  0821               	movf	Button_Deviation_Update@deviation+1,w
 10084  0658  1D03               	btfss	3,2
 10085  0659  2E60               	goto	u1340
 10086  065A  3080               	movlw	128
 10087  065B  0220               	subwf	Button_Deviation_Update@deviation,w
 10088  065C  1C03               	btfss	3,0
 10089  065D  2E5F               	goto	u1341
 10090  065E  2E60               	goto	u1340
 10091  065F                     u1341:
 10092  065F  2E68               	goto	l2984
 10093  0660                     u1340:
 10094  0660                     l2982:
 10095                           
 10096                           ;mcc_generated_files/mtouch/mtouch_button.c: 487:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 488:         deviation = ((0x7f));
 10097  0660  3000               	movlw	0
 10098  0661  00A3               	movwf	Button_Deviation_Update@deviation+3
 10099  0662  3000               	movlw	0
 10100  0663  00A2               	movwf	Button_Deviation_Update@deviation+2
 10101  0664  3000               	movlw	0
 10102  0665  00A1               	movwf	Button_Deviation_Update@deviation+1
 10103  0666  307F               	movlw	127
 10104  0667  00A0               	movwf	Button_Deviation_Update@deviation
 10105  0668                     l2984:
 10106                           
 10107                           ;mcc_generated_files/mtouch/mtouch_button.c: 490:     if (deviation < ((-1-0x7f)))
 10108  0668  1FA3               	btfss	Button_Deviation_Update@deviation+3,7
 10109  0669  2E75               	goto	u1351
 10110  066A  3080               	movlw	128
 10111  066B  0220               	subwf	Button_Deviation_Update@deviation,w
 10112  066C  30FF               	movlw	255
 10113  066D  3B21               	subwfb	Button_Deviation_Update@deviation+1,w
 10114  066E  30FF               	movlw	255
 10115  066F  3B22               	subwfb	Button_Deviation_Update@deviation+2,w
 10116  0670  30FF               	movlw	255
 10117  0671  3B23               	subwfb	Button_Deviation_Update@deviation+3,w
 10118  0672  1803               	btfsc	3,0
 10119  0673  2E75               	goto	u1351
 10120  0674  2E76               	goto	u1350
 10121  0675                     u1351:
 10122  0675  2E7E               	goto	l2988
 10123  0676                     u1350:
 10124  0676                     l2986:
 10125                           
 10126                           ;mcc_generated_files/mtouch/mtouch_button.c: 491:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 492:         deviation = ((-1-0x7f));
 10127  0676  30FF               	movlw	255
 10128  0677  00A3               	movwf	Button_Deviation_Update@deviation+3
 10129  0678  30FF               	movlw	255
 10130  0679  00A2               	movwf	Button_Deviation_Update@deviation+2
 10131  067A  30FF               	movlw	255
 10132  067B  00A1               	movwf	Button_Deviation_Update@deviation+1
 10133  067C  3080               	movlw	128
 10134  067D  00A0               	movwf	Button_Deviation_Update@deviation
 10135  067E                     l2988:
 10136                           
 10137                           ;mcc_generated_files/mtouch/mtouch_button.c: 495:     button->deviation = (mtouch_button
      +                          _deviation_t)deviation;
 10138  067E  0870               	movf	Button_Deviation_Update@button,w
 10139  067F  3E09               	addlw	9
 10140  0680  00F2               	movwf	??_Button_Deviation_Update
 10141  0681  3000               	movlw	0
 10142  0682  3D71               	addwfc	Button_Deviation_Update@button+1,w
 10143  0683  00F3               	movwf	??_Button_Deviation_Update+1
 10144  0684  0872               	movf	??_Button_Deviation_Update,w
 10145  0685  0086               	movwf	6
 10146  0686  0873               	movf	??_Button_Deviation_Update+1,w
 10147  0687  0087               	movwf	7
 10148  0688  0820               	movf	Button_Deviation_Update@deviation,w
 10149  0689  0081               	movwf	1
 10150  068A                     l540:
 10151  068A  0008               	return
 10152  068B                     __end_of_Button_Deviation_Update:
 10153                           
 10154                           	psect	text74
 10155  00D4                     __ptext74:	
 10156 ;; *************** function _MTOUCH_Button_isPressed *****************
 10157 ;; Defined at:
 10158 ;;		line 451 in file "mcc_generated_files/mtouch/mtouch_button.c"
 10159 ;; Parameters:    Size  Location     Type
 10160 ;;  name            1    wreg     enum E2698
 10161 ;; Auto vars:     Size  Location     Type
 10162 ;;  name            1   10[COMMON] enum E2698
 10163 ;; Return value:  Size  Location     Type
 10164 ;;                  1    wreg      _Bool 
 10165 ;; Registers used:
 10166 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10167 ;; Tracked objects:
 10168 ;;		On entry : 0/0
 10169 ;;		On exit  : 0/0
 10170 ;;		Unchanged: 0/0
 10171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10172 ;;      Params:         0       0       0       0       0       0
 10173 ;;      Locals:         1       0       0       0       0       0
 10174 ;;      Temps:          4       0       0       0       0       0
 10175 ;;      Totals:         5       0       0       0       0       0
 10176 ;;Total ram usage:        5 bytes
 10177 ;; Hardware stack levels used:    1
 10178 ;; Hardware stack levels required when called:    1
 10179 ;; This function calls:
 10180 ;;		___wmul
 10181 ;; This function is called by:
 10182 ;;		_main
 10183 ;;		_touch_example
 10184 ;;		_MTOUCH_Button_Buttonmask_Get
 10185 ;; This function uses a non-reentrant model
 10186 ;;
 10187                           
 10188                           
 10189                           ;psect for function _MTOUCH_Button_isPressed
 10190  00D4                     _MTOUCH_Button_isPressed:
 10191                           
 10192                           ;incstack = 0
 10193                           ; Regs used in _MTOUCH_Button_isPressed: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 10194                           ;MTOUCH_Button_isPressed@name stored from wreg
 10195  00D4  00FA               	movwf	MTOUCH_Button_isPressed@name
 10196  00D5                     l3254:
 10197                           
 10198                           ;mcc_generated_files/mtouch/mtouch_button.c: 451: _Bool MTOUCH_Button_isPressed(enum mto
      +                          uch_button_names name);mcc_generated_files/mtouch/mtouch_button.c: 452: {;mcc_generated_
      +                          files/mtouch/mtouch_button.c: 453:     if(name < 10u)
 10199  00D5  300A               	movlw	10
 10200  00D6  027A               	subwf	MTOUCH_Button_isPressed@name,w
 10201  00D7  1803               	skipnc
 10202  00D8  28DA               	goto	u1641
 10203  00D9  28DB               	goto	u1640
 10204  00DA                     u1641:
 10205  00DA  28FC               	goto	l3262
 10206  00DB                     u1640:
 10207  00DB                     l3256:
 10208                           
 10209                           ;mcc_generated_files/mtouch/mtouch_button.c: 454:         return (_Bool)((mtouch_button[
      +                          name].state == MTOUCH_BUTTON_STATE_pressed) ? 1 : 0);
 10210  00DB  087A               	movf	MTOUCH_Button_isPressed@name,w
 10211  00DC  00F6               	movwf	??_MTOUCH_Button_isPressed
 10212  00DD  01F7               	clrf	??_MTOUCH_Button_isPressed+1
 10213  00DE  0876               	movf	??_MTOUCH_Button_isPressed,w
 10214  00DF  00F0               	movwf	___wmul@multiplier
 10215  00E0  0877               	movf	??_MTOUCH_Button_isPressed+1,w
 10216  00E1  00F1               	movwf	___wmul@multiplier+1
 10217  00E2  3011               	movlw	17
 10218  00E3  00F2               	movwf	___wmul@multiplicand
 10219  00E4  3000               	movlw	0
 10220  00E5  00F3               	movwf	___wmul@multiplicand+1
 10221  00E6  318C  24DA  3180   	fcall	___wmul
 10222  00E9  30C8               	movlw	200
 10223  00EA  00F8               	movwf	??_MTOUCH_Button_isPressed+2
 10224  00EB  3020               	movlw	32
 10225  00EC  00F9               	movwf	??_MTOUCH_Button_isPressed+3
 10226  00ED  0870               	movf	?___wmul,w
 10227  00EE  0778               	addwf	??_MTOUCH_Button_isPressed+2,w
 10228  00EF  0086               	movwf	6
 10229  00F0  0871               	movf	?___wmul+1,w
 10230  00F1  3D79               	addwfc	??_MTOUCH_Button_isPressed+3,w
 10231  00F2  0087               	movwf	7
 10232  00F3  3002               	movlw	2
 10233  00F4  0601               	xorwf	1,w
 10234  00F5  1903               	btfsc	3,2
 10235  00F6  28F8               	goto	u1651
 10236  00F7  28FA               	goto	u1650
 10237  00F8                     u1651:
 10238  00F8  3001               	movlw	1
 10239  00F9  28FB               	goto	u1660
 10240  00FA                     u1650:
 10241  00FA  3000               	movlw	0
 10242  00FB                     u1660:
 10243  00FB  28FD               	goto	l524
 10244  00FC                     l3262:
 10245                           
 10246                           ;mcc_generated_files/mtouch/mtouch_button.c: 456:         return 0;
 10247  00FC  3000               	movlw	0
 10248  00FD                     l524:
 10249  00FD  0008               	return
 10250  00FE                     __end_of_MTOUCH_Button_isPressed:
 10251                           
 10252                           	psect	text75
 10253  0CDA                     __ptext75:	
 10254 ;; *************** function ___wmul *****************
 10255 ;; Defined at:
 10256 ;;		line 15 in file "/Applications/microchip/xc8/v2.20/pic/sources/c99/common/Umul16.c"
 10257 ;; Parameters:    Size  Location     Type
 10258 ;;  multiplier      2    0[COMMON] unsigned int 
 10259 ;;  multiplicand    2    2[COMMON] unsigned int 
 10260 ;; Auto vars:     Size  Location     Type
 10261 ;;  product         2    4[COMMON] unsigned int 
 10262 ;; Return value:  Size  Location     Type
 10263 ;;                  2    0[COMMON] unsigned int 
 10264 ;; Registers used:
 10265 ;;		wreg, status,2, status,0
 10266 ;; Tracked objects:
 10267 ;;		On entry : 0/0
 10268 ;;		On exit  : 0/0
 10269 ;;		Unchanged: 0/0
 10270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10271 ;;      Params:         4       0       0       0       0       0
 10272 ;;      Locals:         2       0       0       0       0       0
 10273 ;;      Temps:          0       0       0       0       0       0
 10274 ;;      Totals:         6       0       0       0       0       0
 10275 ;;Total ram usage:        6 bytes
 10276 ;; Hardware stack levels used:    1
 10277 ;; This function calls:
 10278 ;;		Nothing
 10279 ;; This function is called by:
 10280 ;;		_MTOUCH_Sensor_Initialize
 10281 ;;		_Sensor_Service
 10282 ;;		_Sensor_Acq_ExecuteScan
 10283 ;;		_MTOUCH_Sensor_RawSample_Get
 10284 ;;		_MTOUCH_Sensor_Enable
 10285 ;;		_MTOUCH_Sensor_wasSampled
 10286 ;;		_MTOUCH_Button_Initialize
 10287 ;;		_Button_Service
 10288 ;;		_MTOUCH_Button_Tick
 10289 ;;		_MTOUCH_Button_isPressed
 10290 ;;		_MTOUCH_Sensor_isAnySensorActive
 10291 ;;		_MTOUCH_Sensor_Disable
 10292 ;;		_MTOUCH_Sensor_Oversampling_Get
 10293 ;;		_MTOUCH_Sensor_Oversampling_Set
 10294 ;;		_MTOUCH_Button_Threshold_Set
 10295 ;;		_MTOUCH_Button_Scaling_Set
 10296 ;;		_MTOUCH_Button_Oversampling_Get
 10297 ;;		_MTOUCH_Button_Oversampling_Set
 10298 ;;		_Button_Baseline_Get_helper
 10299 ;; This function uses a non-reentrant model
 10300 ;;
 10301                           
 10302                           
 10303                           ;psect for function ___wmul
 10304  0CDA                     ___wmul:
 10305  0CDA                     l2708:	
 10306                           ;incstack = 0
 10307                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 10308                           
 10309  0CDA  01F4               	clrf	___wmul@product
 10310  0CDB  01F5               	clrf	___wmul@product+1
 10311  0CDC                     l2710:
 10312  0CDC  1C70               	btfss	___wmul@multiplier,0
 10313  0CDD  2CDF               	goto	u1011
 10314  0CDE  2CE0               	goto	u1010
 10315  0CDF                     u1011:
 10316  0CDF  2CE4               	goto	l951
 10317  0CE0                     u1010:
 10318  0CE0                     l2712:
 10319  0CE0  0872               	movf	___wmul@multiplicand,w
 10320  0CE1  07F4               	addwf	___wmul@product,f
 10321  0CE2  0873               	movf	___wmul@multiplicand+1,w
 10322  0CE3  3DF5               	addwfc	___wmul@product+1,f
 10323  0CE4                     l951:
 10324  0CE4  3001               	movlw	1
 10325  0CE5                     u1025:
 10326  0CE5  35F2               	lslf	___wmul@multiplicand,f
 10327  0CE6  0DF3               	rlf	___wmul@multiplicand+1,f
 10328  0CE7  0B89               	decfsz	9,f
 10329  0CE8  2CE5               	goto	u1025
 10330  0CE9                     l2714:
 10331  0CE9  3001               	movlw	1
 10332  0CEA                     u1035:
 10333  0CEA  36F1               	lsrf	___wmul@multiplier+1,f
 10334  0CEB  0CF0               	rrf	___wmul@multiplier,f
 10335  0CEC  0B89               	decfsz	9,f
 10336  0CED  2CEA               	goto	u1035
 10337  0CEE                     l2716:
 10338  0CEE  0870               	movf	___wmul@multiplier,w
 10339  0CEF  0471               	iorwf	___wmul@multiplier+1,w
 10340  0CF0  1D03               	btfss	3,2
 10341  0CF1  2CF3               	goto	u1041
 10342  0CF2  2CF4               	goto	u1040
 10343  0CF3                     u1041:
 10344  0CF3  2CDC               	goto	l2710
 10345  0CF4                     u1040:
 10346  0CF4                     l2718:
 10347  0CF4  0875               	movf	___wmul@product+1,w
 10348  0CF5  00F1               	movwf	?___wmul+1
 10349  0CF6  0874               	movf	___wmul@product,w
 10350  0CF7  00F0               	movwf	?___wmul
 10351  0CF8                     l953:
 10352  0CF8  0008               	return
 10353  0CF9                     __end_of___wmul:
 10354                           
 10355                           	psect	text76
 10356  0004                     __ptext76:	
 10357 ;; *************** function _EUSART_is_tx_ready *****************
 10358 ;; Defined at:
 10359 ;;		line 94 in file "mcc_generated_files/eusart.c"
 10360 ;; Parameters:    Size  Location     Type
 10361 ;;		None
 10362 ;; Auto vars:     Size  Location     Type
 10363 ;;		None
 10364 ;; Return value:  Size  Location     Type
 10365 ;;                  1    wreg      _Bool 
 10366 ;; Registers used:
 10367 ;;		wreg, status,2
 10368 ;; Tracked objects:
 10369 ;;		On entry : 0/0
 10370 ;;		On exit  : 0/0
 10371 ;;		Unchanged: 0/0
 10372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10373 ;;      Params:         0       0       0       0       0       0
 10374 ;;      Locals:         1       0       0       0       0       0
 10375 ;;      Temps:          0       0       0       0       0       0
 10376 ;;      Totals:         1       0       0       0       0       0
 10377 ;;Total ram usage:        1 bytes
 10378 ;; Hardware stack levels used:    1
 10379 ;; This function calls:
 10380 ;;		Nothing
 10381 ;; This function is called by:
 10382 ;;		_main
 10383 ;; This function uses a non-reentrant model
 10384 ;;
 10385                           
 10386                           
 10387                           ;psect for function _EUSART_is_tx_ready
 10388  0004                     _EUSART_is_tx_ready:
 10389  0004                     l3282:	
 10390                           ;incstack = 0
 10391                           ; Regs used in _EUSART_is_tx_ready: [wreg+status,2]
 10392                           
 10393                           
 10394                           ;mcc_generated_files/eusart.c: 96:     return (_Bool)(PIR1bits.TXIF && TXSTAbits.TXEN);
 10395  0004  01F0               	clrf	_EUSART_is_tx_ready$1029
 10396  0005                     l3284:
 10397  0005  0020               	movlb	0	; select bank0
 10398  0006  1E11               	btfss	17,4	;volatile
 10399  0007  2809               	goto	u1691
 10400  0008  280A               	goto	u1690
 10401  0009                     u1691:
 10402  0009  2811               	goto	l3290
 10403  000A                     u1690:
 10404  000A                     l3286:
 10405  000A  0023               	movlb	3	; select bank3
 10406  000B  1E9E               	btfss	30,5	;volatile
 10407  000C  280E               	goto	u1701
 10408  000D  280F               	goto	u1700
 10409  000E                     u1701:
 10410  000E  2811               	goto	l3290
 10411  000F                     u1700:
 10412  000F                     l3288:
 10413  000F  01F0               	clrf	_EUSART_is_tx_ready$1029
 10414  0010  0AF0               	incf	_EUSART_is_tx_ready$1029,f
 10415  0011                     l3290:
 10416  0011  0870               	movf	_EUSART_is_tx_ready$1029,w
 10417  0012                     l639:
 10418  0012  0008               	return
 10419  0013                     __end_of_EUSART_is_tx_ready:
 10420                           
 10421                           	psect	text77
 10422  0B96                     __ptext77:	
 10423 ;; *************** function _EUSART_Write *****************
 10424 ;; Defined at:
 10425 ;;		line 132 in file "mcc_generated_files/eusart.c"
 10426 ;; Parameters:    Size  Location     Type
 10427 ;;  txData          1    wreg     unsigned char 
 10428 ;; Auto vars:     Size  Location     Type
 10429 ;;  txData          1    0[COMMON] unsigned char 
 10430 ;; Return value:  Size  Location     Type
 10431 ;;                  1    wreg      void 
 10432 ;; Registers used:
 10433 ;;		wreg
 10434 ;; Tracked objects:
 10435 ;;		On entry : 0/0
 10436 ;;		On exit  : 0/0
 10437 ;;		Unchanged: 0/0
 10438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10439 ;;      Params:         0       0       0       0       0       0
 10440 ;;      Locals:         1       0       0       0       0       0
 10441 ;;      Temps:          0       0       0       0       0       0
 10442 ;;      Totals:         1       0       0       0       0       0
 10443 ;;Total ram usage:        1 bytes
 10444 ;; Hardware stack levels used:    1
 10445 ;; This function calls:
 10446 ;;		Nothing
 10447 ;; This function is called by:
 10448 ;;		_main
 10449 ;; This function uses a non-reentrant model
 10450 ;;
 10451                           
 10452                           
 10453                           ;psect for function _EUSART_Write
 10454  0B96                     _EUSART_Write:
 10455                           
 10456                           ;incstack = 0
 10457                           ; Regs used in _EUSART_Write: [wreg]
 10458                           ;EUSART_Write@txData stored from wreg
 10459  0B96  00F0               	movwf	EUSART_Write@txData
 10460  0B97                     l3294:
 10461  0B97                     l658:	
 10462                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
 10463                           
 10464                           
 10465                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
 10466  0B97  0020               	movlb	0	; select bank0
 10467  0B98  1E11               	btfss	17,4	;volatile
 10468  0B99  2B9B               	goto	u1711
 10469  0B9A  2B9C               	goto	u1710
 10470  0B9B                     u1711:
 10471  0B9B  2B97               	goto	l658
 10472  0B9C                     u1710:
 10473  0B9C                     l3296:
 10474                           
 10475                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
 10476  0B9C  0870               	movf	EUSART_Write@txData,w
 10477  0B9D  0023               	movlb	3	; select bank3
 10478  0B9E  009A               	movwf	26	;volatile
 10479  0B9F                     l661:
 10480  0B9F  0008               	return
 10481  0BA0                     __end_of_EUSART_Write:
 10482                           
 10483                           	psect	text78
 10484  0013                     __ptext78:	
 10485 ;; *************** function _DELAY_microseconds *****************
 10486 ;; Defined at:
 10487 ;;		line 33 in file "mcc_generated_files/delay.c"
 10488 ;; Parameters:    Size  Location     Type
 10489 ;;  microseconds    2    0[COMMON] unsigned short 
 10490 ;; Auto vars:     Size  Location     Type
 10491 ;;		None
 10492 ;; Return value:  Size  Location     Type
 10493 ;;                  1    wreg      void 
 10494 ;; Registers used:
 10495 ;;		wreg, status,2, status,0
 10496 ;; Tracked objects:
 10497 ;;		On entry : 0/0
 10498 ;;		On exit  : 0/0
 10499 ;;		Unchanged: 0/0
 10500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10501 ;;      Params:         2       0       0       0       0       0
 10502 ;;      Locals:         0       0       0       0       0       0
 10503 ;;      Temps:          0       0       0       0       0       0
 10504 ;;      Totals:         2       0       0       0       0       0
 10505 ;;Total ram usage:        2 bytes
 10506 ;; Hardware stack levels used:    1
 10507 ;; This function calls:
 10508 ;;		Nothing
 10509 ;; This function is called by:
 10510 ;;		_main
 10511 ;; This function uses a non-reentrant model
 10512 ;;
 10513                           
 10514                           
 10515                           ;psect for function _DELAY_microseconds
 10516  0013                     _DELAY_microseconds:
 10517  0013                     l3308:	
 10518                           ;incstack = 0
 10519                           ; Regs used in _DELAY_microseconds: [wreg+status,2+status,0]
 10520                           
 10521                           
 10522                           ;mcc_generated_files/delay.c: 34:     while( microseconds >= 32)
 10523  0013  281C               	goto	l754
 10524  0014                     l3310:
 10525                           
 10526                           ;mcc_generated_files/delay.c: 35:     {;mcc_generated_files/delay.c: 36:         _delay(
      +                          (unsigned long)((32)*(32000000/4000000.0)));
 10527  0014  3055               	movlw	85
 10528  0015                     u2207:
 10529  0015  0B89               	decfsz	9,f
 10530  0016  2815               	goto	u2207
 10531  0017  0000               	nop
 10532                           
 10533                           ;mcc_generated_files/delay.c: 37:         microseconds -= 32;
 10534  0018  3020               	movlw	32
 10535  0019  02F0               	subwf	DELAY_microseconds@microseconds,f
 10536  001A  3000               	movlw	0
 10537  001B  3BF1               	subwfb	DELAY_microseconds@microseconds+1,f
 10538  001C                     l754:	
 10539                           ;mcc_generated_files/delay.c: 38:     }
 10540                           
 10541                           
 10542                           ;mcc_generated_files/delay.c: 34:     while( microseconds >= 32)
 10543  001C  3000               	movlw	0
 10544  001D  0271               	subwf	DELAY_microseconds@microseconds+1,w
 10545  001E  3020               	movlw	32
 10546  001F  1903               	skipnz
 10547  0020  0270               	subwf	DELAY_microseconds@microseconds,w
 10548  0021  1803               	skipnc
 10549  0022  2824               	goto	u1721
 10550  0023  2825               	goto	u1720
 10551  0024                     u1721:
 10552  0024  2814               	goto	l3310
 10553  0025                     u1720:
 10554  0025  282A               	goto	l3312
 10555  0026                     l758:
 10556                           
 10557                           ;mcc_generated_files/delay.c: 41:     {;mcc_generated_files/delay.c: 42:         _delay(
      +                          (unsigned long)((1)*(32000000/4000000.0)));
 10558  0026  3200               	nop2	;2 cycle nop
 10559  0027  3200               	nop2	;2 cycle nop
 10560  0028  3200               	nop2	;2 cycle nop
 10561  0029  3200               	nop2	;2 cycle nop
 10562  002A                     l3312:
 10563                           
 10564                           ;mcc_generated_files/delay.c: 40:     while(microseconds--)
 10565  002A  3001               	movlw	1
 10566  002B  02F0               	subwf	DELAY_microseconds@microseconds,f
 10567  002C  3000               	movlw	0
 10568  002D  3BF1               	subwfb	DELAY_microseconds@microseconds+1,f
 10569  002E  0A70               	incf	DELAY_microseconds@microseconds,w
 10570  002F  1D03               	skipz
 10571  0030  2835               	goto	u1731
 10572  0031  0A71               	incf	DELAY_microseconds@microseconds+1,w
 10573  0032  1D03               	btfss	3,2
 10574  0033  2835               	goto	u1731
 10575  0034  2836               	goto	u1730
 10576  0035                     u1731:
 10577  0035  2826               	goto	l758
 10578  0036                     u1730:
 10579  0036                     l760:
 10580  0036  0008               	return
 10581  0037                     __end_of_DELAY_microseconds:
 10582  007E                     btemp	set	126	;btemp
 10583  007E                     wtemp0	set	126
 10584  206C                     
 10585                           	psect	config
 10586                           
 10587                           ;Config register CONFIG1 @ 0x8007
 10588                           ;	Oscillator Selection
 10589                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 10590                           ;	Watchdog Timer Enable
 10591                           ;	WDTE = OFF, WDT disabled
 10592                           ;	Power-up Timer Enable
 10593                           ;	PWRTE = OFF, PWRT disabled
 10594                           ;	MCLR Pin Function Select
 10595                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 10596                           ;	Flash Program Memory Code Protection
 10597                           ;	CP = OFF, Program memory code protection is disabled
 10598                           ;	Data Memory Code Protection
 10599                           ;	CPD = OFF, Data memory code protection is disabled
 10600                           ;	Brown-out Reset Enable
 10601                           ;	BOREN = NSLEEP, Brown-out Reset enabled while running and disabled in Sleep
 10602                           ;	Clock Out Enable
 10603                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 10604                           ;	Internal/External Switchover
 10605                           ;	IESO = ON, Internal/External Switchover mode is enabled
 10606                           ;	Fail-Safe Clock Monitor Enable
 10607                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 10608  8007                     	org	32775
 10609  8007  3DE4               	dw	15844
 10610                           
 10611                           ;Config register CONFIG2 @ 0x8008
 10612                           ;	Flash Memory Self-Write Protection
 10613                           ;	WRT = OFF, Write protection off
 10614                           ;	PLL Enable
 10615                           ;	PLLEN = ON, 4x PLL enabled
 10616                           ;	Stack Overflow/Underflow Reset Enable
 10617                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 10618                           ;	Brown-out Reset Voltage Selection
 10619                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 10620                           ;	Low-Voltage Programming Enable
 10621                           ;	LVP = ON, Low-voltage programming enabled
 10622  8008                     	org	32776
 10623  8008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    170
    Data        106
    BSS         21
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     23      60
    BANK1            28      0       0
    BANK2             0      0       0
    BANK3             0      0       0
    BANK4             0      0       0

Pointer List with Targets:

    Button_Service$1998$0	PTR struct . size(2) Largest target is 170
		 -> mtouch_button(BIGRAM[170]), 

    Button_Service$1998	PTR FTN(PTR struct .,)void  size(2) Largest target is 1
		 -> Button_State_Pressed(), Button_State_NotPressed(), Button_State_Initializing(), 

    Button_StateMachine$0	PTR struct . size(2) Largest target is 170
		 -> mtouch_button(BIGRAM[170]), 

    memcpy@d1	PTR void  size(2) Largest target is 170
		 -> mtouch_button(BIGRAM[170]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 170
		 -> mtouch_button(BIGRAM[170]), 

    memcpy@s1	PTR const void  size(2) Largest target is 170
		 -> mtouch_button_init(CODE[170]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 170
		 -> mtouch_button_init(CODE[170]), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 

    Button_Baseline_Update@button	PTR struct . size(2) Largest target is 170
		 -> mtouch_button(BIGRAM[170]), 

    Button_Baseline_Initialize@button	PTR struct . size(2) Largest target is 170
		 -> mtouch_button(BIGRAM[170]), 

    Button_Reading_Update_Helper@button	PTR struct . size(2) Largest target is 170
		 -> mtouch_button(BIGRAM[170]), 

    Button_Reading_Update@button	PTR struct . size(2) Largest target is 170
		 -> mtouch_button(BIGRAM[170]), 

    Button_Deviation_Update@button	PTR struct . size(2) Largest target is 170
		 -> mtouch_button(BIGRAM[170]), 

    Button_Tick_helper@button	PTR struct . size(2) Largest target is 170
		 -> mtouch_button(BIGRAM[170]), 

    Button_State_Pressed@button	PTR struct . size(2) Largest target is 170
		 -> mtouch_button(BIGRAM[170]), 

    Button_State_NotPressed@button	PTR struct . size(2) Largest target is 170
		 -> mtouch_button(BIGRAM[170]), 

    Button_State_Initializing@button	PTR struct . size(2) Largest target is 170
		 -> mtouch_button(BIGRAM[170]), 

    Button_Service@button	PTR struct . size(2) Largest target is 170
		 -> mtouch_button(BIGRAM[170]), 

    sp__memcpy	PTR void  size(2) Largest target is 170
		 -> mtouch_button(BIGRAM[170]), 

    MTOUCH_Button_Initialize@button	PTR struct . size(2) Largest target is 170
		 -> mtouch_button(BIGRAM[170]), 

    Button_StateMachine	PTR FTN(PTR struct .,)void [3] size(2) Largest target is 1
		 -> Button_State_Pressed(), Button_State_NotPressed(), Button_State_Initializing(), 

    callback_notPressed	PTR FTN(enum E2698,)void  size(2) Largest target is 1
		 -> Button_DefaultCallback(), 

    callback_pressed	PTR FTN(enum E2698,)void  size(2) Largest target is 1
		 -> Button_DefaultCallback(), 

    Sensor_setSampled@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_9(), MTOUCH_CVD_ScanB_8(), MTOUCH_CVD_ScanB_7(), MTOUCH_CVD_ScanB_6(), 
		 -> MTOUCH_CVD_ScanB_5(), MTOUCH_CVD_ScanB_4(), MTOUCH_CVD_ScanB_3(), MTOUCH_CVD_ScanB_2(), 
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_setSampled@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_9(), MTOUCH_CVD_ScanA_8(), MTOUCH_CVD_ScanA_7(), MTOUCH_CVD_ScanA_6(), 
		 -> MTOUCH_CVD_ScanA_5(), MTOUCH_CVD_ScanA_4(), MTOUCH_CVD_ScanA_3(), MTOUCH_CVD_ScanA_2(), 
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_setSampled@sensor	PTR struct . size(2) Largest target is 90
		 -> mtouch_sensor(BIGRAM[90]), 

    Sensor_Sampled_Reset@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_9(), MTOUCH_CVD_ScanB_8(), MTOUCH_CVD_ScanB_7(), MTOUCH_CVD_ScanB_6(), 
		 -> MTOUCH_CVD_ScanB_5(), MTOUCH_CVD_ScanB_4(), MTOUCH_CVD_ScanB_3(), MTOUCH_CVD_ScanB_2(), 
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_Sampled_Reset@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_9(), MTOUCH_CVD_ScanA_8(), MTOUCH_CVD_ScanA_7(), MTOUCH_CVD_ScanA_6(), 
		 -> MTOUCH_CVD_ScanA_5(), MTOUCH_CVD_ScanA_4(), MTOUCH_CVD_ScanA_3(), MTOUCH_CVD_ScanA_2(), 
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_Sampled_Reset@sensor	PTR struct . size(2) Largest target is 90
		 -> mtouch_sensor(BIGRAM[90]), 

    MTOUCH_Sensor_Sampled_ResetAll@sensor	PTR struct . size(2) Largest target is 90
		 -> mtouch_sensor(BIGRAM[90]), 

    Sensor_setInactive@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_9(), MTOUCH_CVD_ScanB_8(), MTOUCH_CVD_ScanB_7(), MTOUCH_CVD_ScanB_6(), 
		 -> MTOUCH_CVD_ScanB_5(), MTOUCH_CVD_ScanB_4(), MTOUCH_CVD_ScanB_3(), MTOUCH_CVD_ScanB_2(), 
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_setInactive@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_9(), MTOUCH_CVD_ScanA_8(), MTOUCH_CVD_ScanA_7(), MTOUCH_CVD_ScanA_6(), 
		 -> MTOUCH_CVD_ScanA_5(), MTOUCH_CVD_ScanA_4(), MTOUCH_CVD_ScanA_3(), MTOUCH_CVD_ScanA_2(), 
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_setInactive@sensor	PTR struct . size(2) Largest target is 90
		 -> mtouch_sensor(BIGRAM[90]), 

    Sensor_setActive@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_9(), MTOUCH_CVD_ScanB_8(), MTOUCH_CVD_ScanB_7(), MTOUCH_CVD_ScanB_6(), 
		 -> MTOUCH_CVD_ScanB_5(), MTOUCH_CVD_ScanB_4(), MTOUCH_CVD_ScanB_3(), MTOUCH_CVD_ScanB_2(), 
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_setActive@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_9(), MTOUCH_CVD_ScanA_8(), MTOUCH_CVD_ScanA_7(), MTOUCH_CVD_ScanA_6(), 
		 -> MTOUCH_CVD_ScanA_5(), MTOUCH_CVD_ScanA_4(), MTOUCH_CVD_ScanA_3(), MTOUCH_CVD_ScanA_2(), 
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_setActive@sensor	PTR struct . size(2) Largest target is 90
		 -> mtouch_sensor(BIGRAM[90]), 

    Sensor_isEnabled@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_9(), MTOUCH_CVD_ScanB_8(), MTOUCH_CVD_ScanB_7(), MTOUCH_CVD_ScanB_6(), 
		 -> MTOUCH_CVD_ScanB_5(), MTOUCH_CVD_ScanB_4(), MTOUCH_CVD_ScanB_3(), MTOUCH_CVD_ScanB_2(), 
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_isEnabled@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_9(), MTOUCH_CVD_ScanA_8(), MTOUCH_CVD_ScanA_7(), MTOUCH_CVD_ScanA_6(), 
		 -> MTOUCH_CVD_ScanA_5(), MTOUCH_CVD_ScanA_4(), MTOUCH_CVD_ScanA_3(), MTOUCH_CVD_ScanA_2(), 
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_isEnabled@sensor	PTR struct . size(2) Largest target is 90
		 -> mtouch_sensor(BIGRAM[90]), 

    Sensor_setScanFunction@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_9(), MTOUCH_CVD_ScanB_8(), MTOUCH_CVD_ScanB_7(), MTOUCH_CVD_ScanB_6(), 
		 -> MTOUCH_CVD_ScanB_5(), MTOUCH_CVD_ScanB_4(), MTOUCH_CVD_ScanB_3(), MTOUCH_CVD_ScanB_2(), 
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_setScanFunction@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_9(), MTOUCH_CVD_ScanA_8(), MTOUCH_CVD_ScanA_7(), MTOUCH_CVD_ScanA_6(), 
		 -> MTOUCH_CVD_ScanA_5(), MTOUCH_CVD_ScanA_4(), MTOUCH_CVD_ScanA_3(), MTOUCH_CVD_ScanA_2(), 
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_setScanFunction@sensor	PTR struct . size(2) Largest target is 90
		 -> mtouch_sensor(BIGRAM[90]), 

    Sensor_RawSample_Update@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_9(), MTOUCH_CVD_ScanB_8(), MTOUCH_CVD_ScanB_7(), MTOUCH_CVD_ScanB_6(), 
		 -> MTOUCH_CVD_ScanB_5(), MTOUCH_CVD_ScanB_4(), MTOUCH_CVD_ScanB_3(), MTOUCH_CVD_ScanB_2(), 
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_RawSample_Update@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_9(), MTOUCH_CVD_ScanA_8(), MTOUCH_CVD_ScanA_7(), MTOUCH_CVD_ScanA_6(), 
		 -> MTOUCH_CVD_ScanA_5(), MTOUCH_CVD_ScanA_4(), MTOUCH_CVD_ScanA_3(), MTOUCH_CVD_ScanA_2(), 
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_RawSample_Update@sensor	PTR struct . size(2) Largest target is 90
		 -> mtouch_sensor(BIGRAM[90]), 

    Sensor_Acq_ExecutePacket@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_9(), MTOUCH_CVD_ScanB_8(), MTOUCH_CVD_ScanB_7(), MTOUCH_CVD_ScanB_6(), 
		 -> MTOUCH_CVD_ScanB_5(), MTOUCH_CVD_ScanB_4(), MTOUCH_CVD_ScanB_3(), MTOUCH_CVD_ScanB_2(), 
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_Acq_ExecutePacket@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_9(), MTOUCH_CVD_ScanA_8(), MTOUCH_CVD_ScanA_7(), MTOUCH_CVD_ScanA_6(), 
		 -> MTOUCH_CVD_ScanA_5(), MTOUCH_CVD_ScanA_4(), MTOUCH_CVD_ScanA_3(), MTOUCH_CVD_ScanA_2(), 
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_Acq_ExecutePacket@sensor	PTR struct . size(2) Largest target is 90
		 -> mtouch_sensor(BIGRAM[90]), 

    Sensor_Acquisition@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_9(), MTOUCH_CVD_ScanB_8(), MTOUCH_CVD_ScanB_7(), MTOUCH_CVD_ScanB_6(), 
		 -> MTOUCH_CVD_ScanB_5(), MTOUCH_CVD_ScanB_4(), MTOUCH_CVD_ScanB_3(), MTOUCH_CVD_ScanB_2(), 
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_Acquisition@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_9(), MTOUCH_CVD_ScanA_8(), MTOUCH_CVD_ScanA_7(), MTOUCH_CVD_ScanA_6(), 
		 -> MTOUCH_CVD_ScanA_5(), MTOUCH_CVD_ScanA_4(), MTOUCH_CVD_ScanA_3(), MTOUCH_CVD_ScanA_2(), 
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_Acquisition@sensor	PTR struct . size(2) Largest target is 90
		 -> mtouch_sensor(BIGRAM[90]), 

    Sensor_Service@sensor	PTR struct . size(2) Largest target is 90
		 -> mtouch_sensor(BIGRAM[90]), 

    S148$scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_9(), MTOUCH_CVD_ScanB_8(), MTOUCH_CVD_ScanB_7(), MTOUCH_CVD_ScanB_6(), 
		 -> MTOUCH_CVD_ScanB_5(), MTOUCH_CVD_ScanB_4(), MTOUCH_CVD_ScanB_3(), MTOUCH_CVD_ScanB_2(), 
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    mtouch_sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_9(), MTOUCH_CVD_ScanB_8(), MTOUCH_CVD_ScanB_7(), MTOUCH_CVD_ScanB_6(), 
		 -> MTOUCH_CVD_ScanB_5(), MTOUCH_CVD_ScanB_4(), MTOUCH_CVD_ScanB_3(), MTOUCH_CVD_ScanB_2(), 
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    S148$scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_9(), MTOUCH_CVD_ScanA_8(), MTOUCH_CVD_ScanA_7(), MTOUCH_CVD_ScanA_6(), 
		 -> MTOUCH_CVD_ScanA_5(), MTOUCH_CVD_ScanA_4(), MTOUCH_CVD_ScanA_3(), MTOUCH_CVD_ScanA_2(), 
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    mtouch_sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_9(), MTOUCH_CVD_ScanA_8(), MTOUCH_CVD_ScanA_7(), MTOUCH_CVD_ScanA_6(), 
		 -> MTOUCH_CVD_ScanA_5(), MTOUCH_CVD_ScanA_4(), MTOUCH_CVD_ScanA_3(), MTOUCH_CVD_ScanA_2(), 
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_scanB	PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_9(), MTOUCH_CVD_ScanB_8(), MTOUCH_CVD_ScanB_7(), MTOUCH_CVD_ScanB_6(), 
		 -> MTOUCH_CVD_ScanB_5(), MTOUCH_CVD_ScanB_4(), MTOUCH_CVD_ScanB_3(), MTOUCH_CVD_ScanB_2(), 
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_scanA	PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_9(), MTOUCH_CVD_ScanA_8(), MTOUCH_CVD_ScanA_7(), MTOUCH_CVD_ScanA_6(), 
		 -> MTOUCH_CVD_ScanA_5(), MTOUCH_CVD_ScanA_4(), MTOUCH_CVD_ScanA_3(), MTOUCH_CVD_ScanA_2(), 
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    callback_sampled	PTR FTN(enum E2470,)void  size(2) Largest target is 1
		 -> Sensor_DefaultCallback(), 


Critical Paths under _main in COMMON

    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _MTOUCH_Service_Mainloop->_MTOUCH_Button_ServiceAll
    _MTOUCH_Tick->_MTOUCH_Button_Tick
    _MTOUCH_Button_Tick->_Button_Tick_helper
    _Button_Tick_helper->___wmul
    _Sensor_Acquisition->_Sensor_Acq_ExecutePacket
    _Sensor_Acq_ExecutePacket->_Sensor_Acq_ExecuteScan
    _Sensor_Acq_ExecuteScan->___wmul
    _MTOUCH_Initialize->_MTOUCH_Button_InitializeAll
    _MTOUCH_Initialize->_MTOUCH_Sensor_InitializeAll
    _MTOUCH_Sensor_Sampled_ResetAll->_Sensor_Sampled_Reset
    _MTOUCH_Sensor_InitializeAll->_MTOUCH_Sensor_Initialize
    _MTOUCH_Sensor_Initialize->_MTOUCH_Sensor_Enable
    _Sensor_Sampled_Reset->___wmul
    _MTOUCH_Sensor_Enable->___wmul
    _MTOUCH_Button_InitializeAll->_MTOUCH_Button_Initialize
    _Button_Service->_MTOUCH_Button_Initialize
    _MTOUCH_Sensor_wasSampled->___wmul
    _Button_State_Pressed->_MTOUCH_Button_Initialize
    _Button_State_NotPressed->_MTOUCH_Button_Initialize
    _MTOUCH_Button_Initialize->___wmul
    _Button_Baseline_Initialize->_MTOUCH_Sensor_RawSample_Get
    _Button_Reading_Update_Helper->_MTOUCH_Sensor_RawSample_Get
    _MTOUCH_Sensor_RawSample_Get->___wmul
    _MTOUCH_Button_isPressed->___wmul

Critical Paths under _main in BANK0

    _main->_MTOUCH_Service_Mainloop
    _MTOUCH_Service_Mainloop->_MTOUCH_Button_ServiceAll
    _MTOUCH_Tick->_MTOUCH_Button_Tick
    _MTOUCH_Sensor_SampleAll->_Sensor_Service
    _Sensor_Service->_Sensor_Acquisition
    _Sensor_Acquisition->_Sensor_Acq_ExecutePacket
    _MTOUCH_Sensor_InitializeAll->_MTOUCH_Sensor_Initialize
    _MTOUCH_Button_ServiceAll->_Button_Service
    _Button_Service->_Button_State_Initializing
    _Button_State_Initializing->_Button_Baseline_Initialize
    _Button_Reading_Update->_Button_Reading_Update_Helper

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   78243
                                             21 BANK0      2     2      0
                 _DELAY_microseconds
                       _EUSART_Write
                 _EUSART_is_tx_ready
            _MTOUCH_Button_isPressed
            _MTOUCH_Service_Mainloop
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0   13702
                  _EUSART_Initialize
                  _MTOUCH_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _MTOUCH_Service_Mainloop                              1     1      0   60152
                                             20 BANK0      1     1      0
           _MTOUCH_Button_ServiceAll
                  _MTOUCH_Initialize
            _MTOUCH_Sensor_SampleAll
     _MTOUCH_Sensor_Sampled_ResetAll
                        _MTOUCH_Tick
                 _MTOUCH_needReburst
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_needReburst                                   1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Tick                                          0     0      0    4320
                 _MTOUCH_Button_Tick
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Button_Tick                                   5     5      0    4320
                                             10 COMMON     4     4      0
                                              0 BANK0      1     1      0
                 _Button_Tick_helper
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _Button_Tick_helper                                   4     2      2     164
                                              6 COMMON     4     2      2
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Sensor_SampleAll                              2     2      0   10102
                                             17 BANK0      2     2      0
                     _Sensor_Service
 ---------------------------------------------------------------------------------
 (3) _Sensor_Service                                       8     8      0   10034
                                              9 BANK0      8     8      0
                 _Sensor_Acquisition
             _Sensor_DefaultCallback
            _Sensor_RawSample_Update
                   _Sensor_isEnabled
                  _Sensor_setSampled
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _Sensor_setSampled                                    2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _Sensor_RawSample_Update                              2     0      2     120
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _Sensor_DefaultCallback                               1     0      1      53
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (4) _Sensor_Acquisition                                   4     2      2    5301
                                              5 BANK0      4     2      2
           _Sensor_Acq_ExecutePacket
                   _Sensor_isEnabled
                   _Sensor_setActive
                 _Sensor_setInactive
                                _abs
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (5) _Sensor_setInactive                                   2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) _Sensor_setActive                                     2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _Sensor_isEnabled                                     2     0      2     196
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) _Sensor_Acq_ExecutePacket                             7     5      2    4557
                                             12 COMMON     2     0      2
                                              0 BANK0      5     5      0
                       _MTOUCH_Delay
                      _MTOUCH_Random
      _MTOUCH_Sensor_Scan_Initialize
             _Sensor_Acq_ExecuteScan
             _Sensor_setScanFunction
 ---------------------------------------------------------------------------------
 (6) _Sensor_setScanFunction                               2     0      2     120
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _Sensor_Acq_ExecuteScan                               6     6      0    4156
                                              6 COMMON     6     6      0
                 _MTOUCH_CVD_ScanA_0 *
                 _MTOUCH_CVD_ScanA_1 *
                 _MTOUCH_CVD_ScanA_2 *
                 _MTOUCH_CVD_ScanA_3 *
                 _MTOUCH_CVD_ScanA_4 *
                 _MTOUCH_CVD_ScanA_5 *
                 _MTOUCH_CVD_ScanA_6 *
                 _MTOUCH_CVD_ScanA_7 *
                 _MTOUCH_CVD_ScanA_8 *
                 _MTOUCH_CVD_ScanA_9 *
                 _MTOUCH_CVD_ScanB_0 *
                 _MTOUCH_CVD_ScanB_1 *
                 _MTOUCH_CVD_ScanB_2 *
                 _MTOUCH_CVD_ScanB_3 *
                 _MTOUCH_CVD_ScanB_4 *
                 _MTOUCH_CVD_ScanB_5 *
                 _MTOUCH_CVD_ScanB_6 *
                 _MTOUCH_CVD_ScanB_7 *
                 _MTOUCH_CVD_ScanB_8 *
                 _MTOUCH_CVD_ScanB_9 *
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanB_9                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanB_8                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanB_7                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanB_6                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanB_5                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanB_4                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanB_3                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanB_2                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanB_1                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanB_0                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanA_9                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanA_8                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanA_7                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanA_6                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanA_5                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanA_4                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanA_3                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanA_2                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanA_1                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanA_0                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _MTOUCH_Random                                        1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _MTOUCH_Delay                                         2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Initialize                                    0     0      0   13408
        _MTOUCH_Button_InitializeAll
        _MTOUCH_Sensor_InitializeAll
     _MTOUCH_Sensor_Sampled_ResetAll
      _MTOUCH_Sensor_Scan_Initialize
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Sensor_Scan_Initialize                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Sensor_Sampled_ResetAll                       4     4      0     242
                                              8 COMMON     4     4      0
               _Sensor_Sampled_Reset
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Sensor_InitializeAll                          2     2      0    8506
                                             12 COMMON     2     2      0
           _MTOUCH_Sensor_Initialize
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Sensor_Initialize                             5     5      0    8438
                                             11 COMMON     1     1      0
                                              0 BANK0      4     4      0
               _MTOUCH_Sensor_Enable
               _Sensor_Sampled_Reset
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _Sensor_Sampled_Reset                                 2     0      2     174
                                              6 COMMON     2     0      2
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Sensor_Enable                                 5     5      0    4132
                                              6 COMMON     5     5      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Button_InitializeAll                          2     2      0    4660
                                             13 COMMON     1     1      0
                                              0 BANK0      1     1      0
           _MTOUCH_Button_Initialize
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              12     6      6     371
                                              0 COMMON    12     6      6
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Button_ServiceAll                             2     2      0   32057
                                             13 COMMON     1     1      0
                                             19 BANK0      1     1      0
                     _Button_Service
 ---------------------------------------------------------------------------------
 (3) _Button_Service                                       7     7      0   31989
                                             12 BANK0      7     7      0
            _Button_Deviation_Update
              _Button_Reading_Update
          _Button_State_Initializing *
            _Button_State_NotPressed *
               _Button_State_Pressed *
           _MTOUCH_Button_Initialize
         _MTOUCH_Sensor_isCalibrated
           _MTOUCH_Sensor_wasSampled
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Sensor_wasSampled                             5     5      0    4132
                                              6 COMMON     5     5      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Sensor_isCalibrated                           1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _Button_State_Pressed                                 4     2      2    4675
                                              6 BANK0      4     2      2
             _Button_DefaultCallback
           _MTOUCH_Button_Initialize
 ---------------------------------------------------------------------------------
 (4) _Button_State_NotPressed                              4     2      2    5060
                                              6 BANK0      4     2      2
             _Button_Baseline_Update
             _Button_DefaultCallback
           _MTOUCH_Button_Initialize
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Button_Initialize                             7     7      0    4221
                                              6 COMMON     7     7      0
            _MTOUCH_Sensor_Calibrate
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Sensor_Calibrate                              1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _Button_DefaultCallback                               1     0      1     159
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (4) _Button_State_Initializing                            6     4      2    4800
                                              6 BANK0      6     4      2
         _Button_Baseline_Initialize
             _Button_Baseline_Update
 ---------------------------------------------------------------------------------
 (5) _Button_Baseline_Update                               8     6      2     328
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (5) _Button_Baseline_Initialize                           6     4      2    4274
                                              0 BANK0      6     4      2
        _MTOUCH_Sensor_RawSample_Get
 ---------------------------------------------------------------------------------
 (4) _Button_Reading_Update                                2     0      2    4558
                                              4 BANK0      2     0      2
       _Button_Reading_Update_Helper
 ---------------------------------------------------------------------------------
 (5) _Button_Reading_Update_Helper                         4     2      2    4438
                                              0 BANK0      4     2      2
        _MTOUCH_Sensor_RawSample_Get
 ---------------------------------------------------------------------------------
 (6) _MTOUCH_Sensor_RawSample_Get                          7     5      2    4132
                                              6 COMMON     7     5      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _Button_Deviation_Update                             16    14      2     256
                                              0 COMMON    12    10      2
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _MTOUCH_Button_isPressed                              5     5      0    4132
                                              6 COMMON     5     5      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    4088
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _EUSART_is_tx_ready                                   1     1      0      24
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DELAY_microseconds                                   2     0      2     121
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DELAY_microseconds
   _EUSART_Write
   _EUSART_is_tx_ready
   _MTOUCH_Button_isPressed
     ___wmul
   _MTOUCH_Service_Mainloop
     _MTOUCH_Button_ServiceAll
       _Button_Service
         _Button_Deviation_Update
         _Button_Reading_Update
           _Button_Reading_Update_Helper
             _MTOUCH_Sensor_RawSample_Get
               ___wmul
         _Button_State_Initializing *
           _Button_Baseline_Initialize
             _MTOUCH_Sensor_RawSample_Get
               ___wmul
           _Button_Baseline_Update
         _Button_State_NotPressed *
           _Button_Baseline_Update
           _Button_DefaultCallback
           _MTOUCH_Button_Initialize
             _MTOUCH_Sensor_Calibrate
             ___wmul
         _Button_State_Pressed *
           _Button_DefaultCallback
           _MTOUCH_Button_Initialize
             _MTOUCH_Sensor_Calibrate
             ___wmul
         _MTOUCH_Button_Initialize *
           _MTOUCH_Sensor_Calibrate
           ___wmul
         _MTOUCH_Sensor_isCalibrated *
         _MTOUCH_Sensor_wasSampled *
           ___wmul
         ___wmul *
     _MTOUCH_Initialize
       _MTOUCH_Button_InitializeAll
         _MTOUCH_Button_Initialize
           _MTOUCH_Sensor_Calibrate
           ___wmul
         _memcpy
       _MTOUCH_Sensor_InitializeAll
         _MTOUCH_Sensor_Initialize
           _MTOUCH_Sensor_Enable
             ___wmul
           _Sensor_Sampled_Reset
             ___wmul (ARG)
           ___wmul
       _MTOUCH_Sensor_Sampled_ResetAll
         _Sensor_Sampled_Reset
           ___wmul (ARG)
       _MTOUCH_Sensor_Scan_Initialize
     _MTOUCH_Sensor_SampleAll
       _Sensor_Service
         _Sensor_Acquisition
           _Sensor_Acq_ExecutePacket
             _MTOUCH_Delay
             _MTOUCH_Random
             _MTOUCH_Sensor_Scan_Initialize
             _Sensor_Acq_ExecuteScan
               _MTOUCH_CVD_ScanA_0 *
               _MTOUCH_CVD_ScanA_1 *
               _MTOUCH_CVD_ScanA_2 *
               _MTOUCH_CVD_ScanA_3 *
               _MTOUCH_CVD_ScanA_4 *
               _MTOUCH_CVD_ScanA_5 *
               _MTOUCH_CVD_ScanA_6 *
               _MTOUCH_CVD_ScanA_7 *
               _MTOUCH_CVD_ScanA_8 *
               _MTOUCH_CVD_ScanA_9 *
               _MTOUCH_CVD_ScanB_0 *
               _MTOUCH_CVD_ScanB_1 *
               _MTOUCH_CVD_ScanB_2 *
               _MTOUCH_CVD_ScanB_3 *
               _MTOUCH_CVD_ScanB_4 *
               _MTOUCH_CVD_ScanB_5 *
               _MTOUCH_CVD_ScanB_6 *
               _MTOUCH_CVD_ScanB_7 *
               _MTOUCH_CVD_ScanB_8 *
               _MTOUCH_CVD_ScanB_9 *
               ___wmul *
             _Sensor_setScanFunction
           _Sensor_isEnabled
           _Sensor_setActive
           _Sensor_setInactive
           _abs
         _Sensor_DefaultCallback
         _Sensor_RawSample_Update
         _Sensor_isEnabled
         _Sensor_setSampled
         ___wmul
     _MTOUCH_Sensor_Sampled_ResetAll
       _Sensor_Sampled_Reset
         ___wmul (ARG)
     _MTOUCH_Tick
       _MTOUCH_Button_Tick
         _Button_Tick_helper
           ___wmul (ARG)
         ___wmul
     _MTOUCH_needReburst
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _MTOUCH_Initialize
       _MTOUCH_Button_InitializeAll
         _MTOUCH_Button_Initialize
           _MTOUCH_Sensor_Calibrate
           ___wmul
         _memcpy
       _MTOUCH_Sensor_InitializeAll
         _MTOUCH_Sensor_Initialize
           _MTOUCH_Sensor_Enable
             ___wmul
           _Sensor_Sampled_Reset
             ___wmul (ARG)
           ___wmul
       _MTOUCH_Sensor_Sampled_ResetAll
         _Sensor_Sampled_Reset
           ___wmul (ARG)
       _MTOUCH_Sensor_Scan_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      4A       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     17      3C       6       75.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               1C      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK2                0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK3                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK4                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      4A      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sun Jul 25 17:31:43 2021

                 ?_MTOUCH_Sensor_RawSample_Get 0076                                              l7 0C71  
                       _Sensor_setScanFunction 0C48                                             l62 0B5A  
                                           l55 00D3                                             l49 0BD0  
                                           l73 0D38                                             l82 0E98  
                                           l91 0D98                                             l59 0B5E  
                                           l76 0E78                                             l85 0D78  
                                           l94 0ED8                                             l79 0D58  
                                           l88 0EB8                                             l97 0DB8  
              __size_of_Sensor_Acq_ExecuteScan 0069                     __end_of_Sensor_setInactive 0B8F  
                          ___wmul@multiplicand 0072                                            LATA 010C  
                                          LATB 010D                                            l100 0EF8  
                                          l103 0DD8                                            l112 0F38  
                                          l121 0E38                                            l130 0E58  
                                          l106 0F18                                            l115 0E18  
                                          l124 0F78                                            l301 0C47  
                                          l109 0DF8                                            l118 0F58  
                                          l127 0D18                                            l240 0BE0  
                                          l305 03C9                                            l235 0FFF  
                                          l243 0B67                                            l324 0CD9  
                                          l341 0FBA                                            l333 0C5B  
                                          l318 0081                                            l350 0BF0  
                                          l327 0B56                                            l281 02A1  
                                          l273 0586                                            l249 0CBD  
                                          l450 0F99                                            l354 0B87  
                                          l291 0345                                            l267 0556  
                                          l524 00FD                                            l540 068A  
                                          l364 0B58                                            l460 04A4  
                                          l380 0B80                                            l372 0180  
                                          l445 01F7                                            l293 034A  
                                          l357 0B8E                                            l367 0B55  
                                          l455 0C22                                            l295 035F  
                                          l383 0B95                                            l376 005A  
                                          l296 0360                                            l712 0BAB  
                                          l561 024C                                            l481 05FD  
                                          l466 0515                                            l634 0FDC  
                                          l706 0C00                                            l475 07CA  
                                          l491 0127                                            l715 0B62  
                                          l556 0C89                                            l564 01AF  
                                          l740 0C34                                            l661 0B9F  
                                          l709 0BA6                                            l486 00AA  
                                          l639 0012                                            l760 0036  
                                          l569 071A                                            l585 0B54  
                                          l673 0B73                                            l754 001C  
                                          l658 0B97                                            l676 0B79  
                                          l758 0026                                            l790 040C  
                                          l951 0CE4                                            l679 0B6D  
                                          l783 03CD                                            l953 0CF8  
                                          l794 0418                                            l797 041B  
                                          _GIE 005F                                            _abs 0C8A  
                                          _led 003F                 ?_EUSART_SetFramingErrorHandler 0070  
                                          wreg 0009               ??_MTOUCH_Sensor_Sampled_ResetAll 0078  
              ?_MTOUCH_Sensor_Sampled_ResetAll 0070               __size_of_MTOUCH_Sensor_SampleAll 001A  
            __size_of_MTOUCH_Sensor_Initialize 0023                      ?_MTOUCH_Sensor_Initialize 0070  
                                         INDF0 0000                                           FSR0H 0005  
                                         FSR1H 0007                                           FSR0L 0004  
                                         FSR1L 0006                             _MTOUCH_CVD_ScanA_0 0D19  
                           _MTOUCH_CVD_ScanA_1 0D39                             _MTOUCH_CVD_ScanA_2 0D59  
                           _MTOUCH_CVD_ScanA_3 0D79                             _MTOUCH_CVD_ScanB_0 0E59  
                           _MTOUCH_CVD_ScanA_4 0D99                             _MTOUCH_CVD_ScanB_1 0E79  
                           _MTOUCH_CVD_ScanA_5 0DB9                             _MTOUCH_CVD_ScanB_2 0E99  
                           _MTOUCH_CVD_ScanA_6 0DD9                             _MTOUCH_CVD_ScanB_3 0EB9  
                           _MTOUCH_CVD_ScanA_7 0DF9                             _MTOUCH_CVD_ScanB_4 0ED9  
                           _MTOUCH_CVD_ScanA_8 0E19                             _MTOUCH_CVD_ScanB_5 0EF9  
                           _MTOUCH_CVD_ScanA_9 0CF9                             _MTOUCH_CVD_ScanB_6 0F19  
                           _MTOUCH_CVD_ScanB_7 0F39                             _MTOUCH_CVD_ScanB_8 0F59  
                           _MTOUCH_CVD_ScanB_9 0E39                                           ?_abs 0070  
                                         l3000 04E4                                           l3002 050D  
                                         l3010 074D                                           l1411 0CA3  
                                         l3020 078D                                           l3012 0755  
                                         l3004 071B                                           l1420 0153  
                                         l3100 0518                                           l3030 07C3  
                                         l3022 0799                                           l3006 0731  
                                         l3014 075E                                           l1414 0CA3  
                                         l3110 055E                                           l3102 0531  
                                         l3040 05E1                                           l3032 0587  
                                         l3016 0778                                           l3024 07A2  
                                         l3008 073B                                           l3104 053D  
                                         l3200 0FC5                                           l3042 05E9  
                                         l3034 059A                                           l3026 07AD  
                                         l3018 0785                                           l3130 0450  
                                         l3106 0549                                           l3114 0567  
                                         l3050 011E                                           l3202 0FCC  
                                         l3210 0C2F                                           l3044 05F2  
                                         l3036 05AF                                           l3028 07BB  
                                         l3140 0491                                           l3132 045E  
                                         l3060 0BD6                                           l3052 0BD1  
                                         l3108 054F                                           l3116 0584  
                                         l3220 00AB                                           l3204 0FD3  
                                         l3212 0BA0                                           l3300 0BF4  
                                         l3310 0014                                           l3038 05D5  
                                         l3134 046D                                           l3062 0BDA  
                                         l3150 0BC7                                           l2510 0D1E  
                                         l3046 00FE                                           l3230 00B8  
                                         l3222 00B1                                           l3142 0B6E  
                                         l3206 0FDA                                           l3214 0BA3  
                                         l3302 0BF7                                           l3312 002A  
                                         l3136 047D                                           l3128 0437  
                                         l3072 0F8A                                           l3064 0F79  
                                         l3152 0BCA                                           l2512 0D2C  
                                         l2520 0E5E                                           l2600 0EDE  
                                         l3048 0109                                           l3240 00CC  
                                         l3232 00C0                                           l3224 00B4  
                                         l3144 0B74                                           l3216 0BA4  
                                         l3208 0C23                                           l3304 0BFA  
                                         l3138 0489                                           l3074 0F8E  
                                         l3066 0F88                                           l3058 0BD2  
                                         l3082 0167                                           l3154 0BCD  
                                         l2514 0D2D                                           l2530 0D3E  
                                         l2610 0DBE                                           l2522 0E6C  
                                         l2602 0EEC                                           l3170 0CB6  
                                         l3162 0CA6                                           l3242 00CF  
                                         l3226 00B6                                           l3146 0B68  
                                         l3218 0B5F                                           l3306 0BFD  
                                         l3308 0013                                           l3076 0F93  
                                         l3084 016E                                           l3148 0BC4  
                                         l2516 0D33                                           l2508 0D19  
                                         l2532 0D4C                                           l2612 0DCC  
                                         l2700 0E3E                                           l2524 0E6D  
                                         l2540 0E7E                                           l2604 0EED  
                                         l2620 0EFE                                           l3172 0CBC  
                                         l3164 0CAF                                           l3156 0CA4  
                                         l3244 00D2                                           l3236 00C2  
                                         l3228 00B8                                           l2710 0CDC  
                                         l3262 00FC                                           l3254 00D5  
                                         l3182 0C13                                           l3086 0172  
                                         l3078 0154                                           l2534 0D4D  
                                         l2550 0D5E                                           l2614 0DCD  
                                         l2630 0DDE                                           l2702 0E4C  
                                         l2526 0E73                                           l2518 0E59  
                                         l2542 0E8C                                           l2606 0EF3  
                                         l2622 0F0C                                           l3094 0084  
                                         l3190 0B59                                           l3238 00C5  
                                         l3430 03ED                                           l2712 0CE0  
                                         l3256 00DB                                           l3184 0C17  
                                         l3176 0C11                                           l2800 0B7A  
                                         l2536 0D53                                           l2528 0D39  
                                         l2552 0D6C                                           l2616 0DD3  
                                         l2608 0DB9                                           l2632 0DEC  
                                         l2704 0E4D                                           l2544 0E8D  
                                         l2560 0E9E                                           l2624 0F0D  
                                         l2640 0F1E                                           l3168 0CB1  
                                         l3096 009F                                           l3088 0082  
                                         l3440 040A                                           l3432 03F3  
                                         l3424 03D7                                           l3416 03CA  
                                         l3290 0011                                           l3282 0004  
                                         l2714 0CE9                                           l3186 0C1C  
                                         l2730 0C6F                                           l2722 0C5C  
                                         l2554 0D6D                                           l2570 0D7E  
                                         l2634 0DED                                           l2650 0DFE  
                                         l2706 0E53                                           l2546 0E93  
                                         l2538 0E79                                           l2562 0EAC  
                                         l2626 0F13                                           l2618 0EF9  
                                         l2642 0F2C                                           l2810 0BEF  
                                         l2802 0BE1                                           l3514 0574  
                                         l3098 00A4                                           l3194 0B5B  
                                         l3450 0424                                           l3434 03F8  
                                         l3426 03E0                                           l3418 03D5  
                                         l3284 0005                                           l2716 0CEE  
                                         l2708 0CDA                                           l2724 0C61  
                                         l2556 0D73                                           l2548 0D59  
                                         l2572 0D8C                                           l2636 0DF3  
                                         l2628 0DD9                                           l2652 0E0C  
                                         l2564 0EAD                                           l2580 0EBE  
                                         l2644 0F2D                                           l2660 0F3E  
                                         l2740 0361                                           l2820 030A  
                                         l2804 0BE7                                           l3516 0579  
                                         l3188 0B59                                           l3196 0FBB  
                                         l3452 0429                                           l3428 03E5  
                                         l3436 03FE                                           l3294 0B97  
                                         l3286 000A                                           l2718 0CF4  
                                         l2734 0B63                                           l2726 0C66  
                                         l2574 0D8D                                           l2590 0D9E  
                                         l2654 0E0D                                           l2670 0E1E  
                                         l2566 0EB3                                           l2558 0E99  
                                         l2582 0ECC                                           l2646 0F33  
                                         l2638 0F19                                           l2662 0F4C  
                                         l3518 0387                                           l2750 0372  
                                         l2742 0366                                           l2830 032E  
                                         l2822 030D                                           l2814 02FC  
                                         l2910 0260                                           l2902 024D  
                                         l3198 0FC4                                           l3446 040E  
                                         l3438 0405                                           l3296 0B9C  
                                         l3288 000F                                           l2736 0B65  
                                         l2728 0C6A                                           l2576 0D93  
                                         l2568 0D79                                           l2592 0DAC  
                                         l2656 0E13                                           l2648 0DF9  
                                         l2672 0E2C                                           l2584 0ECD  
                                         l2664 0F4D                                           l2680 0F5E  
                                         l2760 03AF                                           l2752 0378  
                                         l2840 033C                                           l2832 0335  
                                         l2824 0312                                           l2816 02FE  
                                         l2920 028F                                           l2912 0268  
                                         l2904 0252                                           l3448 041D  
                                         l2690 0CFE                                           l2594 0DAD  
                                         l2674 0E2D                                           l2586 0ED3  
                                         l2578 0EB9                                           l2666 0F53  
                                         l2658 0F39                                           l2682 0F6C  
                                         l2770 03C8                                           l2762 03B3  
                                         l2746 036C                                           l2738 0C48  
                                         l2842 0342                                           l2834 0337  
                                         l2826 032B                                           l2818 0304  
                                         l2922 0298                                           l2906 025E  
                                         l2930 0CC2                                           l3298 0BF1  
                                         l2860 01B1                                           l2940 0B57  
                                         l2692 0D0C                                           l2596 0DB3  
                                         l2588 0D99                                           l2676 0E33  
                                         l2668 0E19                                           l2684 0F6D  
                                         l2764 03BD                                           l2756 037E  
                                         l2844 034F                                           l2836 0338  
                                         l2828 032D                                           l2852 0C8A  
                                         l2916 026A                                           l2932 0CC3  
                                         l2870 01EE                                           l2862 01C9  
                                         l2782 0C40                                           l2694 0D0D  
                                         l2598 0ED9                                           l2686 0F73  
                                         l2678 0F59                                           l2766 03C1  
                                         l2758 038F                                           l2846 0356  
                                         l2838 0339                                           l2854 0C97  
                                         l2918 0277                                           l2934 0CCD  
                                         l2792 007F                                           l2784 005C  
                                         l2872 0181                                           l2880 0690  
                                         l2864 01CF                                           l2952 0059  
                                         l2944 0038                                           l2960 0139  
                                         l2776 0C35                                           l2696 0D13  
                                         l2688 0CF9                                           l2768 03C4  
                                         l2848 035B                                           l2856 0B81  
                                         l2936 0CCF                                           l2928 0CBE  
                                         l2786 0062                                           l2890 01F8  
                                         l2970 0C76                                           l2874 019F  
                                         l2882 06B5                                           l2866 01DE  
                                         l2946 003E                                           l2962 013D  
                                         l2778 0C3A                                           l2698 0E39  
                                         l2858 0B88                                           l2938 0B8F  
                                         l2980 064F                                           l2892 0203  
                                         l2972 0C77                                           l2884 06D4  
                                         l2876 068B                                           l2868 01E6  
                                         l2964 0143                                           l2956 0128  
                                         l2796 0F9B                                           l2982 0660  
                                         l2894 021B                                           l2974 0C7F  
                                         l2878 068F                                           l2886 06D6  
                                         l2990 04A5                                           l2958 0131  
                                         l2966 0147                                           l2798 0FA1  
                                         l2984 0668                                           l2896 0239  
                                         l2976 0C81                                           l2968 0C72  
                                         l2888 06FB                                           l2992 04B8  
                                         l2986 0676                                           l2978 05FE  
                                         l2994 04C0                                           l2898 0FDE  
                                         TRISA 008C                                           l2988 067E  
                                         l2996 04C7                                           TRISB 008D  
                                         l2998 04D2                  ?_Button_Reading_Update_Helper 0020  
                                         u1010 0CE0                                           u1011 0CDF  
                                         u1100 0C3F                                           u1101 0C3E  
                                         u1110 0C47                                           u1111 0C46  
                                         u1040 0CF4                                           u1120 0062  
                                         u1200 068F                                           u1041 0CF3  
                                         u1025 0CE5                                           u1121 0061  
                                         u1201 068E                                           u1210 06A2  
                                         u1130 0FA1                                           u1050 0C61  
                                         u1035 0CEA                                           u1131 0FA0  
                                         u1051 0C60                                           u1220 06E8  
                                         u1300 0153                                           u1060 036B  
                                         u1140 0BE7                                           u1301 0152  
                                         u1061 036A                                           u1141 0BE6  
                                         u1230 0203                                           u1310 0C76  
                                         u1070 0371                                           u1150 034A  
                                         u1231 0202                                           u1311 0C75  
                                         u1215 069E                                           u2007 0F5F  
                                         u1071 0370                                           u1151 0349  
                                         u1320 0610                                           u1400 074D  
                                         u1080 03AF                                           u1160 034F  
                                         u1240 025E                                           u1225 06E4  
                                         u1401 074C                                           u2017 0F3F  
                                         u1081 03AE                                           u1161 034E  
                                         u1241 025D                                           u1330 0645  
                                         u1410 0778                                           u1090 03B3  
                                         u1170 035B                                           u1250 0268  
                                         u1411 0777                                           u2107 0E1F  
                                         u2027 0F1F                                           u1091 03B2  
                                         u1171 035A                                           u1251 0267  
                                         u1340 0660                                           u1420 07BB  
                                         u1500 0166                                           u1180 0C97  
                                         u1260 0277                                           u1341 065F  
                                         u1325 060C                                           u1421 07BA  
                                         u1501 0165                                           u2117 0DFF  
                                         u2037 0EFF                                           u1181 0C96  
                                         u1261 0276                                           _LATA 010C  
                                         u1350 0676                                           u1430 059A  
                                         u1510 0180                                           u1270 028F  
                                         _LATB 010D                                           u2207 0015  
                                         u1351 0675                                           u1335 0641  
                                         u1431 0599                                           u1415 0774  
                                         u1511 017F                                           u2127 0DDF  
                                         u2047 0EDF                                           u1271 028E  
                                         u1360 04B8                                           u1600 0C22  
                                         u1280 0CC2                                           u1520 00AA  
                                         u1361 04B7                                           u1601 0C21  
                                         u1505 0162                                           u2137 0DBF  
                                         u2057 0EBF                                           u1185 0C93  
                                         u1281 0CC1                                           u1521 00A9  
                                         u1450 05D5                                           u1370 04E4  
                                         u1290 003E                                           u1530 0549  
                                         u1610 0BAB                                           u1195 01A5  
                                         u1451 05D4                                           u1371 04E3  
                                         u1291 003D                                           u1515 017C  
                                         u2147 0D9F                                           u2067 0E9F  
                                         u1531 0548                                           u1611 0BAA  
                                         u1700 000F                                           u1444 05CB  
                                         u1380 04F6                                           u1540 054F  
                                         u1460 0109                                           u1620 00B1  
                                         u1701 000E                                           u1445 05CA  
                                         u2157 0D7F                                           u2077 0E7F  
                                         u1541 054E                                           u1461 0108  
                                         u1621 00B0                                           u1710 0B9C  
                                         u1390 0731                                           u1550 045E  
                                         u1470 011E                                           u1630 00C0  
                                         u1711 0B9B                                           u1391 0730  
                                         u1551 045D                                           u2167 0D5F  
                                         u2087 0E5F                                           u1471 011D  
                                         u1631 00BF                                           u1720 0025  
                                         u1640 00DB                                           u1560 046D  
                                         u1480 0BE0                                           u1721 0024  
                                         u1641 00DA                                           u1385 04F2  
                                         u1561 046C                                           u1481 0BDF  
                                         u2177 0D3F                                           u2097 0E3F  
                                         u1730 0036                                           u1650 00FA  
                                         u1570 0489                                           u1490 0F99  
                                         u1731 0035                                           u1651 00F8  
                                         u1571 0488                                           u1491 0F98  
                                         u2187 0D1F                                           u1660 00FB  
                                         u1580 0CAF                                           u2197 0CFF  
                                         u1581 0CAE                                           u1590 0CBC  
                                         u1591 0CBB                                           u1690 000A  
                                         u1930 03D5                                           u1691 0009  
                                         u1931 03D4                                           u1940 03E0  
                                         u1941 03DF                                           u1950 03ED  
                                         u1951 03EC                                           u1960 03FE  
                                         u1961 03FD                                           u1970 0405  
                                         u1971 0404                                           u1980 0418  
                                         u1981 0417                                           u1990 0432  
                                         u1991 0431                                           u1985 0414  
                                         _PLLR 04D6                     Button_State_Pressed@button 0026  
                                         _WPUA 020C                                           _WPUB 020D  
            __size_of_Sensor_Acq_ExecutePacket 0065                      ?_Sensor_Acq_ExecutePacket 007C  
                           _MTOUCH_needReburst 0B59                                           abs@a 0070  
                                         _main 03CA           __size_of_MTOUCH_Button_InitializeAll 0021  
                                         _duty 0041                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006           __size_of_MTOUCH_Sensor_InitializeAll 0010  
                                         btemp 007E                            ?_MTOUCH_CVD_ScanA_0 0070  
                          ?_MTOUCH_CVD_ScanA_1 0070                            ?_MTOUCH_CVD_ScanA_2 0070  
                          ?_MTOUCH_CVD_ScanA_3 0070                            ?_MTOUCH_CVD_ScanA_4 0070  
                          ?_MTOUCH_CVD_ScanB_0 0070                            ?_MTOUCH_CVD_ScanA_5 0070  
                          ?_MTOUCH_CVD_ScanB_1 0070                            ?_MTOUCH_CVD_ScanA_6 0070  
                          ?_MTOUCH_CVD_ScanB_2 0070                            ?_MTOUCH_CVD_ScanA_7 0070  
                          ?_MTOUCH_CVD_ScanB_3 0070                            ?_MTOUCH_CVD_ScanA_8 0070  
                          ?_MTOUCH_CVD_ScanB_4 0070                            ?_MTOUCH_CVD_ScanA_9 0070  
                          ?_MTOUCH_CVD_ScanB_5 0070                            ?_MTOUCH_CVD_ScanB_6 0070  
                          ?_MTOUCH_CVD_ScanB_7 0070                            ?_MTOUCH_CVD_ScanB_8 0070  
                          ?_MTOUCH_CVD_ScanB_9 0070                                           start 0002  
                          ?_MTOUCH_needReburst 0070                                          ADCON0 009D  
                     ?_MTOUCH_Service_Mainloop 0070               __size_of_MTOUCH_Button_isPressed 002A  
                __size_of_Button_State_Pressed 0077                                          ??_abs 0072  
                  ?_Button_Baseline_Initialize 0020                  ??_MTOUCH_Sensor_RawSample_Get 0078  
                Sensor_RawSample_Update@sensor 0070                      __size_of_Sensor_isEnabled 0010  
                                ?_EUSART_Write 0070                 __size_of_OSCILLATOR_Initialize 000C  
                __end_of_OSCILLATOR_Initialize 0BAC                                          ?_main 0070  
                                        _ADRES 009B                           ??_MTOUCH_CVD_ScanA_0 0070  
                         ??_MTOUCH_CVD_ScanA_1 0070                           ??_MTOUCH_CVD_ScanA_2 0070  
                         ??_MTOUCH_CVD_ScanA_3 0070                           ??_MTOUCH_CVD_ScanA_4 0070  
                         ??_MTOUCH_CVD_ScanB_0 0070                           ??_MTOUCH_CVD_ScanA_5 0070  
                         ??_MTOUCH_CVD_ScanB_1 0070                           ??_MTOUCH_CVD_ScanA_6 0070  
                         ??_MTOUCH_CVD_ScanB_2 0070                           ??_MTOUCH_CVD_ScanA_7 0070  
                         ??_MTOUCH_CVD_ScanB_3 0070                           ??_MTOUCH_CVD_ScanA_8 0070  
                         ??_MTOUCH_CVD_ScanB_4 0070                           ??_MTOUCH_CVD_ScanA_9 0070  
                         ??_MTOUCH_CVD_ScanB_5 0070                           ??_MTOUCH_CVD_ScanB_6 0070  
                         ??_MTOUCH_CVD_ScanB_7 0070                           ??_MTOUCH_CVD_ScanB_8 0070  
                         ??_MTOUCH_CVD_ScanB_9 0070                        __size_of_Button_Service 0070  
                                        _RCREG 0199                                          _RCSTA 019D  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TXREG 019A                                          _TXSTA 019E  
              __size_of_Button_DefaultCallback 0001                           ??_MTOUCH_needReburst 0070  
              __size_of_Sensor_DefaultCallback 0001                        __size_of_Sensor_Service 0071  
        __end_of_MTOUCH_Sensor_Scan_Initialize 0B68         __size_of_MTOUCH_Sensor_Scan_Initialize 0005  
                _MTOUCH_Sensor_Scan_Initialize 0B63                                 _WDT_Initialize 0B5F  
                      Sensor_setSampled@sensor 0070                         _Sensor_Acq_ExecuteScan 0361  
                                        main@i 0036               __size_of_Button_State_NotPressed 00B0  
                                        pclath 000A                           _Sensor_Sampled_Reset 0B7A  
                                        status 0003                                          wtemp0 007E  
                    __size_of_Sensor_setActive 0007                         Sensor_isEnabled@sensor 0070  
                              __initialization 07CB                                   __end_of_main 0435  
                        __end_of_MTOUCH_Random 0C72                        _EUSART_is_tx_ready$1029 0070  
                               ??_EUSART_Write 0070               __end_of_MTOUCH_Button_Initialize 01F8  
                                       ??_main 0035                        _MTOUCH_Sensor_Calibrate 0B55  
                      ??_Button_Reading_Update 007D           MTOUCH_Sensor_Sampled_ResetAll@sensor 007A  
                     ?_Button_Deviation_Update 0070                         __end_of_WDT_Initialize 0B63  
                                 ?_MTOUCH_Tick 0070                   Button_Baseline_Update@button 0070  
            _EUSART_DefaultFramingErrorHandler 0000                                         _ADCON0 009D  
                                       _ADCON1 009E                     _EUSART_OverrunErrorHandler 0039  
         __size_of_MTOUCH_Sensor_RawSample_Get 0027                                         _ANSELA 018C  
                                       _ANSELB 018D                                         _BORCON 0116  
                        ?_Sensor_Sampled_Reset 0076                     __end_of_EUSART_is_tx_ready 0013  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _WDTCON 0097  
            MTOUCH_Button_InitializeAll@button 0020                 ??_Button_Reading_Update_Helper 0022  
                       _Button_DefaultCallback 0B54                __end_of_MTOUCH_Service_Mainloop 00D4  
                       _Sensor_DefaultCallback 0B56                                  _packet_sample 003D  
                                       ___wmul 0CDA                   Sensor_DefaultCallback@sensor 0070  
                                       _memcpy 0128               __end_of_MTOUCH_Button_ServiceAll 0C23  
                                 __pdataBIGRAM 206C                        _MTOUCH_Sensor_SampleAll 0CA4  
                 Button_DefaultCallback@button 0070                                ?_WDT_Initialize 0070  
                     ?_Sensor_RawSample_Update 0070                     __end_of_Sensor_Acquisition 02A2  
                      ?_Button_Baseline_Update 0070                MTOUCH_Sensor_RawSample_Get@name 007C  
                            _SYSTEM_Initialize 0BF1                        __end_of__initialization 07FD  
          __size_of_Button_Baseline_Initialize 002F                 ?_MTOUCH_Sensor_Scan_Initialize 0070  
                           ?_SYSTEM_Initialize 0070                            _Button_StateMachine 004C  
                   __end_of_Button_Tick_helper 0128                  MTOUCH_Sensor_Calibrate@sensor 0070  
                      ?_Sensor_setScanFunction 0070                                 __pcstackCOMMON 0070  
                      _MTOUCH_Button_isPressed 00D4                                   __pidataBANK0 0C01  
                          ??_SYSTEM_Initialize 007E                     __end_of_MTOUCH_Button_Tick 00AB  
             __end_of_MTOUCH_Sensor_Initialize 1000                             _DELAY_microseconds 0013  
                    ??_MTOUCH_Sensor_Calibrate 0070                               _Sensor_isEnabled 0BE1  
              __end_of_Button_Deviation_Update 068B                       Sensor_setInactive@sensor 0070  
                               _Button_Service 0435               __end_of_Sensor_Acq_ExecutePacket 0361  
                   ?_Button_State_Initializing 0026                           Button_Service@button 0031  
                               _OPTION_REGbits 0095                            ?_DELAY_microseconds 0070  
               __end_of_Button_Baseline_Update 071B                           Sensor_Service@sensor 002F  
                     _MTOUCH_Button_Initialize 01B0                ??_EUSART_SetOverrunErrorHandler 0072  
                               _Sensor_Service 0516                        _Button_State_NotPressed 071B  
                __size_of_MTOUCH_Sensor_Enable 0021                             _Sensor_setInactive 0B88  
                    __end_of_SYSTEM_Initialize 0C01                              _lowpowerActivated 0044  
             MTOUCH_Sensor_isCalibrated@sensor 0070                         ??_Sensor_Sampled_Reset 0078  
                                   __pbssBANK0 0037                           __end_of_EUSART_Write 0BA0  
                          ?_Sensor_setInactive 0070                               _Sensor_setActive 0B81  
                           Sensor_Service@name 002D                     __end_of_mtouch_button_init 08AA  
               __end_of_Sensor_setScanFunction 0C5C                           ??_DELAY_microseconds 0072  
                                   __pmaintext 03CA                                  ?_MTOUCH_Delay 0070  
                                      ?___wmul 0070                 MTOUCH_Sensor_wasSampled@sensor 007A  
                       __end_of_Button_Service 04A5                                        ?_memcpy 0070  
                                      _BAUDCON 019F            __end_of_MTOUCH_Button_InitializeAll 0F9A  
                  _MTOUCH_Button_InitializeAll 0F79                                        _APFCON0 011D  
                                      _APFCON1 011E            __end_of_MTOUCH_Sensor_InitializeAll 0BE1  
                  _MTOUCH_Sensor_InitializeAll 0BD1                      ??_MTOUCH_Sensor_SampleAll 0031  
              __end_of_Sensor_RawSample_Update 0CDA                           ??_Sensor_setInactive 0072  
            __size_of_MTOUCH_Sensor_wasSampled 0024                      ?_MTOUCH_Sensor_wasSampled 0070  
            __end_of_Button_State_Initializing 0516                         __end_of_Sensor_Service 0587  
                     _MTOUCH_Button_ServiceAll 0C11                        ?_Sensor_Acq_ExecuteScan 0070  
                MTOUCH_Sensor_SampleAll@sensor 0032                                        _OSCTUNE 0098  
             __size_of_MTOUCH_Service_Mainloop 0029                   __end_of_Button_State_Pressed 05FE  
                     ??_EUSART_SetErrorHandler 0072               Button_Baseline_Initialize@button 0020  
                         __size_of_MTOUCH_Tick 0004                      ??_MTOUCH_Button_isPressed 0076  
                               ??_MTOUCH_Delay 0070                                 _packet_counter 0046  
                      Sensor_Acquisition@retry 0028                 MTOUCH_Button_Initialize@button 007B  
                              __size_of___wmul 001F                                ?_Button_Service 0070  
                              __size_of_memcpy 002C                                        __ptext1 0BF1  
                                      __ptext2 0B5F                                        __ptext3 0C23  
                                      __ptext4 0BA0                                        __ptext5 0FBB  
                                      __ptext6 0B74                                        __ptext7 0B6E  
                                      __ptext8 0B68                                        __ptext9 00AB  
                  Button_Reading_Update@button 0024                    __size_of_MTOUCH_CVD_ScanA_0 0020  
                  __size_of_MTOUCH_CVD_ScanA_1 0020                    __size_of_MTOUCH_CVD_ScanA_2 0020  
                  __size_of_MTOUCH_CVD_ScanA_3 0020                    __size_of_MTOUCH_CVD_ScanA_4 0020  
                  __size_of_MTOUCH_CVD_ScanB_0 0020                    __size_of_MTOUCH_CVD_ScanA_5 0020  
                  __size_of_MTOUCH_CVD_ScanB_1 0020                    __size_of_MTOUCH_CVD_ScanA_6 0020  
                  __size_of_MTOUCH_CVD_ScanB_2 0020                    __size_of_MTOUCH_CVD_ScanA_7 0020  
                  __size_of_MTOUCH_CVD_ScanB_3 0020                    __size_of_MTOUCH_CVD_ScanA_8 0020  
                  __size_of_MTOUCH_CVD_ScanB_4 0020                    __size_of_MTOUCH_CVD_ScanA_9 0020  
                  __size_of_MTOUCH_CVD_ScanB_5 0020                    __size_of_MTOUCH_CVD_ScanB_6 0020  
                  __size_of_MTOUCH_CVD_ScanB_7 0020                    __size_of_MTOUCH_CVD_ScanB_8 0020  
                  __size_of_MTOUCH_CVD_ScanB_9 0020                       _MTOUCH_Sensor_Initialize 0FDD  
               __end_of_Sensor_Acq_ExecuteScan 03CA                          _OSCILLATOR_Initialize 0BA0  
                                 __size_of_abs 001A                      ??_Button_State_NotPressed 0028  
                              ?_Sensor_Service 0070                       ??_PIN_MANAGER_Initialize 0070  
               __size_of_Button_Reading_Update 0018                    __size_of_MTOUCH_needReburst 0002  
                __end_of_Button_Reading_Update 0C8A              MTOUCH_Sensor_InitializeAll@sensor 007D  
                     _Sensor_Acq_ExecutePacket 02FC                               _callback_sampled 005A  
                   __size_of_SYSTEM_Initialize 0010                                        clrloop0 0BAD  
                             _callback_pressed 0054                 MTOUCH_Sensor_Initialize@sensor 007B  
                         end_of_initialization 07FD                        ?_Button_DefaultCallback 0070  
        __end_of_EUSART_SetOverrunErrorHandler 0B7A         __size_of_EUSART_SetOverrunErrorHandler 0006  
                _EUSART_SetOverrunErrorHandler 0B74                                        memcpy@d 0077  
                                      memcpy@n 0074                                        memcpy@s 0079  
                                      init_ram 0BB8                                        initloop 0BB9  
                      ?_Sensor_DefaultCallback 0070               __size_of_Button_Deviation_Update 008D  
                            _EUSART_Initialize 0FBB                   ??_MTOUCH_Sensor_isCalibrated 0070  
                           ?_EUSART_Initialize 0070            __end_of_MTOUCH_Sensor_RawSample_Get 0082  
                  _MTOUCH_Sensor_RawSample_Get 005B                                      _RCSTAbits 019D  
                           _EUSART_is_tx_ready 0004                            _mtouch_request_init 0049  
                                MTOUCH_Delay@i 0071                            ??_EUSART_Initialize 0072  
                             ??_WDT_Initialize 0070                         Sensor_setActive@sensor 0070  
                          ?_EUSART_is_tx_ready 0070                  Button_Deviation_Update@button 0070  
                        __size_of_EUSART_Write 000A                     MTOUCH_Sensor_Enable@sensor 007A  
                          _callback_notPressed 0052            __size_of_MTOUCH_Sensor_isCalibrated 0002  
               __end_of_Button_DefaultCallback 0B55                __size_of_EUSART_SetErrorHandler 0006  
                           _sensor_globalFlags 0048                         __size_of_MTOUCH_Random 0016  
                     __end_of_Sensor_isEnabled 0BF1                 __end_of_Sensor_DefaultCallback 0B57  
                    __end_of_EUSART_Initialize 0FDD                   Sensor_Acq_ExecuteScan@result 007A  
                         ??_EUSART_is_tx_ready 0070                                      _TXSTAbits 019E  
             __size_of_Sensor_RawSample_Update 001C                             _Sensor_Acquisition 024D  
                         _Button_State_Pressed 0587                     _EUSART_DefaultErrorHandler 0000  
                          ?_Sensor_Acquisition 0025                                  __pidataBIGRAM 02A2  
                               __end_of___wmul 0CF9                     ??_MTOUCH_Button_Initialize 0076  
              ??_MTOUCH_Sensor_Scan_Initialize 0070                                   _EUSART_Write 0B96  
                Sensor_Acq_ExecutePacket@error 0024                             _Button_Tick_helper 00FE  
                               __end_of_memcpy 0154                         ?_OSCILLATOR_Initialize 0070  
                          MTOUCH_Button_Tick@i 0020                       __end_of_Sensor_setActive 0B88  
                  ??_Button_State_Initializing 0028                            start_initialization 07CB  
                      _MTOUCH_Service_Mainloop 00AB                __size_of_PIN_MANAGER_Initialize 0012  
                         __end_of_MTOUCH_Delay 0C48                             _MTOUCH_Button_Tick 0082  
                          ?_Button_Tick_helper 0076                                    __end_of_abs 0CA4  
                         ??_Sensor_Acquisition 0027                            ?_MTOUCH_Button_Tick 0070  
              Button_State_Initializing@button 0026                 ?_EUSART_SetOverrunErrorHandler 0070  
             __end_of_MTOUCH_Sensor_wasSampled 005B                           ??_Button_Tick_helper 0078  
                 __end_of_MTOUCH_Sensor_Enable 0FBB                     _EUSART_FramingErrorHandler 003B  
                        ?_Button_State_Pressed 0026                                       ??___wmul 0074  
                       _EUSART_SetErrorHandler 0B68                     ??_MTOUCH_Button_ServiceAll 007D  
                                  __pdataBANK0 004C                                  _MTOUCH_Random 0C5C  
                                     ??_memcpy 0076                   ??_Button_Baseline_Initialize 0022  
                         ??_MTOUCH_Button_Tick 007A                             _mtouch_button_init 0800  
                   Sensor_Sampled_Reset@sensor 0076                                    __pbssBIGRAM 20C6  
                                    ___latbits 0001                                  __pcstackBANK0 0020  
               MTOUCH_Button_ServiceAll@button 0033                            Sensor_Service@error 002E  
                __size_of_Sensor_Sampled_Reset 0007                     __size_of_EUSART_Initialize 0022  
                      _Button_Deviation_Update 05FE                      _Button_State_Initializing 04A5  
           __end_of_MTOUCH_Sensor_isCalibrated 0B59                     _MTOUCH_Sensor_isCalibrated 0B57  
                            _Sensor_setSampled 0B8F                    __size_of_DELAY_microseconds 0024  
                       _PIN_MANAGER_Initialize 0C23                               ??_Button_Service 002C  
                     ?_MTOUCH_Sensor_Calibrate 0070                             ?_Sensor_setSampled 0070  
           Button_Reading_Update_Helper@button 0020                     ??_MTOUCH_Sensor_Initialize 0020  
                               ?_MTOUCH_Random 0070                               ??_Sensor_Service 0029  
                   ??_Sensor_Acq_ExecutePacket 0020                            ??_Sensor_setSampled 0072  
                    ??_MTOUCH_Service_Mainloop 0034                    __size_of_Sensor_setInactive 0007  
               DELAY_microseconds@microseconds 0070                 Sensor_Acq_ExecutePacket@sensor 007C  
                                ??_MTOUCH_Tick 007E                      __end_of_Sensor_setSampled 0B96  
                               ___wmul@product 0074                                       _LATAbits 010C  
       EUSART_SetErrorHandler@interruptHandler 0070                             _currentScannSensor 0047  
                      _Sensor_RawSample_Update 0CBE                                      clear_ram0 0BAC  
                            _eusartRxLastError 0043                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0072                         ??_Button_State_Pressed 0028  
       __end_of_MTOUCH_Sensor_Sampled_ResetAll 0181        __size_of_MTOUCH_Sensor_Sampled_ResetAll 002D  
               _MTOUCH_Sensor_Sampled_ResetAll 0154                       ?_MTOUCH_Sensor_SampleAll 0070  
            _EUSART_DefaultOverrunErrorHandler 0000                       _MTOUCH_Sensor_wasSampled 0037  
                           _mtouch_time_toScan 004A                     __end_of_MTOUCH_CVD_ScanA_0 0D39  
                   __end_of_MTOUCH_CVD_ScanA_1 0D59                     __end_of_MTOUCH_CVD_ScanA_2 0D79  
                   __end_of_MTOUCH_CVD_ScanA_3 0D99                     __end_of_MTOUCH_CVD_ScanA_4 0DB9  
                   __end_of_MTOUCH_CVD_ScanB_0 0E79                     __end_of_MTOUCH_CVD_ScanA_5 0DD9  
                   __end_of_MTOUCH_CVD_ScanB_1 0E99                     __end_of_MTOUCH_CVD_ScanA_6 0DF9  
                   __end_of_MTOUCH_CVD_ScanB_2 0EB9                     __end_of_MTOUCH_CVD_ScanA_7 0E19  
                   __end_of_MTOUCH_CVD_ScanB_3 0ED9                     __end_of_MTOUCH_CVD_ScanA_8 0E39  
                   __end_of_MTOUCH_CVD_ScanB_4 0EF9                     __end_of_MTOUCH_CVD_ScanA_9 0D19  
                   __end_of_MTOUCH_CVD_ScanB_5 0F19                     __end_of_MTOUCH_CVD_ScanB_6 0F39  
                   __end_of_MTOUCH_CVD_ScanB_7 0F59                     __end_of_MTOUCH_CVD_ScanB_8 0F79  
                   __end_of_MTOUCH_CVD_ScanB_9 0E59                       ??_Button_Baseline_Update 0072  
                                   _ADCON0bits 009D                          __size_of_MTOUCH_Delay 0013  
                            ___wmul@multiplier 0070                     __end_of_MTOUCH_needReburst 0B5B  
                         _MTOUCH_Sensor_Enable 0F9A                       Button_Tick_helper@button 0076  
                    ??_Button_Deviation_Update 0072                          _Button_Reading_Update 0C72  
                     ??_Sensor_setScanFunction 0072                       ?_MTOUCH_Button_isPressed 0070  
                            ?_Sensor_isEnabled 0070                            __end_of_MTOUCH_Tick 0B5F  
                            _MTOUCH_Initialize 0BC4                __end_of_MTOUCH_Sensor_Calibrate 0B56  
                           ??_Sensor_isEnabled 0072                             ?_MTOUCH_Initialize 0070  
                                    memcpy@tmp 007B                                ??_MTOUCH_Random 0070  
                                 _MTOUCH_Delay 0C35                                   _sample_delay 0045  
                      ??_OSCILLATOR_Initialize 0070             __end_of_Button_Baseline_Initialize 01B0  
                   _Button_Baseline_Initialize 0181                       Sensor_Acquisition@sensor 0025  
                          _EUSART_ErrorHandler 0037                            ??_MTOUCH_Initialize 007E  
                     ?_Button_State_NotPressed 0026                             Button_Service@name 0030  
                            ?_Sensor_setActive 0070                                   _Sensor_scanA 0058  
                                 _Sensor_scanB 0056                             ??_Sensor_setActive 0072  
                        ?_MTOUCH_Sensor_Enable 0070                                       __ptext10 0B59  
                                     __ptext11 0B5B                                       __ptext20 0C8A  
                                     __ptext12 0082                                       __ptext21 0B88  
                                     __ptext13 00FE                                       __ptext30 0EF9  
                                     __ptext22 0B81                                       __ptext14 0CA4  
                                     __ptext31 0ED9                                       __ptext23 0BE1  
                                     __ptext15 0516                                       __ptext40 0DB9  
                                     __ptext32 0EB9                                       __ptext24 02FC  
                                     __ptext16 0B8F                                       __ptext41 0D99  
                                     __ptext33 0E99                                       __ptext25 0C48  
                                     __ptext17 0CBE                                       __ptext50 0B63  
                                     __ptext42 0D79                                       __ptext34 0E79  
                                     __ptext26 0361                                       __ptext18 0B56  
                                     __ptext51 0154                                       __ptext43 0D59  
                                     __ptext35 0E59                                       __ptext27 0F59  
                                     __ptext19 024D                                       __ptext60 0037  
                                     __ptext52 0BD1                                       __ptext44 0D39  
                                     __ptext36 0E39                                       __ptext28 0F39  
                                     __ptext61 0B57                                       __ptext53 0FDD  
                                     __ptext45 0D19                                       __ptext37 0E19  
                                     __ptext29 0F19                                       __ptext70 0C72  
                                     __ptext62 071B                                       __ptext54 0B7A  
                                     __ptext46 0CF9                                       __ptext38 0DF9  
                                     __ptext71 01F8                                       __ptext63 04A5  
                                     __ptext55 0F9A                                       __ptext47 0C5C  
                                     __ptext39 0DD9                                       __ptext72 005B  
                                     __ptext64 0587                                       __ptext56 0F79  
                                     __ptext48 0C35                                       __ptext73 05FE  
                                     __ptext65 01B0                                       __ptext57 0128  
                                     __ptext49 0BC4                                       __ptext74 00D4  
                                     __ptext66 0B55                                       __ptext58 0C11  
                                     __ptext75 0CDA                                       __ptext67 0B54  
                                     __ptext59 0435                                       __ptext76 0004  
                                     __ptext68 068B                                       __ptext77 0B96  
                                     __ptext69 0181                                       __ptext78 0013  
                    __end_of_MTOUCH_Initialize 0BD1                      ??_Sensor_RawSample_Update 0072  
          Sensor_Acq_ExecutePacket@ADCON0_temp 0021            Sensor_Acq_ExecutePacket@ADCON1_temp 0022  
                   __size_of_Sensor_setSampled 0007                                  __size_of_main 006B  
                  __size_of_EUSART_is_tx_ready 000F                __end_of_MTOUCH_Sensor_SampleAll 0CBE  
                      ?_EUSART_SetErrorHandler 0070  EUSART_SetOverrunErrorHandler@interruptHandler 0070  
                 Sensor_setScanFunction@sensor 0070                       ??_Sensor_Acq_ExecuteScan 0076  
           __size_of_Button_State_Initializing 0071              Sensor_Acq_ExecutePacket@GIE_state 0023  
        __end_of_EUSART_SetFramingErrorHandler 0B74         __size_of_EUSART_SetFramingErrorHandler 0006  
                _EUSART_SetFramingErrorHandler 0B6E                __size_of_Button_Baseline_Update 0090  
                 ?_MTOUCH_Button_InitializeAll 0070                   ?_MTOUCH_Sensor_InitializeAll 0070  
                                _mtouch_button 20C6                                     _INTCONbits 000B  
                                _mtouch_sensor 206C                                       memcpy@d1 0070  
                                     memcpy@s1 0072                __end_of_MTOUCH_Button_isPressed 00FE  
                                  _MTOUCH_Tick 0B5B                         ?_Button_Reading_Update 0024  
             Button_Deviation_Update@deviation 0020                        __size_of_WDT_Initialize 0004  
                 MTOUCH_Button_Initialize@name 007A              __size_of_MTOUCH_Button_Initialize 0048  
                    ?_MTOUCH_Button_Initialize 0070                    __size_of_Sensor_Acquisition 0055  
              __size_of_Sensor_setScanFunction 0014                        ?_PIN_MANAGER_Initialize 0070  
               __end_of_EUSART_SetErrorHandler 0B6E                    ?_MTOUCH_Sensor_isCalibrated 0070  
                            MTOUCH_Random@seed 004B                    __size_of_Button_Tick_helper 002A  
              __end_of_Button_State_NotPressed 07CB  EUSART_SetFramingErrorHandler@interruptHandler 0070  
                 __end_of_Sensor_Sampled_Reset 0B81                    __size_of_MTOUCH_Button_Tick 0029  
                                __pstringtext1 0800                  ??_MTOUCH_Button_InitializeAll 007D  
                     ??_Button_DefaultCallback 0071                  ??_MTOUCH_Sensor_InitializeAll 007C  
             __size_of_MTOUCH_Sensor_Calibrate 0001                         ??_MTOUCH_Sensor_Enable 0076  
                     ??_Sensor_DefaultCallback 0071           __end_of_Button_Reading_Update_Helper 024D  
        __size_of_Button_Reading_Update_Helper 0055                   _Button_Reading_Update_Helper 01F8  
            __size_of_MTOUCH_Button_ServiceAll 0012                      ?_MTOUCH_Button_ServiceAll 0070  
                Button_State_NotPressed@button 0026                             EUSART_Write@txData 0070  
                   __size_of_MTOUCH_Initialize 000D                 __end_of_PIN_MANAGER_Initialize 0C35  
                       _Button_Baseline_Update 068B                     __end_of_DELAY_microseconds 0037  
                  MTOUCH_Button_isPressed@name 007A                     ??_MTOUCH_Sensor_wasSampled 0076  
