

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue May 12 19:47:02 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBIGRAM,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,inline,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,inline,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text29,local,class=CODE,merge=1,inline,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,inline,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2
    52                           	psect	text38,local,class=CODE,merge=1,delta=2
    53                           	psect	text39,local,class=CODE,merge=1,delta=2
    54                           	psect	text40,local,class=CODE,merge=1,delta=2
    55                           	psect	text41,local,class=CODE,merge=1,delta=2
    56                           	psect	text42,local,class=CODE,merge=1,delta=2
    57                           	psect	text43,local,class=CODE,merge=1,delta=2
    58                           	psect	text44,local,class=CODE,merge=1,delta=2
    59                           	psect	text45,local,class=CODE,merge=1,delta=2
    60                           	psect	text46,local,class=CODE,merge=1,delta=2
    61                           	psect	text47,local,class=CODE,merge=1,delta=2
    62                           	psect	text48,local,class=CODE,merge=1,delta=2
    63                           	psect	text49,local,class=CODE,merge=1,delta=2
    64                           	psect	text50,local,class=CODE,merge=1,delta=2
    65                           	psect	text51,local,class=CODE,merge=1,delta=2
    66                           	psect	text52,local,class=CODE,merge=1,delta=2
    67                           	psect	text53,local,class=CODE,merge=1,delta=2
    68                           	psect	text54,local,class=CODE,merge=1,delta=2
    69                           	psect	text55,local,class=CODE,merge=1,delta=2
    70                           	psect	text56,local,class=CODE,merge=1,delta=2
    71                           	psect	text57,local,class=CODE,merge=1,delta=2
    72                           	psect	text58,local,class=CODE,merge=1,delta=2
    73                           	psect	text59,local,class=CODE,merge=1,delta=2
    74                           	psect	text60,local,class=CODE,merge=1,delta=2
    75                           	psect	text61,local,class=CODE,merge=1,delta=2
    76                           	psect	text62,local,class=CODE,merge=1,delta=2
    77                           	psect	text63,local,class=CODE,merge=1,delta=2
    78                           	psect	text64,local,class=CODE,merge=1,delta=2
    79                           	psect	text65,local,class=CODE,merge=1,delta=2
    80                           	psect	text66,local,class=CODE,merge=1,delta=2
    81                           	psect	text67,local,class=CODE,merge=1,delta=2
    82                           	psect	text68,local,class=CODE,merge=1,delta=2
    83                           	psect	text69,local,class=CODE,merge=1,delta=2
    84                           	psect	text70,local,class=CODE,merge=1,delta=2
    85                           	psect	text71,local,class=CODE,merge=1,delta=2
    86                           	psect	text72,local,class=CODE,merge=1,delta=2
    87                           	psect	text73,local,class=CODE,merge=1,delta=2
    88                           	psect	text74,local,class=CODE,merge=1,delta=2
    89                           	psect	text75,local,class=CODE,merge=1,delta=2,group=1
    90                           	psect	text76,local,class=CODE,merge=1,delta=2
    91                           	psect	text77,local,class=CODE,merge=1,delta=2
    92                           	psect	text78,local,class=CODE,merge=1,delta=2
    93                           	dabs	1,0x220,48
    94                           	dabs	1,0x1A0,80
    95                           	dabs	1,0x146,42
    96                           	dabs	1,0x120,38
    97                           	dabs	1,0xBC,52
    98                           	dabs	1,0x20C6,0,_mtouch_button
    99                           	dabs	1,0x206C,0,_mtouch_sensor
   100                           	dabs	1,0x7E,2
   101  0000                     
   102                           ; Version 2.10
   103                           ; Generated 31/07/2019 GMT
   104                           ; 
   105                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   106                           ; All rights reserved.
   107                           ; 
   108                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   109                           ; 
   110                           ; Redistribution and use in source and binary forms, with or without modification, are
   111                           ; permitted provided that the following conditions are met:
   112                           ; 
   113                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   114                           ;        conditions and the following disclaimer.
   115                           ; 
   116                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   117                           ;        of conditions and the following disclaimer in the documentation and/or other
   118                           ;        materials provided with the distribution.
   119                           ; 
   120                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   121                           ;        software without specific prior written permission.
   122                           ; 
   123                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   124                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   125                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   126                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   127                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   128                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   129                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   130                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   131                           ; 
   132                           ; 
   133                           ; Code-generator required, PIC16F1827 Definitions
   134                           ; 
   135                           ; SFR Addresses
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  008C                     	;# 
   166  008D                     	;# 
   167  0091                     	;# 
   168  0092                     	;# 
   169  0093                     	;# 
   170  0094                     	;# 
   171  0095                     	;# 
   172  0096                     	;# 
   173  0097                     	;# 
   174  0098                     	;# 
   175  0099                     	;# 
   176  009A                     	;# 
   177  009B                     	;# 
   178  009B                     	;# 
   179  009C                     	;# 
   180  009D                     	;# 
   181  009E                     	;# 
   182  010C                     	;# 
   183  010D                     	;# 
   184  0111                     	;# 
   185  0112                     	;# 
   186  0113                     	;# 
   187  0114                     	;# 
   188  0115                     	;# 
   189  0116                     	;# 
   190  0117                     	;# 
   191  0118                     	;# 
   192  0119                     	;# 
   193  011A                     	;# 
   194  011B                     	;# 
   195  011D                     	;# 
   196  011E                     	;# 
   197  018C                     	;# 
   198  018D                     	;# 
   199  0191                     	;# 
   200  0191                     	;# 
   201  0192                     	;# 
   202  0193                     	;# 
   203  0193                     	;# 
   204  0193                     	;# 
   205  0194                     	;# 
   206  0195                     	;# 
   207  0196                     	;# 
   208  0199                     	;# 
   209  019A                     	;# 
   210  019B                     	;# 
   211  019B                     	;# 
   212  019B                     	;# 
   213  019B                     	;# 
   214  019C                     	;# 
   215  019C                     	;# 
   216  019D                     	;# 
   217  019E                     	;# 
   218  019F                     	;# 
   219  020C                     	;# 
   220  020D                     	;# 
   221  0211                     	;# 
   222  0211                     	;# 
   223  0212                     	;# 
   224  0212                     	;# 
   225  0213                     	;# 
   226  0213                     	;# 
   227  0214                     	;# 
   228  0214                     	;# 
   229  0215                     	;# 
   230  0215                     	;# 
   231  0215                     	;# 
   232  0216                     	;# 
   233  0216                     	;# 
   234  0217                     	;# 
   235  0217                     	;# 
   236  0219                     	;# 
   237  021A                     	;# 
   238  021B                     	;# 
   239  021C                     	;# 
   240  021D                     	;# 
   241  021E                     	;# 
   242  021F                     	;# 
   243  0291                     	;# 
   244  0291                     	;# 
   245  0292                     	;# 
   246  0293                     	;# 
   247  0294                     	;# 
   248  0295                     	;# 
   249  0295                     	;# 
   250  0296                     	;# 
   251  0298                     	;# 
   252  0298                     	;# 
   253  0299                     	;# 
   254  029A                     	;# 
   255  029B                     	;# 
   256  029C                     	;# 
   257  029C                     	;# 
   258  029D                     	;# 
   259  029E                     	;# 
   260  029E                     	;# 
   261  0311                     	;# 
   262  0311                     	;# 
   263  0312                     	;# 
   264  0313                     	;# 
   265  0318                     	;# 
   266  0318                     	;# 
   267  0319                     	;# 
   268  031A                     	;# 
   269  0394                     	;# 
   270  0395                     	;# 
   271  0396                     	;# 
   272  039A                     	;# 
   273  039C                     	;# 
   274  039D                     	;# 
   275  039E                     	;# 
   276  039F                     	;# 
   277  0415                     	;# 
   278  0416                     	;# 
   279  0417                     	;# 
   280  041C                     	;# 
   281  041D                     	;# 
   282  041E                     	;# 
   283  0FE4                     	;# 
   284  0FE5                     	;# 
   285  0FE6                     	;# 
   286  0FE7                     	;# 
   287  0FE8                     	;# 
   288  0FE9                     	;# 
   289  0FEA                     	;# 
   290  0FEB                     	;# 
   291  0FED                     	;# 
   292  0FEE                     	;# 
   293  0FEF                     	;# 
   294  0000                     	;# 
   295  0001                     	;# 
   296  0002                     	;# 
   297  0003                     	;# 
   298  0004                     	;# 
   299  0005                     	;# 
   300  0006                     	;# 
   301  0007                     	;# 
   302  0008                     	;# 
   303  0009                     	;# 
   304  000A                     	;# 
   305  000B                     	;# 
   306  000C                     	;# 
   307  000D                     	;# 
   308  0011                     	;# 
   309  0012                     	;# 
   310  0013                     	;# 
   311  0014                     	;# 
   312  0015                     	;# 
   313  0016                     	;# 
   314  0016                     	;# 
   315  0017                     	;# 
   316  0018                     	;# 
   317  0019                     	;# 
   318  001A                     	;# 
   319  001B                     	;# 
   320  001C                     	;# 
   321  001E                     	;# 
   322  001F                     	;# 
   323  008C                     	;# 
   324  008D                     	;# 
   325  0091                     	;# 
   326  0092                     	;# 
   327  0093                     	;# 
   328  0094                     	;# 
   329  0095                     	;# 
   330  0096                     	;# 
   331  0097                     	;# 
   332  0098                     	;# 
   333  0099                     	;# 
   334  009A                     	;# 
   335  009B                     	;# 
   336  009B                     	;# 
   337  009C                     	;# 
   338  009D                     	;# 
   339  009E                     	;# 
   340  010C                     	;# 
   341  010D                     	;# 
   342  0111                     	;# 
   343  0112                     	;# 
   344  0113                     	;# 
   345  0114                     	;# 
   346  0115                     	;# 
   347  0116                     	;# 
   348  0117                     	;# 
   349  0118                     	;# 
   350  0119                     	;# 
   351  011A                     	;# 
   352  011B                     	;# 
   353  011D                     	;# 
   354  011E                     	;# 
   355  018C                     	;# 
   356  018D                     	;# 
   357  0191                     	;# 
   358  0191                     	;# 
   359  0192                     	;# 
   360  0193                     	;# 
   361  0193                     	;# 
   362  0193                     	;# 
   363  0194                     	;# 
   364  0195                     	;# 
   365  0196                     	;# 
   366  0199                     	;# 
   367  019A                     	;# 
   368  019B                     	;# 
   369  019B                     	;# 
   370  019B                     	;# 
   371  019B                     	;# 
   372  019C                     	;# 
   373  019C                     	;# 
   374  019D                     	;# 
   375  019E                     	;# 
   376  019F                     	;# 
   377  020C                     	;# 
   378  020D                     	;# 
   379  0211                     	;# 
   380  0211                     	;# 
   381  0212                     	;# 
   382  0212                     	;# 
   383  0213                     	;# 
   384  0213                     	;# 
   385  0214                     	;# 
   386  0214                     	;# 
   387  0215                     	;# 
   388  0215                     	;# 
   389  0215                     	;# 
   390  0216                     	;# 
   391  0216                     	;# 
   392  0217                     	;# 
   393  0217                     	;# 
   394  0219                     	;# 
   395  021A                     	;# 
   396  021B                     	;# 
   397  021C                     	;# 
   398  021D                     	;# 
   399  021E                     	;# 
   400  021F                     	;# 
   401  0291                     	;# 
   402  0291                     	;# 
   403  0292                     	;# 
   404  0293                     	;# 
   405  0294                     	;# 
   406  0295                     	;# 
   407  0295                     	;# 
   408  0296                     	;# 
   409  0298                     	;# 
   410  0298                     	;# 
   411  0299                     	;# 
   412  029A                     	;# 
   413  029B                     	;# 
   414  029C                     	;# 
   415  029C                     	;# 
   416  029D                     	;# 
   417  029E                     	;# 
   418  029E                     	;# 
   419  0311                     	;# 
   420  0311                     	;# 
   421  0312                     	;# 
   422  0313                     	;# 
   423  0318                     	;# 
   424  0318                     	;# 
   425  0319                     	;# 
   426  031A                     	;# 
   427  0394                     	;# 
   428  0395                     	;# 
   429  0396                     	;# 
   430  039A                     	;# 
   431  039C                     	;# 
   432  039D                     	;# 
   433  039E                     	;# 
   434  039F                     	;# 
   435  0415                     	;# 
   436  0416                     	;# 
   437  0417                     	;# 
   438  041C                     	;# 
   439  041D                     	;# 
   440  041E                     	;# 
   441  0FE4                     	;# 
   442  0FE5                     	;# 
   443  0FE6                     	;# 
   444  0FE7                     	;# 
   445  0FE8                     	;# 
   446  0FE9                     	;# 
   447  0FEA                     	;# 
   448  0FEB                     	;# 
   449  0FED                     	;# 
   450  0FEE                     	;# 
   451  0FEF                     	;# 
   452  0000                     	;# 
   453  0001                     	;# 
   454  0002                     	;# 
   455  0003                     	;# 
   456  0004                     	;# 
   457  0005                     	;# 
   458  0006                     	;# 
   459  0007                     	;# 
   460  0008                     	;# 
   461  0009                     	;# 
   462  000A                     	;# 
   463  000B                     	;# 
   464  000C                     	;# 
   465  000D                     	;# 
   466  0011                     	;# 
   467  0012                     	;# 
   468  0013                     	;# 
   469  0014                     	;# 
   470  0015                     	;# 
   471  0016                     	;# 
   472  0016                     	;# 
   473  0017                     	;# 
   474  0018                     	;# 
   475  0019                     	;# 
   476  001A                     	;# 
   477  001B                     	;# 
   478  001C                     	;# 
   479  001E                     	;# 
   480  001F                     	;# 
   481  008C                     	;# 
   482  008D                     	;# 
   483  0091                     	;# 
   484  0092                     	;# 
   485  0093                     	;# 
   486  0094                     	;# 
   487  0095                     	;# 
   488  0096                     	;# 
   489  0097                     	;# 
   490  0098                     	;# 
   491  0099                     	;# 
   492  009A                     	;# 
   493  009B                     	;# 
   494  009B                     	;# 
   495  009C                     	;# 
   496  009D                     	;# 
   497  009E                     	;# 
   498  010C                     	;# 
   499  010D                     	;# 
   500  0111                     	;# 
   501  0112                     	;# 
   502  0113                     	;# 
   503  0114                     	;# 
   504  0115                     	;# 
   505  0116                     	;# 
   506  0117                     	;# 
   507  0118                     	;# 
   508  0119                     	;# 
   509  011A                     	;# 
   510  011B                     	;# 
   511  011D                     	;# 
   512  011E                     	;# 
   513  018C                     	;# 
   514  018D                     	;# 
   515  0191                     	;# 
   516  0191                     	;# 
   517  0192                     	;# 
   518  0193                     	;# 
   519  0193                     	;# 
   520  0193                     	;# 
   521  0194                     	;# 
   522  0195                     	;# 
   523  0196                     	;# 
   524  0199                     	;# 
   525  019A                     	;# 
   526  019B                     	;# 
   527  019B                     	;# 
   528  019B                     	;# 
   529  019B                     	;# 
   530  019C                     	;# 
   531  019C                     	;# 
   532  019D                     	;# 
   533  019E                     	;# 
   534  019F                     	;# 
   535  020C                     	;# 
   536  020D                     	;# 
   537  0211                     	;# 
   538  0211                     	;# 
   539  0212                     	;# 
   540  0212                     	;# 
   541  0213                     	;# 
   542  0213                     	;# 
   543  0214                     	;# 
   544  0214                     	;# 
   545  0215                     	;# 
   546  0215                     	;# 
   547  0215                     	;# 
   548  0216                     	;# 
   549  0216                     	;# 
   550  0217                     	;# 
   551  0217                     	;# 
   552  0219                     	;# 
   553  021A                     	;# 
   554  021B                     	;# 
   555  021C                     	;# 
   556  021D                     	;# 
   557  021E                     	;# 
   558  021F                     	;# 
   559  0291                     	;# 
   560  0291                     	;# 
   561  0292                     	;# 
   562  0293                     	;# 
   563  0294                     	;# 
   564  0295                     	;# 
   565  0295                     	;# 
   566  0296                     	;# 
   567  0298                     	;# 
   568  0298                     	;# 
   569  0299                     	;# 
   570  029A                     	;# 
   571  029B                     	;# 
   572  029C                     	;# 
   573  029C                     	;# 
   574  029D                     	;# 
   575  029E                     	;# 
   576  029E                     	;# 
   577  0311                     	;# 
   578  0311                     	;# 
   579  0312                     	;# 
   580  0313                     	;# 
   581  0318                     	;# 
   582  0318                     	;# 
   583  0319                     	;# 
   584  031A                     	;# 
   585  0394                     	;# 
   586  0395                     	;# 
   587  0396                     	;# 
   588  039A                     	;# 
   589  039C                     	;# 
   590  039D                     	;# 
   591  039E                     	;# 
   592  039F                     	;# 
   593  0415                     	;# 
   594  0416                     	;# 
   595  0417                     	;# 
   596  041C                     	;# 
   597  041D                     	;# 
   598  041E                     	;# 
   599  0FE4                     	;# 
   600  0FE5                     	;# 
   601  0FE6                     	;# 
   602  0FE7                     	;# 
   603  0FE8                     	;# 
   604  0FE9                     	;# 
   605  0FEA                     	;# 
   606  0FEB                     	;# 
   607  0FED                     	;# 
   608  0FEE                     	;# 
   609  0FEF                     	;# 
   610  0000                     	;# 
   611  0001                     	;# 
   612  0002                     	;# 
   613  0003                     	;# 
   614  0004                     	;# 
   615  0005                     	;# 
   616  0006                     	;# 
   617  0007                     	;# 
   618  0008                     	;# 
   619  0009                     	;# 
   620  000A                     	;# 
   621  000B                     	;# 
   622  000C                     	;# 
   623  000D                     	;# 
   624  0011                     	;# 
   625  0012                     	;# 
   626  0013                     	;# 
   627  0014                     	;# 
   628  0015                     	;# 
   629  0016                     	;# 
   630  0016                     	;# 
   631  0017                     	;# 
   632  0018                     	;# 
   633  0019                     	;# 
   634  001A                     	;# 
   635  001B                     	;# 
   636  001C                     	;# 
   637  001E                     	;# 
   638  001F                     	;# 
   639  008C                     	;# 
   640  008D                     	;# 
   641  0091                     	;# 
   642  0092                     	;# 
   643  0093                     	;# 
   644  0094                     	;# 
   645  0095                     	;# 
   646  0096                     	;# 
   647  0097                     	;# 
   648  0098                     	;# 
   649  0099                     	;# 
   650  009A                     	;# 
   651  009B                     	;# 
   652  009B                     	;# 
   653  009C                     	;# 
   654  009D                     	;# 
   655  009E                     	;# 
   656  010C                     	;# 
   657  010D                     	;# 
   658  0111                     	;# 
   659  0112                     	;# 
   660  0113                     	;# 
   661  0114                     	;# 
   662  0115                     	;# 
   663  0116                     	;# 
   664  0117                     	;# 
   665  0118                     	;# 
   666  0119                     	;# 
   667  011A                     	;# 
   668  011B                     	;# 
   669  011D                     	;# 
   670  011E                     	;# 
   671  018C                     	;# 
   672  018D                     	;# 
   673  0191                     	;# 
   674  0191                     	;# 
   675  0192                     	;# 
   676  0193                     	;# 
   677  0193                     	;# 
   678  0193                     	;# 
   679  0194                     	;# 
   680  0195                     	;# 
   681  0196                     	;# 
   682  0199                     	;# 
   683  019A                     	;# 
   684  019B                     	;# 
   685  019B                     	;# 
   686  019B                     	;# 
   687  019B                     	;# 
   688  019C                     	;# 
   689  019C                     	;# 
   690  019D                     	;# 
   691  019E                     	;# 
   692  019F                     	;# 
   693  020C                     	;# 
   694  020D                     	;# 
   695  0211                     	;# 
   696  0211                     	;# 
   697  0212                     	;# 
   698  0212                     	;# 
   699  0213                     	;# 
   700  0213                     	;# 
   701  0214                     	;# 
   702  0214                     	;# 
   703  0215                     	;# 
   704  0215                     	;# 
   705  0215                     	;# 
   706  0216                     	;# 
   707  0216                     	;# 
   708  0217                     	;# 
   709  0217                     	;# 
   710  0219                     	;# 
   711  021A                     	;# 
   712  021B                     	;# 
   713  021C                     	;# 
   714  021D                     	;# 
   715  021E                     	;# 
   716  021F                     	;# 
   717  0291                     	;# 
   718  0291                     	;# 
   719  0292                     	;# 
   720  0293                     	;# 
   721  0294                     	;# 
   722  0295                     	;# 
   723  0295                     	;# 
   724  0296                     	;# 
   725  0298                     	;# 
   726  0298                     	;# 
   727  0299                     	;# 
   728  029A                     	;# 
   729  029B                     	;# 
   730  029C                     	;# 
   731  029C                     	;# 
   732  029D                     	;# 
   733  029E                     	;# 
   734  029E                     	;# 
   735  0311                     	;# 
   736  0311                     	;# 
   737  0312                     	;# 
   738  0313                     	;# 
   739  0318                     	;# 
   740  0318                     	;# 
   741  0319                     	;# 
   742  031A                     	;# 
   743  0394                     	;# 
   744  0395                     	;# 
   745  0396                     	;# 
   746  039A                     	;# 
   747  039C                     	;# 
   748  039D                     	;# 
   749  039E                     	;# 
   750  039F                     	;# 
   751  0415                     	;# 
   752  0416                     	;# 
   753  0417                     	;# 
   754  041C                     	;# 
   755  041D                     	;# 
   756  041E                     	;# 
   757  0FE4                     	;# 
   758  0FE5                     	;# 
   759  0FE6                     	;# 
   760  0FE7                     	;# 
   761  0FE8                     	;# 
   762  0FE9                     	;# 
   763  0FEA                     	;# 
   764  0FEB                     	;# 
   765  0FED                     	;# 
   766  0FEE                     	;# 
   767  0FEF                     	;# 
   768  0000                     	;# 
   769  0001                     	;# 
   770  0002                     	;# 
   771  0003                     	;# 
   772  0004                     	;# 
   773  0005                     	;# 
   774  0006                     	;# 
   775  0007                     	;# 
   776  0008                     	;# 
   777  0009                     	;# 
   778  000A                     	;# 
   779  000B                     	;# 
   780  000C                     	;# 
   781  000D                     	;# 
   782  0011                     	;# 
   783  0012                     	;# 
   784  0013                     	;# 
   785  0014                     	;# 
   786  0015                     	;# 
   787  0016                     	;# 
   788  0016                     	;# 
   789  0017                     	;# 
   790  0018                     	;# 
   791  0019                     	;# 
   792  001A                     	;# 
   793  001B                     	;# 
   794  001C                     	;# 
   795  001E                     	;# 
   796  001F                     	;# 
   797  008C                     	;# 
   798  008D                     	;# 
   799  0091                     	;# 
   800  0092                     	;# 
   801  0093                     	;# 
   802  0094                     	;# 
   803  0095                     	;# 
   804  0096                     	;# 
   805  0097                     	;# 
   806  0098                     	;# 
   807  0099                     	;# 
   808  009A                     	;# 
   809  009B                     	;# 
   810  009B                     	;# 
   811  009C                     	;# 
   812  009D                     	;# 
   813  009E                     	;# 
   814  010C                     	;# 
   815  010D                     	;# 
   816  0111                     	;# 
   817  0112                     	;# 
   818  0113                     	;# 
   819  0114                     	;# 
   820  0115                     	;# 
   821  0116                     	;# 
   822  0117                     	;# 
   823  0118                     	;# 
   824  0119                     	;# 
   825  011A                     	;# 
   826  011B                     	;# 
   827  011D                     	;# 
   828  011E                     	;# 
   829  018C                     	;# 
   830  018D                     	;# 
   831  0191                     	;# 
   832  0191                     	;# 
   833  0192                     	;# 
   834  0193                     	;# 
   835  0193                     	;# 
   836  0193                     	;# 
   837  0194                     	;# 
   838  0195                     	;# 
   839  0196                     	;# 
   840  0199                     	;# 
   841  019A                     	;# 
   842  019B                     	;# 
   843  019B                     	;# 
   844  019B                     	;# 
   845  019B                     	;# 
   846  019C                     	;# 
   847  019C                     	;# 
   848  019D                     	;# 
   849  019E                     	;# 
   850  019F                     	;# 
   851  020C                     	;# 
   852  020D                     	;# 
   853  0211                     	;# 
   854  0211                     	;# 
   855  0212                     	;# 
   856  0212                     	;# 
   857  0213                     	;# 
   858  0213                     	;# 
   859  0214                     	;# 
   860  0214                     	;# 
   861  0215                     	;# 
   862  0215                     	;# 
   863  0215                     	;# 
   864  0216                     	;# 
   865  0216                     	;# 
   866  0217                     	;# 
   867  0217                     	;# 
   868  0219                     	;# 
   869  021A                     	;# 
   870  021B                     	;# 
   871  021C                     	;# 
   872  021D                     	;# 
   873  021E                     	;# 
   874  021F                     	;# 
   875  0291                     	;# 
   876  0291                     	;# 
   877  0292                     	;# 
   878  0293                     	;# 
   879  0294                     	;# 
   880  0295                     	;# 
   881  0295                     	;# 
   882  0296                     	;# 
   883  0298                     	;# 
   884  0298                     	;# 
   885  0299                     	;# 
   886  029A                     	;# 
   887  029B                     	;# 
   888  029C                     	;# 
   889  029C                     	;# 
   890  029D                     	;# 
   891  029E                     	;# 
   892  029E                     	;# 
   893  0311                     	;# 
   894  0311                     	;# 
   895  0312                     	;# 
   896  0313                     	;# 
   897  0318                     	;# 
   898  0318                     	;# 
   899  0319                     	;# 
   900  031A                     	;# 
   901  0394                     	;# 
   902  0395                     	;# 
   903  0396                     	;# 
   904  039A                     	;# 
   905  039C                     	;# 
   906  039D                     	;# 
   907  039E                     	;# 
   908  039F                     	;# 
   909  0415                     	;# 
   910  0416                     	;# 
   911  0417                     	;# 
   912  041C                     	;# 
   913  041D                     	;# 
   914  041E                     	;# 
   915  0FE4                     	;# 
   916  0FE5                     	;# 
   917  0FE6                     	;# 
   918  0FE7                     	;# 
   919  0FE8                     	;# 
   920  0FE9                     	;# 
   921  0FEA                     	;# 
   922  0FEB                     	;# 
   923  0FED                     	;# 
   924  0FEE                     	;# 
   925  0FEF                     	;# 
   926  0000                     	;# 
   927  0001                     	;# 
   928  0002                     	;# 
   929  0003                     	;# 
   930  0004                     	;# 
   931  0005                     	;# 
   932  0006                     	;# 
   933  0007                     	;# 
   934  0008                     	;# 
   935  0009                     	;# 
   936  000A                     	;# 
   937  000B                     	;# 
   938  000C                     	;# 
   939  000D                     	;# 
   940  0011                     	;# 
   941  0012                     	;# 
   942  0013                     	;# 
   943  0014                     	;# 
   944  0015                     	;# 
   945  0016                     	;# 
   946  0016                     	;# 
   947  0017                     	;# 
   948  0018                     	;# 
   949  0019                     	;# 
   950  001A                     	;# 
   951  001B                     	;# 
   952  001C                     	;# 
   953  001E                     	;# 
   954  001F                     	;# 
   955  008C                     	;# 
   956  008D                     	;# 
   957  0091                     	;# 
   958  0092                     	;# 
   959  0093                     	;# 
   960  0094                     	;# 
   961  0095                     	;# 
   962  0096                     	;# 
   963  0097                     	;# 
   964  0098                     	;# 
   965  0099                     	;# 
   966  009A                     	;# 
   967  009B                     	;# 
   968  009B                     	;# 
   969  009C                     	;# 
   970  009D                     	;# 
   971  009E                     	;# 
   972  010C                     	;# 
   973  010D                     	;# 
   974  0111                     	;# 
   975  0112                     	;# 
   976  0113                     	;# 
   977  0114                     	;# 
   978  0115                     	;# 
   979  0116                     	;# 
   980  0117                     	;# 
   981  0118                     	;# 
   982  0119                     	;# 
   983  011A                     	;# 
   984  011B                     	;# 
   985  011D                     	;# 
   986  011E                     	;# 
   987  018C                     	;# 
   988  018D                     	;# 
   989  0191                     	;# 
   990  0191                     	;# 
   991  0192                     	;# 
   992  0193                     	;# 
   993  0193                     	;# 
   994  0193                     	;# 
   995  0194                     	;# 
   996  0195                     	;# 
   997  0196                     	;# 
   998  0199                     	;# 
   999  019A                     	;# 
  1000  019B                     	;# 
  1001  019B                     	;# 
  1002  019B                     	;# 
  1003  019B                     	;# 
  1004  019C                     	;# 
  1005  019C                     	;# 
  1006  019D                     	;# 
  1007  019E                     	;# 
  1008  019F                     	;# 
  1009  020C                     	;# 
  1010  020D                     	;# 
  1011  0211                     	;# 
  1012  0211                     	;# 
  1013  0212                     	;# 
  1014  0212                     	;# 
  1015  0213                     	;# 
  1016  0213                     	;# 
  1017  0214                     	;# 
  1018  0214                     	;# 
  1019  0215                     	;# 
  1020  0215                     	;# 
  1021  0215                     	;# 
  1022  0216                     	;# 
  1023  0216                     	;# 
  1024  0217                     	;# 
  1025  0217                     	;# 
  1026  0219                     	;# 
  1027  021A                     	;# 
  1028  021B                     	;# 
  1029  021C                     	;# 
  1030  021D                     	;# 
  1031  021E                     	;# 
  1032  021F                     	;# 
  1033  0291                     	;# 
  1034  0291                     	;# 
  1035  0292                     	;# 
  1036  0293                     	;# 
  1037  0294                     	;# 
  1038  0295                     	;# 
  1039  0295                     	;# 
  1040  0296                     	;# 
  1041  0298                     	;# 
  1042  0298                     	;# 
  1043  0299                     	;# 
  1044  029A                     	;# 
  1045  029B                     	;# 
  1046  029C                     	;# 
  1047  029C                     	;# 
  1048  029D                     	;# 
  1049  029E                     	;# 
  1050  029E                     	;# 
  1051  0311                     	;# 
  1052  0311                     	;# 
  1053  0312                     	;# 
  1054  0313                     	;# 
  1055  0318                     	;# 
  1056  0318                     	;# 
  1057  0319                     	;# 
  1058  031A                     	;# 
  1059  0394                     	;# 
  1060  0395                     	;# 
  1061  0396                     	;# 
  1062  039A                     	;# 
  1063  039C                     	;# 
  1064  039D                     	;# 
  1065  039E                     	;# 
  1066  039F                     	;# 
  1067  0415                     	;# 
  1068  0416                     	;# 
  1069  0417                     	;# 
  1070  041C                     	;# 
  1071  041D                     	;# 
  1072  041E                     	;# 
  1073  0FE4                     	;# 
  1074  0FE5                     	;# 
  1075  0FE6                     	;# 
  1076  0FE7                     	;# 
  1077  0FE8                     	;# 
  1078  0FE9                     	;# 
  1079  0FEA                     	;# 
  1080  0FEB                     	;# 
  1081  0FED                     	;# 
  1082  0FEE                     	;# 
  1083  0FEF                     	;# 
  1084  0000                     	;# 
  1085  0001                     	;# 
  1086  0002                     	;# 
  1087  0003                     	;# 
  1088  0004                     	;# 
  1089  0005                     	;# 
  1090  0006                     	;# 
  1091  0007                     	;# 
  1092  0008                     	;# 
  1093  0009                     	;# 
  1094  000A                     	;# 
  1095  000B                     	;# 
  1096  000C                     	;# 
  1097  000D                     	;# 
  1098  0011                     	;# 
  1099  0012                     	;# 
  1100  0013                     	;# 
  1101  0014                     	;# 
  1102  0015                     	;# 
  1103  0016                     	;# 
  1104  0016                     	;# 
  1105  0017                     	;# 
  1106  0018                     	;# 
  1107  0019                     	;# 
  1108  001A                     	;# 
  1109  001B                     	;# 
  1110  001C                     	;# 
  1111  001E                     	;# 
  1112  001F                     	;# 
  1113  008C                     	;# 
  1114  008D                     	;# 
  1115  0091                     	;# 
  1116  0092                     	;# 
  1117  0093                     	;# 
  1118  0094                     	;# 
  1119  0095                     	;# 
  1120  0096                     	;# 
  1121  0097                     	;# 
  1122  0098                     	;# 
  1123  0099                     	;# 
  1124  009A                     	;# 
  1125  009B                     	;# 
  1126  009B                     	;# 
  1127  009C                     	;# 
  1128  009D                     	;# 
  1129  009E                     	;# 
  1130  010C                     	;# 
  1131  010D                     	;# 
  1132  0111                     	;# 
  1133  0112                     	;# 
  1134  0113                     	;# 
  1135  0114                     	;# 
  1136  0115                     	;# 
  1137  0116                     	;# 
  1138  0117                     	;# 
  1139  0118                     	;# 
  1140  0119                     	;# 
  1141  011A                     	;# 
  1142  011B                     	;# 
  1143  011D                     	;# 
  1144  011E                     	;# 
  1145  018C                     	;# 
  1146  018D                     	;# 
  1147  0191                     	;# 
  1148  0191                     	;# 
  1149  0192                     	;# 
  1150  0193                     	;# 
  1151  0193                     	;# 
  1152  0193                     	;# 
  1153  0194                     	;# 
  1154  0195                     	;# 
  1155  0196                     	;# 
  1156  0199                     	;# 
  1157  019A                     	;# 
  1158  019B                     	;# 
  1159  019B                     	;# 
  1160  019B                     	;# 
  1161  019B                     	;# 
  1162  019C                     	;# 
  1163  019C                     	;# 
  1164  019D                     	;# 
  1165  019E                     	;# 
  1166  019F                     	;# 
  1167  020C                     	;# 
  1168  020D                     	;# 
  1169  0211                     	;# 
  1170  0211                     	;# 
  1171  0212                     	;# 
  1172  0212                     	;# 
  1173  0213                     	;# 
  1174  0213                     	;# 
  1175  0214                     	;# 
  1176  0214                     	;# 
  1177  0215                     	;# 
  1178  0215                     	;# 
  1179  0215                     	;# 
  1180  0216                     	;# 
  1181  0216                     	;# 
  1182  0217                     	;# 
  1183  0217                     	;# 
  1184  0219                     	;# 
  1185  021A                     	;# 
  1186  021B                     	;# 
  1187  021C                     	;# 
  1188  021D                     	;# 
  1189  021E                     	;# 
  1190  021F                     	;# 
  1191  0291                     	;# 
  1192  0291                     	;# 
  1193  0292                     	;# 
  1194  0293                     	;# 
  1195  0294                     	;# 
  1196  0295                     	;# 
  1197  0295                     	;# 
  1198  0296                     	;# 
  1199  0298                     	;# 
  1200  0298                     	;# 
  1201  0299                     	;# 
  1202  029A                     	;# 
  1203  029B                     	;# 
  1204  029C                     	;# 
  1205  029C                     	;# 
  1206  029D                     	;# 
  1207  029E                     	;# 
  1208  029E                     	;# 
  1209  0311                     	;# 
  1210  0311                     	;# 
  1211  0312                     	;# 
  1212  0313                     	;# 
  1213  0318                     	;# 
  1214  0318                     	;# 
  1215  0319                     	;# 
  1216  031A                     	;# 
  1217  0394                     	;# 
  1218  0395                     	;# 
  1219  0396                     	;# 
  1220  039A                     	;# 
  1221  039C                     	;# 
  1222  039D                     	;# 
  1223  039E                     	;# 
  1224  039F                     	;# 
  1225  0415                     	;# 
  1226  0416                     	;# 
  1227  0417                     	;# 
  1228  041C                     	;# 
  1229  041D                     	;# 
  1230  041E                     	;# 
  1231  0FE4                     	;# 
  1232  0FE5                     	;# 
  1233  0FE6                     	;# 
  1234  0FE7                     	;# 
  1235  0FE8                     	;# 
  1236  0FE9                     	;# 
  1237  0FEA                     	;# 
  1238  0FEB                     	;# 
  1239  0FED                     	;# 
  1240  0FEE                     	;# 
  1241  0FEF                     	;# 
  1242  0000                     	;# 
  1243  0001                     	;# 
  1244  0002                     	;# 
  1245  0003                     	;# 
  1246  0004                     	;# 
  1247  0005                     	;# 
  1248  0006                     	;# 
  1249  0007                     	;# 
  1250  0008                     	;# 
  1251  0009                     	;# 
  1252  000A                     	;# 
  1253  000B                     	;# 
  1254  000C                     	;# 
  1255  000D                     	;# 
  1256  0011                     	;# 
  1257  0012                     	;# 
  1258  0013                     	;# 
  1259  0014                     	;# 
  1260  0015                     	;# 
  1261  0016                     	;# 
  1262  0016                     	;# 
  1263  0017                     	;# 
  1264  0018                     	;# 
  1265  0019                     	;# 
  1266  001A                     	;# 
  1267  001B                     	;# 
  1268  001C                     	;# 
  1269  001E                     	;# 
  1270  001F                     	;# 
  1271  008C                     	;# 
  1272  008D                     	;# 
  1273  0091                     	;# 
  1274  0092                     	;# 
  1275  0093                     	;# 
  1276  0094                     	;# 
  1277  0095                     	;# 
  1278  0096                     	;# 
  1279  0097                     	;# 
  1280  0098                     	;# 
  1281  0099                     	;# 
  1282  009A                     	;# 
  1283  009B                     	;# 
  1284  009B                     	;# 
  1285  009C                     	;# 
  1286  009D                     	;# 
  1287  009E                     	;# 
  1288  010C                     	;# 
  1289  010D                     	;# 
  1290  0111                     	;# 
  1291  0112                     	;# 
  1292  0113                     	;# 
  1293  0114                     	;# 
  1294  0115                     	;# 
  1295  0116                     	;# 
  1296  0117                     	;# 
  1297  0118                     	;# 
  1298  0119                     	;# 
  1299  011A                     	;# 
  1300  011B                     	;# 
  1301  011D                     	;# 
  1302  011E                     	;# 
  1303  018C                     	;# 
  1304  018D                     	;# 
  1305  0191                     	;# 
  1306  0191                     	;# 
  1307  0192                     	;# 
  1308  0193                     	;# 
  1309  0193                     	;# 
  1310  0193                     	;# 
  1311  0194                     	;# 
  1312  0195                     	;# 
  1313  0196                     	;# 
  1314  0199                     	;# 
  1315  019A                     	;# 
  1316  019B                     	;# 
  1317  019B                     	;# 
  1318  019B                     	;# 
  1319  019B                     	;# 
  1320  019C                     	;# 
  1321  019C                     	;# 
  1322  019D                     	;# 
  1323  019E                     	;# 
  1324  019F                     	;# 
  1325  020C                     	;# 
  1326  020D                     	;# 
  1327  0211                     	;# 
  1328  0211                     	;# 
  1329  0212                     	;# 
  1330  0212                     	;# 
  1331  0213                     	;# 
  1332  0213                     	;# 
  1333  0214                     	;# 
  1334  0214                     	;# 
  1335  0215                     	;# 
  1336  0215                     	;# 
  1337  0215                     	;# 
  1338  0216                     	;# 
  1339  0216                     	;# 
  1340  0217                     	;# 
  1341  0217                     	;# 
  1342  0219                     	;# 
  1343  021A                     	;# 
  1344  021B                     	;# 
  1345  021C                     	;# 
  1346  021D                     	;# 
  1347  021E                     	;# 
  1348  021F                     	;# 
  1349  0291                     	;# 
  1350  0291                     	;# 
  1351  0292                     	;# 
  1352  0293                     	;# 
  1353  0294                     	;# 
  1354  0295                     	;# 
  1355  0295                     	;# 
  1356  0296                     	;# 
  1357  0298                     	;# 
  1358  0298                     	;# 
  1359  0299                     	;# 
  1360  029A                     	;# 
  1361  029B                     	;# 
  1362  029C                     	;# 
  1363  029C                     	;# 
  1364  029D                     	;# 
  1365  029E                     	;# 
  1366  029E                     	;# 
  1367  0311                     	;# 
  1368  0311                     	;# 
  1369  0312                     	;# 
  1370  0313                     	;# 
  1371  0318                     	;# 
  1372  0318                     	;# 
  1373  0319                     	;# 
  1374  031A                     	;# 
  1375  0394                     	;# 
  1376  0395                     	;# 
  1377  0396                     	;# 
  1378  039A                     	;# 
  1379  039C                     	;# 
  1380  039D                     	;# 
  1381  039E                     	;# 
  1382  039F                     	;# 
  1383  0415                     	;# 
  1384  0416                     	;# 
  1385  0417                     	;# 
  1386  041C                     	;# 
  1387  041D                     	;# 
  1388  041E                     	;# 
  1389  0FE4                     	;# 
  1390  0FE5                     	;# 
  1391  0FE6                     	;# 
  1392  0FE7                     	;# 
  1393  0FE8                     	;# 
  1394  0FE9                     	;# 
  1395  0FEA                     	;# 
  1396  0FEB                     	;# 
  1397  0FED                     	;# 
  1398  0FEE                     	;# 
  1399  0FEF                     	;# 
  1400  0000                     	;# 
  1401  0001                     	;# 
  1402  0002                     	;# 
  1403  0003                     	;# 
  1404  0004                     	;# 
  1405  0005                     	;# 
  1406  0006                     	;# 
  1407  0007                     	;# 
  1408  0008                     	;# 
  1409  0009                     	;# 
  1410  000A                     	;# 
  1411  000B                     	;# 
  1412  000C                     	;# 
  1413  000D                     	;# 
  1414  0011                     	;# 
  1415  0012                     	;# 
  1416  0013                     	;# 
  1417  0014                     	;# 
  1418  0015                     	;# 
  1419  0016                     	;# 
  1420  0016                     	;# 
  1421  0017                     	;# 
  1422  0018                     	;# 
  1423  0019                     	;# 
  1424  001A                     	;# 
  1425  001B                     	;# 
  1426  001C                     	;# 
  1427  001E                     	;# 
  1428  001F                     	;# 
  1429  008C                     	;# 
  1430  008D                     	;# 
  1431  0091                     	;# 
  1432  0092                     	;# 
  1433  0093                     	;# 
  1434  0094                     	;# 
  1435  0095                     	;# 
  1436  0096                     	;# 
  1437  0097                     	;# 
  1438  0098                     	;# 
  1439  0099                     	;# 
  1440  009A                     	;# 
  1441  009B                     	;# 
  1442  009B                     	;# 
  1443  009C                     	;# 
  1444  009D                     	;# 
  1445  009E                     	;# 
  1446  010C                     	;# 
  1447  010D                     	;# 
  1448  0111                     	;# 
  1449  0112                     	;# 
  1450  0113                     	;# 
  1451  0114                     	;# 
  1452  0115                     	;# 
  1453  0116                     	;# 
  1454  0117                     	;# 
  1455  0118                     	;# 
  1456  0119                     	;# 
  1457  011A                     	;# 
  1458  011B                     	;# 
  1459  011D                     	;# 
  1460  011E                     	;# 
  1461  018C                     	;# 
  1462  018D                     	;# 
  1463  0191                     	;# 
  1464  0191                     	;# 
  1465  0192                     	;# 
  1466  0193                     	;# 
  1467  0193                     	;# 
  1468  0193                     	;# 
  1469  0194                     	;# 
  1470  0195                     	;# 
  1471  0196                     	;# 
  1472  0199                     	;# 
  1473  019A                     	;# 
  1474  019B                     	;# 
  1475  019B                     	;# 
  1476  019B                     	;# 
  1477  019B                     	;# 
  1478  019C                     	;# 
  1479  019C                     	;# 
  1480  019D                     	;# 
  1481  019E                     	;# 
  1482  019F                     	;# 
  1483  020C                     	;# 
  1484  020D                     	;# 
  1485  0211                     	;# 
  1486  0211                     	;# 
  1487  0212                     	;# 
  1488  0212                     	;# 
  1489  0213                     	;# 
  1490  0213                     	;# 
  1491  0214                     	;# 
  1492  0214                     	;# 
  1493  0215                     	;# 
  1494  0215                     	;# 
  1495  0215                     	;# 
  1496  0216                     	;# 
  1497  0216                     	;# 
  1498  0217                     	;# 
  1499  0217                     	;# 
  1500  0219                     	;# 
  1501  021A                     	;# 
  1502  021B                     	;# 
  1503  021C                     	;# 
  1504  021D                     	;# 
  1505  021E                     	;# 
  1506  021F                     	;# 
  1507  0291                     	;# 
  1508  0291                     	;# 
  1509  0292                     	;# 
  1510  0293                     	;# 
  1511  0294                     	;# 
  1512  0295                     	;# 
  1513  0295                     	;# 
  1514  0296                     	;# 
  1515  0298                     	;# 
  1516  0298                     	;# 
  1517  0299                     	;# 
  1518  029A                     	;# 
  1519  029B                     	;# 
  1520  029C                     	;# 
  1521  029C                     	;# 
  1522  029D                     	;# 
  1523  029E                     	;# 
  1524  029E                     	;# 
  1525  0311                     	;# 
  1526  0311                     	;# 
  1527  0312                     	;# 
  1528  0313                     	;# 
  1529  0318                     	;# 
  1530  0318                     	;# 
  1531  0319                     	;# 
  1532  031A                     	;# 
  1533  0394                     	;# 
  1534  0395                     	;# 
  1535  0396                     	;# 
  1536  039A                     	;# 
  1537  039C                     	;# 
  1538  039D                     	;# 
  1539  039E                     	;# 
  1540  039F                     	;# 
  1541  0415                     	;# 
  1542  0416                     	;# 
  1543  0417                     	;# 
  1544  041C                     	;# 
  1545  041D                     	;# 
  1546  041E                     	;# 
  1547  0FE4                     	;# 
  1548  0FE5                     	;# 
  1549  0FE6                     	;# 
  1550  0FE7                     	;# 
  1551  0FE8                     	;# 
  1552  0FE9                     	;# 
  1553  0FEA                     	;# 
  1554  0FEB                     	;# 
  1555  0FED                     	;# 
  1556  0FEE                     	;# 
  1557  0FEF                     	;# 
  1558  0000                     	;# 
  1559  0001                     	;# 
  1560  0002                     	;# 
  1561  0003                     	;# 
  1562  0004                     	;# 
  1563  0005                     	;# 
  1564  0006                     	;# 
  1565  0007                     	;# 
  1566  0008                     	;# 
  1567  0009                     	;# 
  1568  000A                     	;# 
  1569  000B                     	;# 
  1570  000C                     	;# 
  1571  000D                     	;# 
  1572  0011                     	;# 
  1573  0012                     	;# 
  1574  0013                     	;# 
  1575  0014                     	;# 
  1576  0015                     	;# 
  1577  0016                     	;# 
  1578  0016                     	;# 
  1579  0017                     	;# 
  1580  0018                     	;# 
  1581  0019                     	;# 
  1582  001A                     	;# 
  1583  001B                     	;# 
  1584  001C                     	;# 
  1585  001E                     	;# 
  1586  001F                     	;# 
  1587  008C                     	;# 
  1588  008D                     	;# 
  1589  0091                     	;# 
  1590  0092                     	;# 
  1591  0093                     	;# 
  1592  0094                     	;# 
  1593  0095                     	;# 
  1594  0096                     	;# 
  1595  0097                     	;# 
  1596  0098                     	;# 
  1597  0099                     	;# 
  1598  009A                     	;# 
  1599  009B                     	;# 
  1600  009B                     	;# 
  1601  009C                     	;# 
  1602  009D                     	;# 
  1603  009E                     	;# 
  1604  010C                     	;# 
  1605  010D                     	;# 
  1606  0111                     	;# 
  1607  0112                     	;# 
  1608  0113                     	;# 
  1609  0114                     	;# 
  1610  0115                     	;# 
  1611  0116                     	;# 
  1612  0117                     	;# 
  1613  0118                     	;# 
  1614  0119                     	;# 
  1615  011A                     	;# 
  1616  011B                     	;# 
  1617  011D                     	;# 
  1618  011E                     	;# 
  1619  018C                     	;# 
  1620  018D                     	;# 
  1621  0191                     	;# 
  1622  0191                     	;# 
  1623  0192                     	;# 
  1624  0193                     	;# 
  1625  0193                     	;# 
  1626  0193                     	;# 
  1627  0194                     	;# 
  1628  0195                     	;# 
  1629  0196                     	;# 
  1630  0199                     	;# 
  1631  019A                     	;# 
  1632  019B                     	;# 
  1633  019B                     	;# 
  1634  019B                     	;# 
  1635  019B                     	;# 
  1636  019C                     	;# 
  1637  019C                     	;# 
  1638  019D                     	;# 
  1639  019E                     	;# 
  1640  019F                     	;# 
  1641  020C                     	;# 
  1642  020D                     	;# 
  1643  0211                     	;# 
  1644  0211                     	;# 
  1645  0212                     	;# 
  1646  0212                     	;# 
  1647  0213                     	;# 
  1648  0213                     	;# 
  1649  0214                     	;# 
  1650  0214                     	;# 
  1651  0215                     	;# 
  1652  0215                     	;# 
  1653  0215                     	;# 
  1654  0216                     	;# 
  1655  0216                     	;# 
  1656  0217                     	;# 
  1657  0217                     	;# 
  1658  0219                     	;# 
  1659  021A                     	;# 
  1660  021B                     	;# 
  1661  021C                     	;# 
  1662  021D                     	;# 
  1663  021E                     	;# 
  1664  021F                     	;# 
  1665  0291                     	;# 
  1666  0291                     	;# 
  1667  0292                     	;# 
  1668  0293                     	;# 
  1669  0294                     	;# 
  1670  0295                     	;# 
  1671  0295                     	;# 
  1672  0296                     	;# 
  1673  0298                     	;# 
  1674  0298                     	;# 
  1675  0299                     	;# 
  1676  029A                     	;# 
  1677  029B                     	;# 
  1678  029C                     	;# 
  1679  029C                     	;# 
  1680  029D                     	;# 
  1681  029E                     	;# 
  1682  029E                     	;# 
  1683  0311                     	;# 
  1684  0311                     	;# 
  1685  0312                     	;# 
  1686  0313                     	;# 
  1687  0318                     	;# 
  1688  0318                     	;# 
  1689  0319                     	;# 
  1690  031A                     	;# 
  1691  0394                     	;# 
  1692  0395                     	;# 
  1693  0396                     	;# 
  1694  039A                     	;# 
  1695  039C                     	;# 
  1696  039D                     	;# 
  1697  039E                     	;# 
  1698  039F                     	;# 
  1699  0415                     	;# 
  1700  0416                     	;# 
  1701  0417                     	;# 
  1702  041C                     	;# 
  1703  041D                     	;# 
  1704  041E                     	;# 
  1705  0FE4                     	;# 
  1706  0FE5                     	;# 
  1707  0FE6                     	;# 
  1708  0FE7                     	;# 
  1709  0FE8                     	;# 
  1710  0FE9                     	;# 
  1711  0FEA                     	;# 
  1712  0FEB                     	;# 
  1713  0FED                     	;# 
  1714  0FEE                     	;# 
  1715  0FEF                     	;# 
  1716  0000                     	;# 
  1717  0001                     	;# 
  1718  0002                     	;# 
  1719  0003                     	;# 
  1720  0004                     	;# 
  1721  0005                     	;# 
  1722  0006                     	;# 
  1723  0007                     	;# 
  1724  0008                     	;# 
  1725  0009                     	;# 
  1726  000A                     	;# 
  1727  000B                     	;# 
  1728  000C                     	;# 
  1729  000D                     	;# 
  1730  0011                     	;# 
  1731  0012                     	;# 
  1732  0013                     	;# 
  1733  0014                     	;# 
  1734  0015                     	;# 
  1735  0016                     	;# 
  1736  0016                     	;# 
  1737  0017                     	;# 
  1738  0018                     	;# 
  1739  0019                     	;# 
  1740  001A                     	;# 
  1741  001B                     	;# 
  1742  001C                     	;# 
  1743  001E                     	;# 
  1744  001F                     	;# 
  1745  008C                     	;# 
  1746  008D                     	;# 
  1747  0091                     	;# 
  1748  0092                     	;# 
  1749  0093                     	;# 
  1750  0094                     	;# 
  1751  0095                     	;# 
  1752  0096                     	;# 
  1753  0097                     	;# 
  1754  0098                     	;# 
  1755  0099                     	;# 
  1756  009A                     	;# 
  1757  009B                     	;# 
  1758  009B                     	;# 
  1759  009C                     	;# 
  1760  009D                     	;# 
  1761  009E                     	;# 
  1762  010C                     	;# 
  1763  010D                     	;# 
  1764  0111                     	;# 
  1765  0112                     	;# 
  1766  0113                     	;# 
  1767  0114                     	;# 
  1768  0115                     	;# 
  1769  0116                     	;# 
  1770  0117                     	;# 
  1771  0118                     	;# 
  1772  0119                     	;# 
  1773  011A                     	;# 
  1774  011B                     	;# 
  1775  011D                     	;# 
  1776  011E                     	;# 
  1777  018C                     	;# 
  1778  018D                     	;# 
  1779  0191                     	;# 
  1780  0191                     	;# 
  1781  0192                     	;# 
  1782  0193                     	;# 
  1783  0193                     	;# 
  1784  0193                     	;# 
  1785  0194                     	;# 
  1786  0195                     	;# 
  1787  0196                     	;# 
  1788  0199                     	;# 
  1789  019A                     	;# 
  1790  019B                     	;# 
  1791  019B                     	;# 
  1792  019B                     	;# 
  1793  019B                     	;# 
  1794  019C                     	;# 
  1795  019C                     	;# 
  1796  019D                     	;# 
  1797  019E                     	;# 
  1798  019F                     	;# 
  1799  020C                     	;# 
  1800  020D                     	;# 
  1801  0211                     	;# 
  1802  0211                     	;# 
  1803  0212                     	;# 
  1804  0212                     	;# 
  1805  0213                     	;# 
  1806  0213                     	;# 
  1807  0214                     	;# 
  1808  0214                     	;# 
  1809  0215                     	;# 
  1810  0215                     	;# 
  1811  0215                     	;# 
  1812  0216                     	;# 
  1813  0216                     	;# 
  1814  0217                     	;# 
  1815  0217                     	;# 
  1816  0219                     	;# 
  1817  021A                     	;# 
  1818  021B                     	;# 
  1819  021C                     	;# 
  1820  021D                     	;# 
  1821  021E                     	;# 
  1822  021F                     	;# 
  1823  0291                     	;# 
  1824  0291                     	;# 
  1825  0292                     	;# 
  1826  0293                     	;# 
  1827  0294                     	;# 
  1828  0295                     	;# 
  1829  0295                     	;# 
  1830  0296                     	;# 
  1831  0298                     	;# 
  1832  0298                     	;# 
  1833  0299                     	;# 
  1834  029A                     	;# 
  1835  029B                     	;# 
  1836  029C                     	;# 
  1837  029C                     	;# 
  1838  029D                     	;# 
  1839  029E                     	;# 
  1840  029E                     	;# 
  1841  0311                     	;# 
  1842  0311                     	;# 
  1843  0312                     	;# 
  1844  0313                     	;# 
  1845  0318                     	;# 
  1846  0318                     	;# 
  1847  0319                     	;# 
  1848  031A                     	;# 
  1849  0394                     	;# 
  1850  0395                     	;# 
  1851  0396                     	;# 
  1852  039A                     	;# 
  1853  039C                     	;# 
  1854  039D                     	;# 
  1855  039E                     	;# 
  1856  039F                     	;# 
  1857  0415                     	;# 
  1858  0416                     	;# 
  1859  0417                     	;# 
  1860  041C                     	;# 
  1861  041D                     	;# 
  1862  041E                     	;# 
  1863  0FE4                     	;# 
  1864  0FE5                     	;# 
  1865  0FE6                     	;# 
  1866  0FE7                     	;# 
  1867  0FE8                     	;# 
  1868  0FE9                     	;# 
  1869  0FEA                     	;# 
  1870  0FEB                     	;# 
  1871  0FED                     	;# 
  1872  0FEE                     	;# 
  1873  0FEF                     	;_mtouch_sensor
  1874                           
  1875 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  1876  0000                     
  1877 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  1878  0000                     
  1879 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  1880  0000                     
  1881                           	psect	idataBANK0
  1882  0C17                     __pidataBANK0:	
  1883                           
  1884                           ;initializer for _Button_StateMachine
  1885  0C17  34A5               	retlw	low _Button_State_Initializing
  1886  0C18  3404               	retlw	high _Button_State_Initializing
  1887  0C19  341B               	retlw	low _Button_State_NotPressed
  1888  0C1A  3407               	retlw	high _Button_State_NotPressed
  1889  0C1B  3487               	retlw	low _Button_State_Pressed
  1890  0C1C  3405               	retlw	high _Button_State_Pressed
  1891                           
  1892                           ;initializer for _callback_notPressed
  1893  0C1D  345C               	retlw	low _Button_DefaultCallback
  1894  0C1E  340B               	retlw	high _Button_DefaultCallback
  1895                           
  1896                           ;initializer for _callback_pressed
  1897  0C1F  345C               	retlw	low _Button_DefaultCallback
  1898  0C20  340B               	retlw	high _Button_DefaultCallback
  1899                           
  1900                           ;initializer for _Sensor_scanB
  1901  0C21  347C               	retlw	low _MTOUCH_CVD_ScanB_0
  1902  0C22  340E               	retlw	high _MTOUCH_CVD_ScanB_0
  1903                           
  1904                           ;initializer for _Sensor_scanA
  1905  0C23  343C               	retlw	low _MTOUCH_CVD_ScanA_0
  1906  0C24  340D               	retlw	high _MTOUCH_CVD_ScanA_0
  1907                           
  1908                           ;initializer for _callback_sampled
  1909  0C25  3404               	retlw	low _Sensor_DefaultCallback
  1910  0C26  3400               	retlw	high _Sensor_DefaultCallback
  1911                           
  1912                           	psect	idataBIGRAM
  1913  02A2                     __pidataBIGRAM:	
  1914                           
  1915                           ;initializer for _mtouch_sensor
  1916  02A2  3400               	retlw	0
  1917  02A3  343C               	retlw	low _MTOUCH_CVD_ScanA_0
  1918  02A4  340D               	retlw	high _MTOUCH_CVD_ScanA_0
  1919  02A5  347C               	retlw	low _MTOUCH_CVD_ScanB_0
  1920  02A6  340E               	retlw	high _MTOUCH_CVD_ScanB_0
  1921  02A7  3420               	retlw	32
  1922  02A8  3400               	retlw	0
  1923  02A9  3400               	retlw	0
  1924  02AA  3400               	retlw	0
  1925  02AB  3401               	retlw	1
  1926  02AC  345C               	retlw	low _MTOUCH_CVD_ScanA_1
  1927  02AD  340D               	retlw	high _MTOUCH_CVD_ScanA_1
  1928  02AE  349C               	retlw	low _MTOUCH_CVD_ScanB_1
  1929  02AF  340E               	retlw	high _MTOUCH_CVD_ScanB_1
  1930  02B0  3420               	retlw	32
  1931  02B1  3400               	retlw	0
  1932  02B2  3400               	retlw	0
  1933  02B3  3400               	retlw	0
  1934  02B4  3402               	retlw	2
  1935  02B5  347C               	retlw	low _MTOUCH_CVD_ScanA_2
  1936  02B6  340D               	retlw	high _MTOUCH_CVD_ScanA_2
  1937  02B7  34BC               	retlw	low _MTOUCH_CVD_ScanB_2
  1938  02B8  340E               	retlw	high _MTOUCH_CVD_ScanB_2
  1939  02B9  3420               	retlw	32
  1940  02BA  3400               	retlw	0
  1941  02BB  3400               	retlw	0
  1942  02BC  3400               	retlw	0
  1943  02BD  3403               	retlw	3
  1944  02BE  349C               	retlw	low _MTOUCH_CVD_ScanA_3
  1945  02BF  340D               	retlw	high _MTOUCH_CVD_ScanA_3
  1946  02C0  34DC               	retlw	low _MTOUCH_CVD_ScanB_3
  1947  02C1  340E               	retlw	high _MTOUCH_CVD_ScanB_3
  1948  02C2  3420               	retlw	32
  1949  02C3  3400               	retlw	0
  1950  02C4  3400               	retlw	0
  1951  02C5  3400               	retlw	0
  1952  02C6  3404               	retlw	4
  1953  02C7  34BC               	retlw	low _MTOUCH_CVD_ScanA_4
  1954  02C8  340D               	retlw	high _MTOUCH_CVD_ScanA_4
  1955  02C9  34FC               	retlw	low _MTOUCH_CVD_ScanB_4
  1956  02CA  340E               	retlw	high _MTOUCH_CVD_ScanB_4
  1957  02CB  3420               	retlw	32
  1958  02CC  3400               	retlw	0
  1959  02CD  3400               	retlw	0
  1960  02CE  3400               	retlw	0
  1961  02CF  3405               	retlw	5
  1962  02D0  34DC               	retlw	low _MTOUCH_CVD_ScanA_5
  1963  02D1  340D               	retlw	high _MTOUCH_CVD_ScanA_5
  1964  02D2  341C               	retlw	low _MTOUCH_CVD_ScanB_5
  1965  02D3  340F               	retlw	high _MTOUCH_CVD_ScanB_5
  1966  02D4  3420               	retlw	32
  1967  02D5  3400               	retlw	0
  1968  02D6  3400               	retlw	0
  1969  02D7  3400               	retlw	0
  1970  02D8  3406               	retlw	6
  1971  02D9  34FC               	retlw	low _MTOUCH_CVD_ScanA_6
  1972  02DA  340D               	retlw	high _MTOUCH_CVD_ScanA_6
  1973  02DB  343C               	retlw	low _MTOUCH_CVD_ScanB_6
  1974  02DC  340F               	retlw	high _MTOUCH_CVD_ScanB_6
  1975  02DD  3420               	retlw	32
  1976  02DE  3400               	retlw	0
  1977  02DF  3400               	retlw	0
  1978  02E0  3400               	retlw	0
  1979  02E1  3407               	retlw	7
  1980  02E2  341C               	retlw	low _MTOUCH_CVD_ScanA_7
  1981  02E3  340E               	retlw	high _MTOUCH_CVD_ScanA_7
  1982  02E4  345C               	retlw	low _MTOUCH_CVD_ScanB_7
  1983  02E5  340F               	retlw	high _MTOUCH_CVD_ScanB_7
  1984  02E6  3420               	retlw	32
  1985  02E7  3400               	retlw	0
  1986  02E8  3400               	retlw	0
  1987  02E9  3400               	retlw	0
  1988  02EA  3408               	retlw	8
  1989  02EB  343C               	retlw	low _MTOUCH_CVD_ScanA_8
  1990  02EC  340E               	retlw	high _MTOUCH_CVD_ScanA_8
  1991  02ED  347C               	retlw	low _MTOUCH_CVD_ScanB_8
  1992  02EE  340F               	retlw	high _MTOUCH_CVD_ScanB_8
  1993  02EF  3420               	retlw	32
  1994  02F0  3400               	retlw	0
  1995  02F1  3400               	retlw	0
  1996  02F2  3400               	retlw	0
  1997  02F3  3409               	retlw	9
  1998  02F4  341C               	retlw	low _MTOUCH_CVD_ScanA_9
  1999  02F5  340D               	retlw	high _MTOUCH_CVD_ScanA_9
  2000  02F6  345C               	retlw	low _MTOUCH_CVD_ScanB_9
  2001  02F7  340E               	retlw	high _MTOUCH_CVD_ScanB_9
  2002  02F8  3420               	retlw	32
  2003  02F9  3400               	retlw	0
  2004  02FA  3400               	retlw	0
  2005  02FB  3400               	retlw	0
  2006                           
  2007                           	psect	stringtext1
  2008  0800                     __pstringtext1:	
  2009  0800                     _mtouch_button_init:	
  2010  0800  3400               	retlw	0
  2011  0801  3400               	retlw	0
  2012  0802  3400               	retlw	0
  2013  0803  3400               	retlw	0
  2014  0804  3400               	retlw	0
  2015  0805  3400               	retlw	0
  2016  0806  3400               	retlw	0
  2017  0807  3400               	retlw	0
  2018  0808  3400               	retlw	0
  2019  0809  3400               	retlw	0
  2020  080A  3400               	retlw	0
  2021  080B  3400               	retlw	0
  2022  080C  3400               	retlw	0
  2023  080D  3400               	retlw	0
  2024  080E  3464               	retlw	100
  2025  080F  3402               	retlw	2
  2026  0810  3402               	retlw	2
  2027  0811  3401               	retlw	1
  2028  0812  3401               	retlw	1
  2029  0813  3400               	retlw	0
  2030  0814  3400               	retlw	0
  2031  0815  3400               	retlw	0
  2032  0816  3400               	retlw	0
  2033  0817  3400               	retlw	0
  2034  0818  3400               	retlw	0
  2035  0819  3400               	retlw	0
  2036  081A  3400               	retlw	0
  2037  081B  3400               	retlw	0
  2038  081C  3400               	retlw	0
  2039  081D  3400               	retlw	0
  2040  081E  3400               	retlw	0
  2041  081F  3464               	retlw	100
  2042  0820  3402               	retlw	2
  2043  0821  3402               	retlw	2
  2044  0822  3402               	retlw	2
  2045  0823  3402               	retlw	2
  2046  0824  3400               	retlw	0
  2047  0825  3400               	retlw	0
  2048  0826  3400               	retlw	0
  2049  0827  3400               	retlw	0
  2050  0828  3400               	retlw	0
  2051  0829  3400               	retlw	0
  2052  082A  3400               	retlw	0
  2053  082B  3400               	retlw	0
  2054  082C  3400               	retlw	0
  2055  082D  3400               	retlw	0
  2056  082E  3400               	retlw	0
  2057  082F  3400               	retlw	0
  2058  0830  3464               	retlw	100
  2059  0831  3402               	retlw	2
  2060  0832  3402               	retlw	2
  2061  0833  3403               	retlw	3
  2062  0834  3403               	retlw	3
  2063  0835  3400               	retlw	0
  2064  0836  3400               	retlw	0
  2065  0837  3400               	retlw	0
  2066  0838  3400               	retlw	0
  2067  0839  3400               	retlw	0
  2068  083A  3400               	retlw	0
  2069  083B  3400               	retlw	0
  2070  083C  3400               	retlw	0
  2071  083D  3400               	retlw	0
  2072  083E  3400               	retlw	0
  2073  083F  3400               	retlw	0
  2074  0840  3400               	retlw	0
  2075  0841  3464               	retlw	100
  2076  0842  3402               	retlw	2
  2077  0843  3402               	retlw	2
  2078  0844  3404               	retlw	4
  2079  0845  3404               	retlw	4
  2080  0846  3400               	retlw	0
  2081  0847  3400               	retlw	0
  2082  0848  3400               	retlw	0
  2083  0849  3400               	retlw	0
  2084  084A  3400               	retlw	0
  2085  084B  3400               	retlw	0
  2086  084C  3400               	retlw	0
  2087  084D  3400               	retlw	0
  2088  084E  3400               	retlw	0
  2089  084F  3400               	retlw	0
  2090  0850  3400               	retlw	0
  2091  0851  3400               	retlw	0
  2092  0852  3464               	retlw	100
  2093  0853  3402               	retlw	2
  2094  0854  3402               	retlw	2
  2095  0855  3405               	retlw	5
  2096  0856  3405               	retlw	5
  2097  0857  3400               	retlw	0
  2098  0858  3400               	retlw	0
  2099  0859  3400               	retlw	0
  2100  085A  3400               	retlw	0
  2101  085B  3400               	retlw	0
  2102  085C  3400               	retlw	0
  2103  085D  3400               	retlw	0
  2104  085E  3400               	retlw	0
  2105  085F  3400               	retlw	0
  2106  0860  3400               	retlw	0
  2107  0861  3400               	retlw	0
  2108  0862  3400               	retlw	0
  2109  0863  3464               	retlw	100
  2110  0864  3402               	retlw	2
  2111  0865  3402               	retlw	2
  2112  0866  3406               	retlw	6
  2113  0867  3406               	retlw	6
  2114  0868  3400               	retlw	0
  2115  0869  3400               	retlw	0
  2116  086A  3400               	retlw	0
  2117  086B  3400               	retlw	0
  2118  086C  3400               	retlw	0
  2119  086D  3400               	retlw	0
  2120  086E  3400               	retlw	0
  2121  086F  3400               	retlw	0
  2122  0870  3400               	retlw	0
  2123  0871  3400               	retlw	0
  2124  0872  3400               	retlw	0
  2125  0873  3400               	retlw	0
  2126  0874  3464               	retlw	100
  2127  0875  3402               	retlw	2
  2128  0876  3402               	retlw	2
  2129  0877  3407               	retlw	7
  2130  0878  3407               	retlw	7
  2131  0879  3400               	retlw	0
  2132  087A  3400               	retlw	0
  2133  087B  3400               	retlw	0
  2134  087C  3400               	retlw	0
  2135  087D  3400               	retlw	0
  2136  087E  3400               	retlw	0
  2137  087F  3400               	retlw	0
  2138  0880  3400               	retlw	0
  2139  0881  3400               	retlw	0
  2140  0882  3400               	retlw	0
  2141  0883  3400               	retlw	0
  2142  0884  3400               	retlw	0
  2143  0885  3464               	retlw	100
  2144  0886  3402               	retlw	2
  2145  0887  3402               	retlw	2
  2146  0888  3408               	retlw	8
  2147  0889  3408               	retlw	8
  2148  088A  3400               	retlw	0
  2149  088B  3400               	retlw	0
  2150  088C  3400               	retlw	0
  2151  088D  3400               	retlw	0
  2152  088E  3400               	retlw	0
  2153  088F  3400               	retlw	0
  2154  0890  3400               	retlw	0
  2155  0891  3400               	retlw	0
  2156  0892  3400               	retlw	0
  2157  0893  3400               	retlw	0
  2158  0894  3400               	retlw	0
  2159  0895  3400               	retlw	0
  2160  0896  3464               	retlw	100
  2161  0897  3401               	retlw	1
  2162  0898  3402               	retlw	2
  2163  0899  3409               	retlw	9
  2164  089A  3409               	retlw	9
  2165  089B  3400               	retlw	0
  2166  089C  3400               	retlw	0
  2167  089D  3400               	retlw	0
  2168  089E  3400               	retlw	0
  2169  089F  3400               	retlw	0
  2170  08A0  3400               	retlw	0
  2171  08A1  3400               	retlw	0
  2172  08A2  3400               	retlw	0
  2173  08A3  3400               	retlw	0
  2174  08A4  3400               	retlw	0
  2175  08A5  3400               	retlw	0
  2176  08A6  3400               	retlw	0
  2177  08A7  3464               	retlw	100
  2178  08A8  3401               	retlw	1
  2179  08A9  3402               	retlw	2
  2180  08AA                     __end_of_mtouch_button_init:	
  2181  0011                     _PIR1bits	set	17
  2182  000B                     _INTCONbits	set	11
  2183  005F                     _GIE	set	95
  2184  009B                     _ADRES	set	155
  2185  0095                     _OPTION_REGbits	set	149
  2186  008D                     _TRISB	set	141
  2187  008C                     _TRISA	set	140
  2188  0097                     _WDTCON	set	151
  2189  0098                     _OSCTUNE	set	152
  2190  0099                     _OSCCON	set	153
  2191  009D                     _ADCON0bits	set	157
  2192  009E                     _ADCON1	set	158
  2193  009D                     _ADCON0	set	157
  2194  04D6                     _PLLR	set	1238
  2195  010C                     _LATAbits	set	268
  2196  011E                     _APFCON1	set	286
  2197  011D                     _APFCON0	set	285
  2198  010D                     _LATB	set	269
  2199  010C                     _LATA	set	268
  2200  0116                     _BORCON	set	278
  2201  018C                     _ANSELA	set	396
  2202  018D                     _ANSELB	set	397
  2203  019A                     _TXREG	set	410
  2204  0199                     _RCREG	set	409
  2205  019D                     _RCSTAbits	set	413
  2206  019E                     _TXSTAbits	set	414
  2207  019C                     _SPBRGH	set	412
  2208  019B                     _SPBRGL	set	411
  2209  019E                     _TXSTA	set	414
  2210  019D                     _RCSTA	set	413
  2211  019F                     _BAUDCON	set	415
  2212  020C                     _WPUA	set	524
  2213  020D                     _WPUB	set	525
  2214                           
  2215                           ; #config settings
  2216  0000                     
  2217                           	psect	cinit
  2218  07CB                     start_initialization:	
  2219  07CB                     __initialization:		;BIGRAM
  2220                           
  2221                           ; Initialize objects allocated to BIGRAM
  2222  07CB  30A2               	movlw	low __pidataBIGRAM
  2223  07CC  0084               	movwf	4
  2224  07CD  3082               	movlw	(high __pidataBIGRAM)| (0+128)
  2225  07CE  0085               	movwf	5
  2226  07CF  306C               	movlw	low (0+8300)
  2227  07D0  0086               	movwf	6
  2228  07D1  3020               	movlw	high (0+8300)
  2229  07D2  0087               	movwf	7
  2230  07D3  3000               	movlw	0
  2231  07D4  00FF               	movwf	btemp+1
  2232  07D5  305A               	movlw	90
  2233  07D6  318B  23BF  3187   	fcall	init_ram
  2234                           
  2235                           ; Initialize objects allocated to BANK0
  2236  07D9  3017               	movlw	low __pidataBANK0
  2237  07DA  0084               	movwf	4
  2238  07DB  308C               	movlw	(high __pidataBANK0)| (0+128)
  2239  07DC  0085               	movwf	5
  2240  07DD  304B               	movlw	low __pdataBANK0
  2241  07DE  0086               	movwf	6
  2242  07DF  3000               	movlw	high __pdataBANK0
  2243  07E0  0087               	movwf	7
  2244  07E1  3000               	movlw	0
  2245  07E2  00FF               	movwf	btemp+1
  2246  07E3  3010               	movlw	16
  2247  07E4  318B  23BF  3187   	fcall	init_ram
  2248                           
  2249                           ; Clear objects allocated to BIGRAM
  2250  07E7  30C6               	movlw	low (0+8390)
  2251  07E8  0084               	movwf	4
  2252  07E9  3020               	movlw	high (0+8390)
  2253  07EA  0085               	movwf	5
  2254  07EB  30AA               	movlw	170
  2255  07EC  00FE               	movwf	btemp
  2256  07ED  3000               	movlw	0
  2257  07EE  00FF               	movwf	btemp+1
  2258  07EF  318B  23B3  3187   	fcall	clear_ram0
  2259                           
  2260                           ; Clear objects allocated to BANK0
  2261  07F2  3037               	movlw	low __pbssBANK0
  2262  07F3  0084               	movwf	4
  2263  07F4  3000               	movlw	high __pbssBANK0
  2264  07F5  0085               	movwf	5
  2265  07F6  3014               	movlw	20
  2266  07F7  00FE               	movwf	btemp
  2267  07F8  3000               	movlw	0
  2268  07F9  00FF               	movwf	btemp+1
  2269  07FA  318B  23B3  3187   	fcall	clear_ram0
  2270  07FD                     end_of_initialization:	
  2271                           ;End of C runtime variable initialization code
  2272                           
  2273  07FD                     __end_of__initialization:	
  2274  07FD  0020               	movlb	0
  2275  07FE  3183  2BCA         	ljmp	_main	;jump to C main() function
  2276                           
  2277                           	psect	bssBANK0
  2278  0037                     __pbssBANK0:	
  2279  0037                     _EUSART_ErrorHandler:	
  2280  0037                     	ds	2
  2281  0039                     _EUSART_OverrunErrorHandler:	
  2282  0039                     	ds	2
  2283  003B                     _EUSART_FramingErrorHandler:	
  2284  003B                     	ds	2
  2285  003D                     _packet_sample:	
  2286  003D                     	ds	2
  2287  003F                     _led:	
  2288  003F                     	ds	2
  2289  0041                     _duty:	
  2290  0041                     	ds	2
  2291  0043                     _eusartRxLastError:	
  2292  0043                     	ds	1
  2293  0044                     _lowpowerActivated:	
  2294  0044                     	ds	1
  2295  0045                     _sample_delay:	
  2296  0045                     	ds	1
  2297  0046                     _packet_counter:	
  2298  0046                     	ds	1
  2299  0047                     _currentScannSensor:	
  2300  0047                     	ds	1
  2301  0048                     _sensor_globalFlags:	
  2302  0048                     	ds	1
  2303  0049                     _mtouch_time_toScan:	
  2304  0049                     	ds	1
  2305  004A                     MTOUCH_Random@seed:	
  2306  004A                     	ds	1
  2307                           
  2308                           	psect	dataBANK0
  2309  004B                     __pdataBANK0:	
  2310  004B                     _Button_StateMachine:	
  2311  004B                     	ds	6
  2312  0051                     _callback_notPressed:	
  2313  0051                     	ds	2
  2314  0053                     _callback_pressed:	
  2315  0053                     	ds	2
  2316  0055                     _Sensor_scanB:	
  2317  0055                     	ds	2
  2318  0057                     _Sensor_scanA:	
  2319  0057                     	ds	2
  2320  0059                     _callback_sampled:	
  2321  0059                     	ds	2
  2322                           
  2323                           	psect	inittext
  2324  0BBF                     init_ram:	
  2325  0BBF  00FE               	movwf	btemp
  2326  0BC0                     initloop:	
  2327  0BC0  0012               	moviw fsr0++
  2328  0BC1  001E               	movwi fsr1++
  2329  0BC2  3001               	movlw	1
  2330  0BC3  02FE               	subwf	btemp,f
  2331  0BC4  3000               	movlw	0
  2332  0BC5  3BFF               	subwfb	btemp+1,f
  2333  0BC6  087F               	movf	btemp+1,w
  2334  0BC7  047E               	iorwf	btemp,w
  2335  0BC8  1D03               	skipz
  2336  0BC9  2BC0               	goto	initloop
  2337  0BCA  3400               	retlw	0
  2338                           
  2339                           	psect	clrtext
  2340  0BB3                     clear_ram0:	
  2341                           ;	Called with FSR0 containing the base address, and
  2342                           ;	btemp/btemp+1 has the size to clear
  2343                           
  2344  0BB3  0064               	clrwdt	;clear the watchdog before getting into this loop
  2345  0BB4                     clrloop0:	
  2346  0BB4  0180               	clrf	0	;clear RAM location pointed to by FSR
  2347  0BB5  3101               	addfsr 0,1
  2348  0BB6  3001               	movlw	1
  2349  0BB7  02FE               	subwf	btemp,f
  2350  0BB8  3000               	movlw	0
  2351  0BB9  3BFF               	subwfb	btemp+1,f
  2352  0BBA  087F               	movf	btemp+1,w
  2353  0BBB  047E               	iorwf	btemp,w
  2354  0BBC  1D03               	skipz
  2355  0BBD  2BB4               	goto	clrloop0	;have we reached the end yet?
  2356  0BBE  3400               	retlw	0	;all done for this memory range, return
  2357                           
  2358                           	psect	cstackCOMMON
  2359  0070                     __pcstackCOMMON:	
  2360  0070                     ?_MTOUCH_Service_Mainloop:	
  2361  0070                     ?_MTOUCH_Button_isPressed:	
  2362                           ; 1 bytes @ 0x0
  2363                           
  2364  0070                     ?_MTOUCH_Sensor_InitializeAll:	
  2365                           ; 1 bytes @ 0x0
  2366                           
  2367  0070                     ?_MTOUCH_Button_InitializeAll:	
  2368                           ; 1 bytes @ 0x0
  2369                           
  2370  0070                     ?_MTOUCH_Sensor_Sampled_ResetAll:	
  2371                           ; 1 bytes @ 0x0
  2372                           
  2373  0070                     ?_MTOUCH_Sensor_Scan_Initialize:	
  2374                           ; 1 bytes @ 0x0
  2375                           
  2376  0070                     ??_MTOUCH_Sensor_Scan_Initialize:	
  2377                           ; 1 bytes @ 0x0
  2378                           
  2379  0070                     ?_MTOUCH_Sensor_SampleAll:	
  2380                           ; 1 bytes @ 0x0
  2381                           
  2382  0070                     ?_MTOUCH_Button_ServiceAll:	
  2383                           ; 1 bytes @ 0x0
  2384                           
  2385  0070                     ?_MTOUCH_needReburst:	
  2386                           ; 1 bytes @ 0x0
  2387                           
  2388  0070                     ??_MTOUCH_needReburst:	
  2389                           ; 1 bytes @ 0x0
  2390                           
  2391  0070                     ?_MTOUCH_Tick:	
  2392                           ; 1 bytes @ 0x0
  2393                           
  2394  0070                     ?_MTOUCH_Button_Tick:	
  2395                           ; 1 bytes @ 0x0
  2396                           
  2397  0070                     ?_Sensor_DefaultCallback:	
  2398                           ; 1 bytes @ 0x0
  2399                           
  2400  0070                     ?_MTOUCH_Sensor_Enable:	
  2401                           ; 1 bytes @ 0x0
  2402                           
  2403  0070                     ?_Sensor_Service:	
  2404                           ; 1 bytes @ 0x0
  2405                           
  2406  0070                     ?_Sensor_isEnabled:	
  2407                           ; 1 bytes @ 0x0
  2408                           
  2409  0070                     ?_Sensor_RawSample_Update:	
  2410                           ; 1 bytes @ 0x0
  2411                           
  2412  0070                     ?_Sensor_setSampled:	
  2413                           ; 1 bytes @ 0x0
  2414                           
  2415  0070                     ?_Sensor_setActive:	
  2416                           ; 1 bytes @ 0x0
  2417                           
  2418  0070                     ?_Sensor_setInactive:	
  2419                           ; 1 bytes @ 0x0
  2420                           
  2421  0070                     ?_Sensor_setScanFunction:	
  2422                           ; 1 bytes @ 0x0
  2423                           
  2424  0070                     ?_Sensor_Acq_ExecuteScan:	
  2425                           ; 1 bytes @ 0x0
  2426                           
  2427  0070                     ?_MTOUCH_Delay:	
  2428                           ; 1 bytes @ 0x0
  2429                           
  2430  0070                     ??_MTOUCH_Delay:	
  2431                           ; 1 bytes @ 0x0
  2432                           
  2433  0070                     ?_Button_DefaultCallback:	
  2434                           ; 1 bytes @ 0x0
  2435                           
  2436  0070                     ?_Button_Service:	
  2437                           ; 1 bytes @ 0x0
  2438                           
  2439  0070                     ?_Button_Deviation_Update:	
  2440                           ; 1 bytes @ 0x0
  2441                           
  2442  0070                     ?_Button_Baseline_Update:	
  2443                           ; 1 bytes @ 0x0
  2444                           
  2445  0070                     ?_EUSART_SetFramingErrorHandler:	
  2446                           ; 1 bytes @ 0x0
  2447                           
  2448  0070                     ?_EUSART_SetOverrunErrorHandler:	
  2449                           ; 1 bytes @ 0x0
  2450                           
  2451  0070                     ?_EUSART_SetErrorHandler:	
  2452                           ; 1 bytes @ 0x0
  2453                           
  2454  0070                     ?_PIN_MANAGER_Initialize:	
  2455                           ; 1 bytes @ 0x0
  2456                           
  2457  0070                     ??_PIN_MANAGER_Initialize:	
  2458                           ; 1 bytes @ 0x0
  2459                           
  2460  0070                     ?_OSCILLATOR_Initialize:	
  2461                           ; 1 bytes @ 0x0
  2462                           
  2463  0070                     ??_OSCILLATOR_Initialize:	
  2464                           ; 1 bytes @ 0x0
  2465                           
  2466  0070                     ?_WDT_Initialize:	
  2467                           ; 1 bytes @ 0x0
  2468                           
  2469  0070                     ??_WDT_Initialize:	
  2470                           ; 1 bytes @ 0x0
  2471                           
  2472  0070                     ?_DELAY_microseconds:	
  2473                           ; 1 bytes @ 0x0
  2474                           
  2475  0070                     ?_MTOUCH_Random:	
  2476                           ; 1 bytes @ 0x0
  2477                           
  2478  0070                     ??_MTOUCH_Random:	
  2479                           ; 1 bytes @ 0x0
  2480                           
  2481  0070                     ?_MTOUCH_Initialize:	
  2482                           ; 1 bytes @ 0x0
  2483                           
  2484  0070                     ?_MTOUCH_CVD_ScanA_0:	
  2485                           ; 1 bytes @ 0x0
  2486                           
  2487  0070                     ??_MTOUCH_CVD_ScanA_0:	
  2488                           ; 1 bytes @ 0x0
  2489                           
  2490  0070                     ?_MTOUCH_CVD_ScanB_0:	
  2491                           ; 1 bytes @ 0x0
  2492                           
  2493  0070                     ??_MTOUCH_CVD_ScanB_0:	
  2494                           ; 1 bytes @ 0x0
  2495                           
  2496  0070                     ?_MTOUCH_CVD_ScanA_1:	
  2497                           ; 1 bytes @ 0x0
  2498                           
  2499  0070                     ??_MTOUCH_CVD_ScanA_1:	
  2500                           ; 1 bytes @ 0x0
  2501                           
  2502  0070                     ?_MTOUCH_CVD_ScanB_1:	
  2503                           ; 1 bytes @ 0x0
  2504                           
  2505  0070                     ??_MTOUCH_CVD_ScanB_1:	
  2506                           ; 1 bytes @ 0x0
  2507                           
  2508  0070                     ?_MTOUCH_CVD_ScanA_2:	
  2509                           ; 1 bytes @ 0x0
  2510                           
  2511  0070                     ??_MTOUCH_CVD_ScanA_2:	
  2512                           ; 1 bytes @ 0x0
  2513                           
  2514  0070                     ?_MTOUCH_CVD_ScanB_2:	
  2515                           ; 1 bytes @ 0x0
  2516                           
  2517  0070                     ??_MTOUCH_CVD_ScanB_2:	
  2518                           ; 1 bytes @ 0x0
  2519                           
  2520  0070                     ?_MTOUCH_CVD_ScanA_3:	
  2521                           ; 1 bytes @ 0x0
  2522                           
  2523  0070                     ??_MTOUCH_CVD_ScanA_3:	
  2524                           ; 1 bytes @ 0x0
  2525                           
  2526  0070                     ?_MTOUCH_CVD_ScanB_3:	
  2527                           ; 1 bytes @ 0x0
  2528                           
  2529  0070                     ??_MTOUCH_CVD_ScanB_3:	
  2530                           ; 1 bytes @ 0x0
  2531                           
  2532  0070                     ?_MTOUCH_CVD_ScanA_4:	
  2533                           ; 1 bytes @ 0x0
  2534                           
  2535  0070                     ??_MTOUCH_CVD_ScanA_4:	
  2536                           ; 1 bytes @ 0x0
  2537                           
  2538  0070                     ?_MTOUCH_CVD_ScanB_4:	
  2539                           ; 1 bytes @ 0x0
  2540                           
  2541  0070                     ??_MTOUCH_CVD_ScanB_4:	
  2542                           ; 1 bytes @ 0x0
  2543                           
  2544  0070                     ?_MTOUCH_CVD_ScanA_5:	
  2545                           ; 1 bytes @ 0x0
  2546                           
  2547  0070                     ??_MTOUCH_CVD_ScanA_5:	
  2548                           ; 1 bytes @ 0x0
  2549                           
  2550  0070                     ?_MTOUCH_CVD_ScanB_5:	
  2551                           ; 1 bytes @ 0x0
  2552                           
  2553  0070                     ??_MTOUCH_CVD_ScanB_5:	
  2554                           ; 1 bytes @ 0x0
  2555                           
  2556  0070                     ?_MTOUCH_CVD_ScanA_6:	
  2557                           ; 1 bytes @ 0x0
  2558                           
  2559  0070                     ??_MTOUCH_CVD_ScanA_6:	
  2560                           ; 1 bytes @ 0x0
  2561                           
  2562  0070                     ?_MTOUCH_CVD_ScanB_6:	
  2563                           ; 1 bytes @ 0x0
  2564                           
  2565  0070                     ??_MTOUCH_CVD_ScanB_6:	
  2566                           ; 1 bytes @ 0x0
  2567                           
  2568  0070                     ?_MTOUCH_CVD_ScanA_7:	
  2569                           ; 1 bytes @ 0x0
  2570                           
  2571  0070                     ??_MTOUCH_CVD_ScanA_7:	
  2572                           ; 1 bytes @ 0x0
  2573                           
  2574  0070                     ?_MTOUCH_CVD_ScanB_7:	
  2575                           ; 1 bytes @ 0x0
  2576                           
  2577  0070                     ??_MTOUCH_CVD_ScanB_7:	
  2578                           ; 1 bytes @ 0x0
  2579                           
  2580  0070                     ?_MTOUCH_CVD_ScanA_8:	
  2581                           ; 1 bytes @ 0x0
  2582                           
  2583  0070                     ??_MTOUCH_CVD_ScanA_8:	
  2584                           ; 1 bytes @ 0x0
  2585                           
  2586  0070                     ?_MTOUCH_CVD_ScanB_8:	
  2587                           ; 1 bytes @ 0x0
  2588                           
  2589  0070                     ??_MTOUCH_CVD_ScanB_8:	
  2590                           ; 1 bytes @ 0x0
  2591                           
  2592  0070                     ?_MTOUCH_CVD_ScanA_9:	
  2593                           ; 1 bytes @ 0x0
  2594                           
  2595  0070                     ??_MTOUCH_CVD_ScanA_9:	
  2596                           ; 1 bytes @ 0x0
  2597                           
  2598  0070                     ?_MTOUCH_CVD_ScanB_9:	
  2599                           ; 1 bytes @ 0x0
  2600                           
  2601  0070                     ??_MTOUCH_CVD_ScanB_9:	
  2602                           ; 1 bytes @ 0x0
  2603                           
  2604  0070                     ?_MTOUCH_Sensor_Initialize:	
  2605                           ; 1 bytes @ 0x0
  2606                           
  2607  0070                     ?_MTOUCH_Sensor_isCalibrated:	
  2608                           ; 1 bytes @ 0x0
  2609                           
  2610  0070                     ??_MTOUCH_Sensor_isCalibrated:	
  2611                           ; 1 bytes @ 0x0
  2612                           
  2613  0070                     ?_MTOUCH_Sensor_Calibrate:	
  2614                           ; 1 bytes @ 0x0
  2615                           
  2616  0070                     ??_MTOUCH_Sensor_Calibrate:	
  2617                           ; 1 bytes @ 0x0
  2618                           
  2619  0070                     ?_MTOUCH_Sensor_wasSampled:	
  2620                           ; 1 bytes @ 0x0
  2621                           
  2622  0070                     ?_MTOUCH_Button_Initialize:	
  2623                           ; 1 bytes @ 0x0
  2624                           
  2625  0070                     ?_EUSART_Initialize:	
  2626                           ; 1 bytes @ 0x0
  2627                           
  2628  0070                     ?_EUSART_is_tx_ready:	
  2629                           ; 1 bytes @ 0x0
  2630                           
  2631  0070                     ??_EUSART_is_tx_ready:	
  2632                           ; 1 bytes @ 0x0
  2633                           
  2634  0070                     ?_EUSART_Write:	
  2635                           ; 1 bytes @ 0x0
  2636                           
  2637  0070                     ??_EUSART_Write:	
  2638                           ; 1 bytes @ 0x0
  2639                           
  2640  0070                     ?_SYSTEM_Initialize:	
  2641                           ; 1 bytes @ 0x0
  2642                           
  2643  0070                     ?_main:	
  2644                           ; 1 bytes @ 0x0
  2645                           
  2646  0070                     ?_abs:	
  2647                           ; 1 bytes @ 0x0
  2648                           
  2649  0070                     ?_memcpy:	
  2650                           ; 2 bytes @ 0x0
  2651                           
  2652  0070                     ?___wmul:	
  2653                           ; 2 bytes @ 0x0
  2654                           
  2655  0070                     Sensor_DefaultCallback@sensor:	
  2656                           ; 2 bytes @ 0x0
  2657                           
  2658  0070                     MTOUCH_Sensor_isCalibrated@sensor:	
  2659                           ; 1 bytes @ 0x0
  2660                           
  2661  0070                     MTOUCH_Sensor_Calibrate@sensor:	
  2662                           ; 1 bytes @ 0x0
  2663                           
  2664  0070                     Button_DefaultCallback@button:	
  2665                           ; 1 bytes @ 0x0
  2666                           
  2667  0070                     _EUSART_is_tx_ready$1025:	
  2668                           ; 1 bytes @ 0x0
  2669                           
  2670  0070                     EUSART_Write@txData:	
  2671                           ; 1 bytes @ 0x0
  2672                           
  2673  0070                     Sensor_RawSample_Update@sensor:	
  2674                           ; 1 bytes @ 0x0
  2675                           
  2676  0070                     Sensor_setScanFunction@sensor:	
  2677                           ; 2 bytes @ 0x0
  2678                           
  2679  0070                     Sensor_isEnabled@sensor:	
  2680                           ; 2 bytes @ 0x0
  2681                           
  2682  0070                     Sensor_setActive@sensor:	
  2683                           ; 2 bytes @ 0x0
  2684                           
  2685  0070                     Sensor_setInactive@sensor:	
  2686                           ; 2 bytes @ 0x0
  2687                           
  2688  0070                     Sensor_setSampled@sensor:	
  2689                           ; 2 bytes @ 0x0
  2690                           
  2691  0070                     Button_Deviation_Update@button:	
  2692                           ; 2 bytes @ 0x0
  2693                           
  2694  0070                     Button_Baseline_Update@button:	
  2695                           ; 2 bytes @ 0x0
  2696                           
  2697  0070                     EUSART_SetFramingErrorHandler@interruptHandler:	
  2698                           ; 2 bytes @ 0x0
  2699                           
  2700  0070                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  2701                           ; 2 bytes @ 0x0
  2702                           
  2703  0070                     EUSART_SetErrorHandler@interruptHandler:	
  2704                           ; 2 bytes @ 0x0
  2705                           
  2706  0070                     DELAY_microseconds@microseconds:	
  2707                           ; 2 bytes @ 0x0
  2708                           
  2709  0070                     ___wmul@multiplier:	
  2710                           ; 2 bytes @ 0x0
  2711                           
  2712  0070                     abs@a:	
  2713                           ; 2 bytes @ 0x0
  2714                           
  2715  0070                     memcpy@d1:	
  2716                           ; 2 bytes @ 0x0
  2717                           
  2718                           
  2719                           ; 2 bytes @ 0x0
  2720  0070                     	ds	1
  2721  0071                     ??_Sensor_DefaultCallback:	
  2722  0071                     ??_Button_DefaultCallback:	
  2723                           ; 1 bytes @ 0x1
  2724                           
  2725  0071                     MTOUCH_Delay@i:	
  2726                           ; 1 bytes @ 0x1
  2727                           
  2728                           
  2729                           ; 1 bytes @ 0x1
  2730  0071                     	ds	1
  2731  0072                     ??_Sensor_isEnabled:	
  2732  0072                     ??_Sensor_RawSample_Update:	
  2733                           ; 1 bytes @ 0x2
  2734                           
  2735  0072                     ??_Sensor_setSampled:	
  2736                           ; 1 bytes @ 0x2
  2737                           
  2738  0072                     ??_abs:	
  2739                           ; 1 bytes @ 0x2
  2740                           
  2741  0072                     ??_Sensor_setActive:	
  2742                           ; 1 bytes @ 0x2
  2743                           
  2744  0072                     ??_Sensor_setInactive:	
  2745                           ; 1 bytes @ 0x2
  2746                           
  2747  0072                     ??_Sensor_setScanFunction:	
  2748                           ; 1 bytes @ 0x2
  2749                           
  2750  0072                     ??_Button_Deviation_Update:	
  2751                           ; 1 bytes @ 0x2
  2752                           
  2753  0072                     ??_Button_Baseline_Update:	
  2754                           ; 1 bytes @ 0x2
  2755                           
  2756  0072                     ??_EUSART_SetFramingErrorHandler:	
  2757                           ; 1 bytes @ 0x2
  2758                           
  2759  0072                     ??_EUSART_SetOverrunErrorHandler:	
  2760                           ; 1 bytes @ 0x2
  2761                           
  2762  0072                     ??_EUSART_SetErrorHandler:	
  2763                           ; 1 bytes @ 0x2
  2764                           
  2765  0072                     ??_DELAY_microseconds:	
  2766                           ; 1 bytes @ 0x2
  2767                           
  2768  0072                     ??_EUSART_Initialize:	
  2769                           ; 1 bytes @ 0x2
  2770                           
  2771  0072                     ___wmul@multiplicand:	
  2772                           ; 1 bytes @ 0x2
  2773                           
  2774  0072                     memcpy@s1:	
  2775                           ; 2 bytes @ 0x2
  2776                           
  2777                           
  2778                           ; 2 bytes @ 0x2
  2779  0072                     	ds	2
  2780  0074                     ??___wmul:	
  2781  0074                     ___wmul@product:	
  2782                           ; 1 bytes @ 0x4
  2783                           
  2784  0074                     memcpy@n:	
  2785                           ; 2 bytes @ 0x4
  2786                           
  2787                           
  2788                           ; 2 bytes @ 0x4
  2789  0074                     	ds	2
  2790  0076                     ??_MTOUCH_Button_isPressed:	
  2791  0076                     ??_MTOUCH_Sensor_Enable:	
  2792                           ; 1 bytes @ 0x6
  2793                           
  2794  0076                     ?_Sensor_Sampled_Reset:	
  2795                           ; 1 bytes @ 0x6
  2796                           
  2797  0076                     ??_Sensor_Acq_ExecuteScan:	
  2798                           ; 1 bytes @ 0x6
  2799                           
  2800  0076                     ??_memcpy:	
  2801                           ; 1 bytes @ 0x6
  2802                           
  2803  0076                     ?_Button_Tick_helper:	
  2804                           ; 1 bytes @ 0x6
  2805                           
  2806  0076                     ??_MTOUCH_Sensor_wasSampled:	
  2807                           ; 1 bytes @ 0x6
  2808                           
  2809  0076                     ??_MTOUCH_Button_Initialize:	
  2810                           ; 1 bytes @ 0x6
  2811                           
  2812  0076                     ?_MTOUCH_Sensor_RawSample_Get:	
  2813                           ; 1 bytes @ 0x6
  2814                           
  2815  0076                     Sensor_Sampled_Reset@sensor:	
  2816                           ; 2 bytes @ 0x6
  2817                           
  2818  0076                     Button_Tick_helper@button:	
  2819                           ; 2 bytes @ 0x6
  2820                           
  2821                           
  2822                           ; 2 bytes @ 0x6
  2823  0076                     	ds	1
  2824  0077                     memcpy@d:	
  2825                           
  2826                           ; 2 bytes @ 0x7
  2827  0077                     	ds	1
  2828  0078                     ??_MTOUCH_Sensor_Sampled_ResetAll:	
  2829  0078                     ??_Sensor_Sampled_Reset:	
  2830                           ; 1 bytes @ 0x8
  2831                           
  2832  0078                     ??_Button_Tick_helper:	
  2833                           ; 1 bytes @ 0x8
  2834                           
  2835  0078                     ??_MTOUCH_Sensor_RawSample_Get:	
  2836                           ; 1 bytes @ 0x8
  2837                           
  2838                           
  2839                           ; 1 bytes @ 0x8
  2840  0078                     	ds	1
  2841  0079                     memcpy@s:	
  2842                           
  2843                           ; 2 bytes @ 0x9
  2844  0079                     	ds	1
  2845  007A                     ??_MTOUCH_Button_Tick:	
  2846  007A                     MTOUCH_Sensor_Enable@sensor:	
  2847                           ; 1 bytes @ 0xA
  2848                           
  2849  007A                     MTOUCH_Sensor_wasSampled@sensor:	
  2850                           ; 1 bytes @ 0xA
  2851                           
  2852  007A                     MTOUCH_Button_Initialize@name:	
  2853                           ; 1 bytes @ 0xA
  2854                           
  2855  007A                     MTOUCH_Button_isPressed@name:	
  2856                           ; 1 bytes @ 0xA
  2857                           
  2858  007A                     Sensor_Acq_ExecuteScan@result:	
  2859                           ; 1 bytes @ 0xA
  2860                           
  2861  007A                     MTOUCH_Sensor_Sampled_ResetAll@sensor:	
  2862                           ; 2 bytes @ 0xA
  2863                           
  2864                           
  2865                           ; 2 bytes @ 0xA
  2866  007A                     	ds	1
  2867  007B                     MTOUCH_Sensor_Initialize@sensor:	
  2868  007B                     memcpy@tmp:	
  2869                           ; 1 bytes @ 0xB
  2870                           
  2871  007B                     MTOUCH_Button_Initialize@button:	
  2872                           ; 1 bytes @ 0xB
  2873                           
  2874                           
  2875                           ; 2 bytes @ 0xB
  2876  007B                     	ds	1
  2877  007C                     ??_MTOUCH_Sensor_InitializeAll:	
  2878  007C                     ?_Sensor_Acq_ExecutePacket:	
  2879                           ; 1 bytes @ 0xC
  2880                           
  2881  007C                     MTOUCH_Sensor_RawSample_Get@name:	
  2882                           ; 1 bytes @ 0xC
  2883                           
  2884  007C                     Sensor_Acq_ExecutePacket@sensor:	
  2885                           ; 1 bytes @ 0xC
  2886                           
  2887                           
  2888                           ; 2 bytes @ 0xC
  2889  007C                     	ds	1
  2890  007D                     ??_MTOUCH_Button_InitializeAll:	
  2891  007D                     ??_MTOUCH_Button_ServiceAll:	
  2892                           ; 1 bytes @ 0xD
  2893                           
  2894  007D                     ??_Button_Reading_Update:	
  2895                           ; 1 bytes @ 0xD
  2896                           
  2897  007D                     MTOUCH_Sensor_InitializeAll@sensor:	
  2898                           ; 1 bytes @ 0xD
  2899                           
  2900                           
  2901                           ; 1 bytes @ 0xD
  2902  007D                     	ds	1
  2903  007E                     ??_MTOUCH_Tick:	
  2904  007E                     ??_MTOUCH_Initialize:	
  2905                           ; 1 bytes @ 0xE
  2906                           
  2907  007E                     ??_SYSTEM_Initialize:	
  2908                           ; 1 bytes @ 0xE
  2909                           
  2910                           
  2911                           	psect	cstackBANK0
  2912  0020                     __pcstackBANK0:	
  2913                           ; 1 bytes @ 0xE
  2914                           
  2915  0020                     ??_Sensor_Acq_ExecutePacket:	
  2916  0020                     ?_Button_Baseline_Initialize:	
  2917                           ; 1 bytes @ 0x0
  2918                           
  2919  0020                     ?_Button_Reading_Update_Helper:	
  2920                           ; 1 bytes @ 0x0
  2921                           
  2922  0020                     ??_MTOUCH_Sensor_Initialize:	
  2923                           ; 1 bytes @ 0x0
  2924                           
  2925  0020                     MTOUCH_Button_InitializeAll@button:	
  2926                           ; 1 bytes @ 0x0
  2927                           
  2928  0020                     MTOUCH_Button_Tick@i:	
  2929                           ; 1 bytes @ 0x0
  2930                           
  2931  0020                     Button_Reading_Update_Helper@button:	
  2932                           ; 1 bytes @ 0x0
  2933                           
  2934  0020                     Button_Baseline_Initialize@button:	
  2935                           ; 2 bytes @ 0x0
  2936                           
  2937  0020                     Button_Deviation_Update@deviation:	
  2938                           ; 2 bytes @ 0x0
  2939                           
  2940                           
  2941                           ; 4 bytes @ 0x0
  2942  0020                     	ds	1
  2943  0021                     Sensor_Acq_ExecutePacket@ADCON0_temp:	
  2944                           
  2945                           ; 1 bytes @ 0x1
  2946  0021                     	ds	1
  2947  0022                     ??_Button_Baseline_Initialize:	
  2948  0022                     ??_Button_Reading_Update_Helper:	
  2949                           ; 1 bytes @ 0x2
  2950                           
  2951  0022                     Sensor_Acq_ExecutePacket@ADCON1_temp:	
  2952                           ; 1 bytes @ 0x2
  2953                           
  2954                           
  2955                           ; 1 bytes @ 0x2
  2956  0022                     	ds	1
  2957  0023                     Sensor_Acq_ExecutePacket@GIE_state:	
  2958                           
  2959                           ; 1 bytes @ 0x3
  2960  0023                     	ds	1
  2961  0024                     ?_Button_Reading_Update:	
  2962  0024                     Sensor_Acq_ExecutePacket@error:	
  2963                           ; 1 bytes @ 0x4
  2964                           
  2965  0024                     Button_Reading_Update@button:	
  2966                           ; 1 bytes @ 0x4
  2967                           
  2968                           
  2969                           ; 2 bytes @ 0x4
  2970  0024                     	ds	1
  2971  0025                     ?_Sensor_Acquisition:	
  2972  0025                     Sensor_Acquisition@sensor:	
  2973                           ; 1 bytes @ 0x5
  2974                           
  2975                           
  2976                           ; 2 bytes @ 0x5
  2977  0025                     	ds	1
  2978  0026                     ?_Button_State_Initializing:	
  2979  0026                     ?_Button_State_NotPressed:	
  2980                           ; 1 bytes @ 0x6
  2981                           
  2982  0026                     ?_Button_State_Pressed:	
  2983                           ; 1 bytes @ 0x6
  2984                           
  2985  0026                     Button_State_Initializing@button:	
  2986                           ; 1 bytes @ 0x6
  2987                           
  2988  0026                     Button_State_NotPressed@button:	
  2989                           ; 2 bytes @ 0x6
  2990                           
  2991  0026                     Button_State_Pressed@button:	
  2992                           ; 2 bytes @ 0x6
  2993                           
  2994                           
  2995                           ; 2 bytes @ 0x6
  2996  0026                     	ds	1
  2997  0027                     ??_Sensor_Acquisition:	
  2998                           
  2999                           ; 1 bytes @ 0x7
  3000  0027                     	ds	1
  3001  0028                     ??_Button_State_Initializing:	
  3002  0028                     ??_Button_State_NotPressed:	
  3003                           ; 1 bytes @ 0x8
  3004                           
  3005  0028                     ??_Button_State_Pressed:	
  3006                           ; 1 bytes @ 0x8
  3007                           
  3008  0028                     Sensor_Acquisition@retry:	
  3009                           ; 1 bytes @ 0x8
  3010                           
  3011                           
  3012                           ; 1 bytes @ 0x8
  3013  0028                     	ds	1
  3014  0029                     ??_Sensor_Service:	
  3015                           
  3016                           ; 1 bytes @ 0x9
  3017  0029                     	ds	3
  3018  002C                     ??_Button_Service:	
  3019                           
  3020                           ; 1 bytes @ 0xC
  3021  002C                     	ds	1
  3022  002D                     Sensor_Service@name:	
  3023                           
  3024                           ; 1 bytes @ 0xD
  3025  002D                     	ds	1
  3026  002E                     Sensor_Service@error:	
  3027                           
  3028                           ; 1 bytes @ 0xE
  3029  002E                     	ds	1
  3030  002F                     Sensor_Service@sensor:	
  3031                           
  3032                           ; 2 bytes @ 0xF
  3033  002F                     	ds	1
  3034  0030                     Button_Service@name:	
  3035                           
  3036                           ; 1 bytes @ 0x10
  3037  0030                     	ds	1
  3038  0031                     ??_MTOUCH_Sensor_SampleAll:	
  3039  0031                     Button_Service@button:	
  3040                           ; 1 bytes @ 0x11
  3041                           
  3042                           
  3043                           ; 2 bytes @ 0x11
  3044  0031                     	ds	1
  3045  0032                     MTOUCH_Sensor_SampleAll@sensor:	
  3046                           
  3047                           ; 1 bytes @ 0x12
  3048  0032                     	ds	1
  3049  0033                     MTOUCH_Button_ServiceAll@button:	
  3050                           
  3051                           ; 1 bytes @ 0x13
  3052  0033                     	ds	1
  3053  0034                     ??_MTOUCH_Service_Mainloop:	
  3054                           
  3055                           ; 1 bytes @ 0x14
  3056  0034                     	ds	1
  3057  0035                     ??_main:	
  3058                           
  3059                           ; 1 bytes @ 0x15
  3060  0035                     	ds	1
  3061  0036                     main@i:	
  3062                           
  3063                           ; 1 bytes @ 0x16
  3064  0036                     	ds	1
  3065                           
  3066                           	psect	maintext
  3067  03CA                     __pmaintext:	
  3068 ;;
  3069 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3070 ;;
  3071 ;; *************** function _main *****************
  3072 ;; Defined at:
  3073 ;;		line 49 in file "main.c"
  3074 ;; Parameters:    Size  Location     Type
  3075 ;;		None
  3076 ;; Auto vars:     Size  Location     Type
  3077 ;;  i               1   22[BANK0 ] unsigned char 
  3078 ;;  last_touch      1    0        unsigned char 
  3079 ;; Return value:  Size  Location     Type
  3080 ;;                  1    wreg      void 
  3081 ;; Registers used:
  3082 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3083 ;; Tracked objects:
  3084 ;;		On entry : B1F/0
  3085 ;;		On exit  : 0/0
  3086 ;;		Unchanged: 0/0
  3087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3088 ;;      Params:         0       0       0       0       0       0
  3089 ;;      Locals:         0       1       0       0       0       0
  3090 ;;      Temps:          0       1       0       0       0       0
  3091 ;;      Totals:         0       2       0       0       0       0
  3092 ;;Total ram usage:        2 bytes
  3093 ;; Hardware stack levels required when called:    7
  3094 ;; This function calls:
  3095 ;;		_DELAY_microseconds
  3096 ;;		_EUSART_Write
  3097 ;;		_EUSART_is_tx_ready
  3098 ;;		_MTOUCH_Button_isPressed
  3099 ;;		_MTOUCH_Service_Mainloop
  3100 ;;		_SYSTEM_Initialize
  3101 ;; This function is called by:
  3102 ;;		Startup code after reset
  3103 ;; This function uses a non-reentrant model
  3104 ;;
  3105                           
  3106                           
  3107                           ;psect for function _main
  3108  03CA                     _main:	
  3109  03CA                     l3383:	
  3110                           ;incstack = 0
  3111                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3112                           
  3113                           
  3114                           ;main.c: 51:     uint8_t i;;main.c: 52:     uint8_t last_touch;;main.c: 55:     SYSTEM_I
      +                          nitialize();
  3115  03CA  318C  2407  3183   	fcall	_SYSTEM_Initialize
  3116  03CD                     l757:	
  3117                           ;main.c: 73:     while (1) {
  3118                           
  3119                           
  3120                           ;main.c: 75:         if (MTOUCH_Service_Mainloop()) {
  3121  03CD  318C  24FD  3183   	fcall	_MTOUCH_Service_Mainloop
  3122  03D0  3A00               	xorlw	0
  3123  03D1  1903               	skipnz
  3124  03D2  2BD4               	goto	u1911
  3125  03D3  2BD5               	goto	u1910
  3126  03D4                     u1911:	
  3127  03D4  2BFE               	goto	l3403
  3128  03D5                     u1910:	
  3129  03D5                     l3385:	
  3130                           
  3131                           ;main.c: 76:             for (i = 0; i < 10; i++) {
  3132  03D5  0020               	movlb	0	; select bank0
  3133  03D6  01B6               	clrf	main@i
  3134  03D7                     l3391:	
  3135                           
  3136                           ;main.c: 77:                 if (MTOUCH_Button_isPressed(i)) {
  3137  03D7  0836               	movf	main@i,w
  3138  03D8  3180  20D4  3183   	fcall	_MTOUCH_Button_isPressed
  3139  03DB  3A00               	xorlw	0
  3140  03DC  1903               	skipnz
  3141  03DD  2BDF               	goto	u1921
  3142  03DE  2BE0               	goto	u1920
  3143  03DF                     u1921:	
  3144  03DF  2BF3               	goto	l3399
  3145  03E0                     u1920:	
  3146  03E0                     l3393:	
  3147                           
  3148                           ;main.c: 78:                     led = 120;
  3149  03E0  3078               	movlw	120
  3150  03E1  0020               	movlb	0	; select bank0
  3151  03E2  00BF               	movwf	_led
  3152  03E3  3000               	movlw	0
  3153  03E4  00C0               	movwf	_led+1
  3154  03E5                     l3395:	
  3155                           
  3156                           ;main.c: 79:                     if (EUSART_is_tx_ready()) {
  3157  03E5  318B  23D8  3183   	fcall	_EUSART_is_tx_ready
  3158  03E8  3A00               	xorlw	0
  3159  03E9  1903               	skipnz
  3160  03EA  2BEC               	goto	u1931
  3161  03EB  2BED               	goto	u1930
  3162  03EC                     u1931:	
  3163  03EC  2BF3               	goto	l3399
  3164  03ED                     u1930:	
  3165  03ED                     l3397:	
  3166                           
  3167                           ;main.c: 80:                         EUSART_Write('a' + i);
  3168  03ED  0020               	movlb	0	; select bank0
  3169  03EE  0836               	movf	main@i,w
  3170  03EF  3E61               	addlw	97
  3171  03F0  318B  239D  3183   	fcall	_EUSART_Write
  3172  03F3                     l3399:	
  3173                           
  3174                           ;main.c: 83:             }
  3175  03F3  3001               	movlw	1
  3176  03F4  0020               	movlb	0	; select bank0
  3177  03F5  00B5               	movwf	??_main
  3178  03F6  0835               	movf	??_main,w
  3179  03F7  07B6               	addwf	main@i,f
  3180  03F8                     l3401:	
  3181  03F8  300A               	movlw	10
  3182  03F9  0236               	subwf	main@i,w
  3183  03FA  1C03               	skipc
  3184  03FB  2BFD               	goto	u1941
  3185  03FC  2BFE               	goto	u1940
  3186  03FD                     u1941:	
  3187  03FD  2BD7               	goto	l3391
  3188  03FE                     u1940:	
  3189  03FE                     l3403:	
  3190                           
  3191                           ;main.c: 87:         if (led >= 1) {
  3192  03FE  0020               	movlb	0	; select bank0
  3193  03FF  083F               	movf	_led,w
  3194  0400  0440               	iorwf	_led+1,w
  3195  0401  1903               	btfsc	3,2
  3196  0402  2C04               	goto	u1951
  3197  0403  2C05               	goto	u1950
  3198  0404                     u1951:	
  3199  0404  2C0A               	goto	l3407
  3200  0405                     u1950:	
  3201  0405                     l3405:	
  3202                           
  3203                           ;main.c: 88:             led -= 1;
  3204  0405  3001               	movlw	1
  3205  0406  02BF               	subwf	_led,f
  3206  0407  3000               	movlw	0
  3207  0408  3BC0               	subwfb	_led+1,f
  3208                           
  3209                           ;main.c: 89:         } else {
  3210  0409  2C0C               	goto	l764
  3211  040A                     l3407:	
  3212                           
  3213                           ;main.c: 90:             led = 0;
  3214  040A  01BF               	clrf	_led
  3215  040B  01C0               	clrf	_led+1
  3216  040C                     l764:	
  3217                           ;main.c: 91:         }
  3218                           
  3219                           
  3220                           ;main.c: 93:         for (duty = 0; duty < 120; duty++) {
  3221  040C  01C1               	clrf	_duty
  3222  040D  01C2               	clrf	_duty+1
  3223  040E                     l3413:	
  3224                           
  3225                           ;main.c: 94:             if (led > duty) {
  3226  040E  0840               	movf	_led+1,w
  3227  040F  0242               	subwf	_duty+1,w
  3228  0410  1D03               	skipz
  3229  0411  2C14               	goto	u1965
  3230  0412  083F               	movf	_led,w
  3231  0413  0241               	subwf	_duty,w
  3232  0414                     u1965:	
  3233  0414  1803               	skipnc
  3234  0415  2C17               	goto	u1961
  3235  0416  2C18               	goto	u1960
  3236  0417                     u1961:	
  3237  0417  2C1B               	goto	l767
  3238  0418                     u1960:	
  3239  0418                     l3415:	
  3240                           
  3241                           ;main.c: 95:                 LATAbits.LATA3 = 1;
  3242  0418  0022               	movlb	2	; select bank2
  3243  0419  158C               	bsf	12,3	;volatile
  3244                           
  3245                           ;main.c: 96:             } else {
  3246  041A  2C1D               	goto	l3417
  3247  041B                     l767:	
  3248                           
  3249                           ;main.c: 97:                 LATAbits.LATA3 = 0;
  3250  041B  0022               	movlb	2	; select bank2
  3251  041C  118C               	bcf	12,3	;volatile
  3252  041D                     l3417:	
  3253                           
  3254                           ;main.c: 99:             DELAY_microseconds(1);
  3255  041D  3001               	movlw	1
  3256  041E  00F0               	movwf	DELAY_microseconds@microseconds
  3257  041F  3000               	movlw	0
  3258  0420  00F1               	movwf	DELAY_microseconds@microseconds+1
  3259  0421  3180  203C  3183   	fcall	_DELAY_microseconds
  3260  0424                     l3419:	
  3261                           
  3262                           ;main.c: 100:         }
  3263  0424  3001               	movlw	1
  3264  0425  0020               	movlb	0	; select bank0
  3265  0426  07C1               	addwf	_duty,f
  3266  0427  3000               	movlw	0
  3267  0428  3DC2               	addwfc	_duty+1,f
  3268  0429                     l3421:	
  3269  0429  3000               	movlw	0
  3270  042A  0242               	subwf	_duty+1,w
  3271  042B  3078               	movlw	120
  3272  042C  1903               	skipnz
  3273  042D  0241               	subwf	_duty,w
  3274  042E  1C03               	skipc
  3275  042F  2C31               	goto	u1971
  3276  0430  2C32               	goto	u1970
  3277  0431                     u1971:	
  3278  0431  2C0E               	goto	l3413
  3279  0432                     u1970:	
  3280  0432  2BCD               	goto	l757
  3281  0433  3180  2802         	ljmp	start
  3282  0435                     __end_of_main:	
  3283                           
  3284                           	psect	text1
  3285  0C07                     __ptext1:	
  3286 ;; *************** function _SYSTEM_Initialize *****************
  3287 ;; Defined at:
  3288 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3289 ;; Parameters:    Size  Location     Type
  3290 ;;		None
  3291 ;; Auto vars:     Size  Location     Type
  3292 ;;		None
  3293 ;; Return value:  Size  Location     Type
  3294 ;;                  1    wreg      void 
  3295 ;; Registers used:
  3296 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3297 ;; Tracked objects:
  3298 ;;		On entry : 0/0
  3299 ;;		On exit  : 0/0
  3300 ;;		Unchanged: 0/0
  3301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3302 ;;      Params:         0       0       0       0       0       0
  3303 ;;      Locals:         0       0       0       0       0       0
  3304 ;;      Temps:          0       0       0       0       0       0
  3305 ;;      Totals:         0       0       0       0       0       0
  3306 ;;Total ram usage:        0 bytes
  3307 ;; Hardware stack levels used:    1
  3308 ;; Hardware stack levels required when called:    5
  3309 ;; This function calls:
  3310 ;;		_EUSART_Initialize
  3311 ;;		_MTOUCH_Initialize
  3312 ;;		_OSCILLATOR_Initialize
  3313 ;;		_PIN_MANAGER_Initialize
  3314 ;;		_WDT_Initialize
  3315 ;; This function is called by:
  3316 ;;		_main
  3317 ;; This function uses a non-reentrant model
  3318 ;;
  3319                           
  3320                           
  3321                           ;psect for function _SYSTEM_Initialize
  3322  0C07                     _SYSTEM_Initialize:	
  3323  0C07                     l3273:	
  3324                           ;incstack = 0
  3325                           ; Regs used in _SYSTEM_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3326                           
  3327                           
  3328                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  3329  0C07  3180  2005  318C   	fcall	_PIN_MANAGER_Initialize
  3330                           
  3331                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  3332  0C0A  318B  23A7  318C   	fcall	_OSCILLATOR_Initialize
  3333                           
  3334                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  3335  0C0D  318B  2366  318C   	fcall	_WDT_Initialize
  3336                           
  3337                           ;mcc_generated_files/mcc.c: 56:     EUSART_Initialize();
  3338  0C10  318F  27DE  318C   	fcall	_EUSART_Initialize
  3339  0C13                     l3275:	
  3340                           
  3341                           ;mcc_generated_files/mcc.c: 57:     MTOUCH_Initialize();
  3342  0C13  318B  23CB  318C   	fcall	_MTOUCH_Initialize
  3343  0C16                     l697:	
  3344  0C16  0008               	return
  3345  0C17                     __end_of_SYSTEM_Initialize:	
  3346                           
  3347                           	psect	text2
  3348  0B66                     __ptext2:	
  3349 ;; *************** function _WDT_Initialize *****************
  3350 ;; Defined at:
  3351 ;;		line 74 in file "mcc_generated_files/mcc.c"
  3352 ;; Parameters:    Size  Location     Type
  3353 ;;		None
  3354 ;; Auto vars:     Size  Location     Type
  3355 ;;		None
  3356 ;; Return value:  Size  Location     Type
  3357 ;;                  1    wreg      void 
  3358 ;; Registers used:
  3359 ;;		wreg
  3360 ;; Tracked objects:
  3361 ;;		On entry : 0/0
  3362 ;;		On exit  : 0/0
  3363 ;;		Unchanged: 0/0
  3364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3365 ;;      Params:         0       0       0       0       0       0
  3366 ;;      Locals:         0       0       0       0       0       0
  3367 ;;      Temps:          0       0       0       0       0       0
  3368 ;;      Totals:         0       0       0       0       0       0
  3369 ;;Total ram usage:        0 bytes
  3370 ;; Hardware stack levels used:    1
  3371 ;; This function calls:
  3372 ;;		Nothing
  3373 ;; This function is called by:
  3374 ;;		_SYSTEM_Initialize
  3375 ;; This function uses a non-reentrant model
  3376 ;;
  3377                           
  3378                           
  3379                           ;psect for function _WDT_Initialize
  3380  0B66                     _WDT_Initialize:	
  3381  0B66                     l3199:	
  3382                           ;incstack = 0
  3383                           ; Regs used in _WDT_Initialize: [wreg]
  3384                           
  3385                           
  3386                           ;mcc_generated_files/mcc.c: 77:     WDTCON = 0x16;
  3387  0B66  3016               	movlw	22
  3388  0B67  0021               	movlb	1	; select bank1
  3389  0B68  0097               	movwf	23	;volatile
  3390  0B69                     l706:	
  3391  0B69  0008               	return
  3392  0B6A                     __end_of_WDT_Initialize:	
  3393                           
  3394                           	psect	text3
  3395  0005                     __ptext3:	
  3396 ;; *************** function _PIN_MANAGER_Initialize *****************
  3397 ;; Defined at:
  3398 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3399 ;; Parameters:    Size  Location     Type
  3400 ;;		None
  3401 ;; Auto vars:     Size  Location     Type
  3402 ;;		None
  3403 ;; Return value:  Size  Location     Type
  3404 ;;                  1    wreg      void 
  3405 ;; Registers used:
  3406 ;;		wreg, status,2
  3407 ;; Tracked objects:
  3408 ;;		On entry : 0/0
  3409 ;;		On exit  : 0/0
  3410 ;;		Unchanged: 0/0
  3411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3412 ;;      Params:         0       0       0       0       0       0
  3413 ;;      Locals:         0       0       0       0       0       0
  3414 ;;      Temps:          0       0       0       0       0       0
  3415 ;;      Totals:         0       0       0       0       0       0
  3416 ;;Total ram usage:        0 bytes
  3417 ;; Hardware stack levels used:    1
  3418 ;; This function calls:
  3419 ;;		Nothing
  3420 ;; This function is called by:
  3421 ;;		_SYSTEM_Initialize
  3422 ;; This function uses a non-reentrant model
  3423 ;;
  3424                           
  3425                           
  3426                           ;psect for function _PIN_MANAGER_Initialize
  3427  0005                     _PIN_MANAGER_Initialize:	
  3428  0005                     l3185:	
  3429                           ;incstack = 0
  3430                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3431                           
  3432                           
  3433                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  3434  0005  0022               	movlb	2	; select bank2
  3435  0006  018C               	clrf	12	;volatile
  3436                           
  3437                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  3438  0007  018D               	clrf	13	;volatile
  3439  0008                     l3187:	
  3440                           
  3441                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0xE0;
  3442  0008  30E0               	movlw	224
  3443  0009  0021               	movlb	1	; select bank1
  3444  000A  008C               	movwf	12	;volatile
  3445  000B                     l3189:	
  3446                           
  3447                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0x01;
  3448  000B  3001               	movlw	1
  3449  000C  008D               	movwf	13	;volatile
  3450                           
  3451                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0x00;
  3452  000D  0023               	movlb	3	; select bank3
  3453  000E  018D               	clrf	13	;volatile
  3454                           
  3455                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x00;
  3456  000F  018C               	clrf	12	;volatile
  3457                           
  3458                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  3459  0010  0024               	movlb	4	; select bank4
  3460  0011  018D               	clrf	13	;volatile
  3461                           
  3462                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  3463  0012  018C               	clrf	12	;volatile
  3464  0013                     l3191:	
  3465                           
  3466                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  3467  0013  0021               	movlb	1	; select bank1
  3468  0014  1795               	bsf	21,7	;volatile
  3469                           
  3470                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0x00;
  3471  0015  0022               	movlb	2	; select bank2
  3472  0016  019D               	clrf	29	;volatile
  3473                           
  3474                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x00;
  3475  0017  019E               	clrf	30	;volatile
  3476  0018                     l731:	
  3477  0018  0008               	return
  3478  0019                     __end_of_PIN_MANAGER_Initialize:	
  3479                           
  3480                           	psect	text4
  3481  0BA7                     __ptext4:	
  3482 ;; *************** function _OSCILLATOR_Initialize *****************
  3483 ;; Defined at:
  3484 ;;		line 60 in file "mcc_generated_files/mcc.c"
  3485 ;; Parameters:    Size  Location     Type
  3486 ;;		None
  3487 ;; Auto vars:     Size  Location     Type
  3488 ;;		None
  3489 ;; Return value:  Size  Location     Type
  3490 ;;                  1    wreg      void 
  3491 ;; Registers used:
  3492 ;;		wreg, status,2
  3493 ;; Tracked objects:
  3494 ;;		On entry : 0/0
  3495 ;;		On exit  : 0/0
  3496 ;;		Unchanged: 0/0
  3497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3498 ;;      Params:         0       0       0       0       0       0
  3499 ;;      Locals:         0       0       0       0       0       0
  3500 ;;      Temps:          0       0       0       0       0       0
  3501 ;;      Totals:         0       0       0       0       0       0
  3502 ;;Total ram usage:        0 bytes
  3503 ;; Hardware stack levels used:    1
  3504 ;; This function calls:
  3505 ;;		Nothing
  3506 ;; This function is called by:
  3507 ;;		_SYSTEM_Initialize
  3508 ;; This function uses a non-reentrant model
  3509 ;;
  3510                           
  3511                           
  3512                           ;psect for function _OSCILLATOR_Initialize
  3513  0BA7                     _OSCILLATOR_Initialize:	
  3514  0BA7                     l3193:	
  3515                           ;incstack = 0
  3516                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3517                           
  3518                           
  3519                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x70;
  3520  0BA7  3070               	movlw	112
  3521  0BA8  0021               	movlb	1	; select bank1
  3522  0BA9  0099               	movwf	25	;volatile
  3523  0BAA                     l3195:	
  3524                           
  3525                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
  3526  0BAA  0198               	clrf	24	;volatile
  3527  0BAB                     l3197:	
  3528                           
  3529                           ;mcc_generated_files/mcc.c: 67:     BORCON = 0x00;
  3530  0BAB  0022               	movlb	2	; select bank2
  3531  0BAC  0196               	clrf	22	;volatile
  3532  0BAD                     l700:	
  3533                           ;mcc_generated_files/mcc.c: 70:     {;mcc_generated_files/mcc.c: 71:     }
  3534                           
  3535                           
  3536                           ;mcc_generated_files/mcc.c: 69:     while(PLLR == 0)
  3537  0BAD  0021               	movlb	1	; select bank1
  3538  0BAE  1F1A               	btfss	26,6	;volatile
  3539  0BAF  2BB1               	goto	u1601
  3540  0BB0  2BB2               	goto	u1600
  3541  0BB1                     u1601:	
  3542  0BB1  2BAD               	goto	l700
  3543  0BB2                     u1600:	
  3544  0BB2                     l703:	
  3545  0BB2  0008               	return
  3546  0BB3                     __end_of_OSCILLATOR_Initialize:	
  3547                           
  3548                           	psect	text5
  3549  0BCB                     __ptext5:	
  3550 ;; *************** function _MTOUCH_Initialize *****************
  3551 ;; Defined at:
  3552 ;;		line 80 in file "mcc_generated_files/mtouch/mtouch.c"
  3553 ;; Parameters:    Size  Location     Type
  3554 ;;		None
  3555 ;; Auto vars:     Size  Location     Type
  3556 ;;		None
  3557 ;; Return value:  Size  Location     Type
  3558 ;;                  1    wreg      void 
  3559 ;; Registers used:
  3560 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3561 ;; Tracked objects:
  3562 ;;		On entry : 0/0
  3563 ;;		On exit  : 0/0
  3564 ;;		Unchanged: 0/0
  3565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3566 ;;      Params:         0       0       0       0       0       0
  3567 ;;      Locals:         0       0       0       0       0       0
  3568 ;;      Temps:          0       0       0       0       0       0
  3569 ;;      Totals:         0       0       0       0       0       0
  3570 ;;Total ram usage:        0 bytes
  3571 ;; Hardware stack levels used:    1
  3572 ;; Hardware stack levels required when called:    4
  3573 ;; This function calls:
  3574 ;;		_MTOUCH_Button_InitializeAll
  3575 ;;		_MTOUCH_Sensor_InitializeAll
  3576 ;;		_MTOUCH_Sensor_Sampled_ResetAll
  3577 ;;		_MTOUCH_Sensor_Scan_Initialize
  3578 ;; This function is called by:
  3579 ;;		_SYSTEM_Initialize
  3580 ;; This function uses a non-reentrant model
  3581 ;;
  3582                           
  3583                           
  3584                           ;psect for function _MTOUCH_Initialize
  3585  0BCB                     _MTOUCH_Initialize:	
  3586  0BCB                     l3125:	
  3587                           ;incstack = 0
  3588                           ; Regs used in _MTOUCH_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3589                           
  3590                           
  3591                           ;mcc_generated_files/mtouch/mtouch.c: 82:     MTOUCH_Sensor_InitializeAll();
  3592  0BCB  318B  23F7  318B   	fcall	_MTOUCH_Sensor_InitializeAll
  3593  0BCE                     l3127:	
  3594                           
  3595                           ;mcc_generated_files/mtouch/mtouch.c: 83:     MTOUCH_Button_InitializeAll();
  3596  0BCE  318F  279C  318B   	fcall	_MTOUCH_Button_InitializeAll
  3597  0BD1                     l3129:	
  3598                           
  3599                           ;mcc_generated_files/mtouch/mtouch.c: 84:     MTOUCH_Sensor_Sampled_ResetAll();
  3600  0BD1  3181  2154  318B   	fcall	_MTOUCH_Sensor_Sampled_ResetAll
  3601  0BD4                     l3131:	
  3602                           
  3603                           ;mcc_generated_files/mtouch/mtouch.c: 85:     MTOUCH_Sensor_Scan_Initialize();
  3604  0BD4  318B  236A  318B   	fcall	_MTOUCH_Sensor_Scan_Initialize
  3605  0BD7                     l47:	
  3606  0BD7  0008               	return
  3607  0BD8                     __end_of_MTOUCH_Initialize:	
  3608                           
  3609                           	psect	text6
  3610  0BF7                     __ptext6:	
  3611 ;; *************** function _MTOUCH_Sensor_InitializeAll *****************
  3612 ;; Defined at:
  3613 ;;		line 165 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  3614 ;; Parameters:    Size  Location     Type
  3615 ;;		None
  3616 ;; Auto vars:     Size  Location     Type
  3617 ;;  sensor          1   13[COMMON] enum E2470
  3618 ;; Return value:  Size  Location     Type
  3619 ;;                  1    wreg      void 
  3620 ;; Registers used:
  3621 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3622 ;; Tracked objects:
  3623 ;;		On entry : 0/0
  3624 ;;		On exit  : 0/0
  3625 ;;		Unchanged: 0/0
  3626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3627 ;;      Params:         0       0       0       0       0       0
  3628 ;;      Locals:         1       0       0       0       0       0
  3629 ;;      Temps:          1       0       0       0       0       0
  3630 ;;      Totals:         2       0       0       0       0       0
  3631 ;;Total ram usage:        2 bytes
  3632 ;; Hardware stack levels used:    1
  3633 ;; Hardware stack levels required when called:    3
  3634 ;; This function calls:
  3635 ;;		_MTOUCH_Sensor_Initialize
  3636 ;; This function is called by:
  3637 ;;		_MTOUCH_Initialize
  3638 ;; This function uses a non-reentrant model
  3639 ;;
  3640                           
  3641                           
  3642                           ;psect for function _MTOUCH_Sensor_InitializeAll
  3643  0BF7                     _MTOUCH_Sensor_InitializeAll:	
  3644  0BF7                     l3029:	
  3645                           ;incstack = 0
  3646                           ; Regs used in _MTOUCH_Sensor_InitializeAll: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  3647                           
  3648                           
  3649                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 167:     enum mtouch_sensor_names sensor;;m
      +                          cc_generated_files/mtouch/mtouch_sensor.c: 168:     for (sensor = 0; sensor < 10u; senso
      +                          r++)
  3650  0BF7  01FD               	clrf	MTOUCH_Sensor_InitializeAll@sensor
  3651  0BF8                     l3035:	
  3652                           
  3653                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 169:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 170:         MTOUCH_Sensor_Initialize(sensor);
  3654  0BF8  087D               	movf	MTOUCH_Sensor_InitializeAll@sensor,w
  3655  0BF9  3180  2019  318B   	fcall	_MTOUCH_Sensor_Initialize
  3656  0BFC                     l3037:	
  3657                           
  3658                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 171:     }
  3659  0BFC  3001               	movlw	1
  3660  0BFD  00FC               	movwf	??_MTOUCH_Sensor_InitializeAll
  3661  0BFE  087C               	movf	??_MTOUCH_Sensor_InitializeAll,w
  3662  0BFF  07FD               	addwf	MTOUCH_Sensor_InitializeAll@sensor,f
  3663  0C00                     l3039:	
  3664  0C00  300A               	movlw	10
  3665  0C01  027D               	subwf	MTOUCH_Sensor_InitializeAll@sensor,w
  3666  0C02  1C03               	skipc
  3667  0C03  2C05               	goto	u1471
  3668  0C04  2C06               	goto	u1470
  3669  0C05                     u1471:	
  3670  0C05  2BF8               	goto	l3035
  3671  0C06                     u1470:	
  3672  0C06                     l231:	
  3673  0C06  0008               	return
  3674  0C07                     __end_of_MTOUCH_Sensor_InitializeAll:	
  3675                           
  3676                           	psect	text7
  3677  0019                     __ptext7:	
  3678 ;; *************** function _MTOUCH_Sensor_Initialize *****************
  3679 ;; Defined at:
  3680 ;;		line 151 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  3681 ;; Parameters:    Size  Location     Type
  3682 ;;  sensor          1    wreg     enum E2470
  3683 ;; Auto vars:     Size  Location     Type
  3684 ;;  sensor          1   11[COMMON] enum E2470
  3685 ;; Return value:  Size  Location     Type
  3686 ;;                  1    wreg      enum E2481
  3687 ;; Registers used:
  3688 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3689 ;; Tracked objects:
  3690 ;;		On entry : 0/0
  3691 ;;		On exit  : 0/0
  3692 ;;		Unchanged: 0/0
  3693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3694 ;;      Params:         0       0       0       0       0       0
  3695 ;;      Locals:         1       0       0       0       0       0
  3696 ;;      Temps:          0       4       0       0       0       0
  3697 ;;      Totals:         1       4       0       0       0       0
  3698 ;;Total ram usage:        5 bytes
  3699 ;; Hardware stack levels used:    1
  3700 ;; Hardware stack levels required when called:    2
  3701 ;; This function calls:
  3702 ;;		_MTOUCH_Sensor_Enable
  3703 ;;		_Sensor_Sampled_Reset
  3704 ;;		___wmul
  3705 ;; This function is called by:
  3706 ;;		_MTOUCH_Sensor_InitializeAll
  3707 ;; This function uses a non-reentrant model
  3708 ;;
  3709                           
  3710                           
  3711                           ;psect for function _MTOUCH_Sensor_Initialize
  3712  0019                     _MTOUCH_Sensor_Initialize:	
  3713                           
  3714                           ;incstack = 0
  3715                           ; Regs used in _MTOUCH_Sensor_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  3716                           ;MTOUCH_Sensor_Initialize@sensor stored from wreg
  3717  0019  00FB               	movwf	MTOUCH_Sensor_Initialize@sensor
  3718  001A                     l2875:	
  3719                           
  3720                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 151: enum mtouch_sensor_error MTOUCH_Sensor
      +                          _Initialize(enum mtouch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c:
      +                           152: {;mcc_generated_files/mtouch/mtouch_sensor.c: 153:     MTOUCH_Sensor_Enable(sensor
      +                          );
  3721  001A  087B               	movf	MTOUCH_Sensor_Initialize@sensor,w
  3722  001B  318F  27BD  3180   	fcall	_MTOUCH_Sensor_Enable
  3723                           
  3724                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 154:     Sensor_Sampled_Reset(&mtouch_senso
      +                          r[sensor]);
  3725  001E  087B               	movf	MTOUCH_Sensor_Initialize@sensor,w
  3726  001F  0020               	movlb	0	; select bank0
  3727  0020  00A0               	movwf	??_MTOUCH_Sensor_Initialize
  3728  0021  01A1               	clrf	??_MTOUCH_Sensor_Initialize+1
  3729  0022  0820               	movf	??_MTOUCH_Sensor_Initialize,w
  3730  0023  00F0               	movwf	___wmul@multiplier
  3731  0024  0821               	movf	??_MTOUCH_Sensor_Initialize+1,w
  3732  0025  00F1               	movwf	___wmul@multiplier+1
  3733  0026  3009               	movlw	9
  3734  0027  00F2               	movwf	___wmul@multiplicand
  3735  0028  3000               	movlw	0
  3736  0029  00F3               	movwf	___wmul@multiplicand+1
  3737  002A  318C  24DE  3180   	fcall	___wmul
  3738  002D  306C               	movlw	108
  3739  002E  0020               	movlb	0	; select bank0
  3740  002F  00A2               	movwf	??_MTOUCH_Sensor_Initialize+2
  3741  0030  3020               	movlw	32
  3742  0031  00A3               	movwf	??_MTOUCH_Sensor_Initialize+3
  3743  0032  0870               	movf	?___wmul,w
  3744  0033  0722               	addwf	??_MTOUCH_Sensor_Initialize+2,w
  3745  0034  00F6               	movwf	Sensor_Sampled_Reset@sensor
  3746  0035  0871               	movf	?___wmul+1,w
  3747  0036  3D23               	addwfc	??_MTOUCH_Sensor_Initialize+3,w
  3748  0037  00F7               	movwf	Sensor_Sampled_Reset@sensor+1
  3749  0038  318B  2396  3180   	fcall	_Sensor_Sampled_Reset
  3750  003B                     l226:	
  3751  003B  0008               	return
  3752  003C                     __end_of_MTOUCH_Sensor_Initialize:	
  3753                           
  3754                           	psect	text8
  3755  0FBD                     __ptext8:	
  3756 ;; *************** function _MTOUCH_Sensor_Enable *****************
  3757 ;; Defined at:
  3758 ;;		line 489 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  3759 ;; Parameters:    Size  Location     Type
  3760 ;;  sensor          1    wreg     enum E2470
  3761 ;; Auto vars:     Size  Location     Type
  3762 ;;  sensor          1   10[COMMON] enum E2470
  3763 ;; Return value:  Size  Location     Type
  3764 ;;                  1    wreg      void 
  3765 ;; Registers used:
  3766 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3767 ;; Tracked objects:
  3768 ;;		On entry : 0/0
  3769 ;;		On exit  : 0/0
  3770 ;;		Unchanged: 0/0
  3771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3772 ;;      Params:         0       0       0       0       0       0
  3773 ;;      Locals:         1       0       0       0       0       0
  3774 ;;      Temps:          4       0       0       0       0       0
  3775 ;;      Totals:         5       0       0       0       0       0
  3776 ;;Total ram usage:        5 bytes
  3777 ;; Hardware stack levels used:    1
  3778 ;; Hardware stack levels required when called:    1
  3779 ;; This function calls:
  3780 ;;		___wmul
  3781 ;; This function is called by:
  3782 ;;		_MTOUCH_Sensor_Initialize
  3783 ;; This function uses a non-reentrant model
  3784 ;;
  3785                           
  3786                           
  3787                           ;psect for function _MTOUCH_Sensor_Enable
  3788  0FBD                     _MTOUCH_Sensor_Enable:	
  3789                           
  3790                           ;incstack = 0
  3791                           ; Regs used in _MTOUCH_Sensor_Enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3792                           ;MTOUCH_Sensor_Enable@sensor stored from wreg
  3793  0FBD  00FA               	movwf	MTOUCH_Sensor_Enable@sensor
  3794  0FBE                     l2773:	
  3795                           
  3796                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 489: void MTOUCH_Sensor_Enable(enum mtouch_
      +                          sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 490: {;mcc_generated_fi
      +                          les/mtouch/mtouch_sensor.c: 491:     if(sensor < 10u)
  3797  0FBE  300A               	movlw	10
  3798  0FBF  027A               	subwf	MTOUCH_Sensor_Enable@sensor,w
  3799  0FC0  1803               	skipnc
  3800  0FC1  2FC3               	goto	u1121
  3801  0FC2  2FC4               	goto	u1120
  3802  0FC3                     u1121:	
  3803  0FC3  2FDD               	goto	l332
  3804  0FC4                     u1120:	
  3805  0FC4                     l2775:	
  3806                           
  3807                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 492:         mtouch_sensor[sensor].enabled 
      +                          = 1;
  3808  0FC4  087A               	movf	MTOUCH_Sensor_Enable@sensor,w
  3809  0FC5  00F6               	movwf	??_MTOUCH_Sensor_Enable
  3810  0FC6  01F7               	clrf	??_MTOUCH_Sensor_Enable+1
  3811  0FC7  0876               	movf	??_MTOUCH_Sensor_Enable,w
  3812  0FC8  00F0               	movwf	___wmul@multiplier
  3813  0FC9  0877               	movf	??_MTOUCH_Sensor_Enable+1,w
  3814  0FCA  00F1               	movwf	___wmul@multiplier+1
  3815  0FCB  3009               	movlw	9
  3816  0FCC  00F2               	movwf	___wmul@multiplicand
  3817  0FCD  3000               	movlw	0
  3818  0FCE  00F3               	movwf	___wmul@multiplicand+1
  3819  0FCF  318C  24DE  318F   	fcall	___wmul
  3820  0FD2  3074               	movlw	116
  3821  0FD3  00F8               	movwf	??_MTOUCH_Sensor_Enable+2
  3822  0FD4  3020               	movlw	32
  3823  0FD5  00F9               	movwf	??_MTOUCH_Sensor_Enable+3
  3824  0FD6  0870               	movf	?___wmul,w
  3825  0FD7  0778               	addwf	??_MTOUCH_Sensor_Enable+2,w
  3826  0FD8  0086               	movwf	6
  3827  0FD9  0871               	movf	?___wmul+1,w
  3828  0FDA  3D79               	addwfc	??_MTOUCH_Sensor_Enable+3,w
  3829  0FDB  0087               	movwf	7
  3830  0FDC  1401               	bsf	1,0
  3831  0FDD                     l332:	
  3832  0FDD  0008               	return
  3833  0FDE                     __end_of_MTOUCH_Sensor_Enable:	
  3834                           
  3835                           	psect	text9
  3836  0F9C                     __ptext9:	
  3837 ;; *************** function _MTOUCH_Button_InitializeAll *****************
  3838 ;; Defined at:
  3839 ;;		line 248 in file "mcc_generated_files/mtouch/mtouch_button.c"
  3840 ;; Parameters:    Size  Location     Type
  3841 ;;		None
  3842 ;; Auto vars:     Size  Location     Type
  3843 ;;  button          1    0[BANK0 ] enum E2696
  3844 ;; Return value:  Size  Location     Type
  3845 ;;                  1    wreg      void 
  3846 ;; Registers used:
  3847 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3848 ;; Tracked objects:
  3849 ;;		On entry : 0/0
  3850 ;;		On exit  : 0/0
  3851 ;;		Unchanged: 0/0
  3852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3853 ;;      Params:         0       0       0       0       0       0
  3854 ;;      Locals:         0       1       0       0       0       0
  3855 ;;      Temps:          1       0       0       0       0       0
  3856 ;;      Totals:         1       1       0       0       0       0
  3857 ;;Total ram usage:        2 bytes
  3858 ;; Hardware stack levels used:    1
  3859 ;; Hardware stack levels required when called:    2
  3860 ;; This function calls:
  3861 ;;		_MTOUCH_Button_Initialize
  3862 ;;		_memcpy
  3863 ;; This function is called by:
  3864 ;;		_MTOUCH_Initialize
  3865 ;; This function uses a non-reentrant model
  3866 ;;
  3867                           
  3868                           
  3869                           ;psect for function _MTOUCH_Button_InitializeAll
  3870  0F9C                     _MTOUCH_Button_InitializeAll:	
  3871  0F9C                     l3041:	
  3872                           ;incstack = 0
  3873                           ; Regs used in _MTOUCH_Button_InitializeAll: [wreg-fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  3874                           
  3875                           
  3876                           ;mcc_generated_files/mtouch/mtouch_button.c: 250:     enum mtouch_button_names button;;m
      +                          cc_generated_files/mtouch/mtouch_button.c: 252:     memcpy(mtouch_button,mtouch_button_i
      +                          nit,sizeof(mtouch_button_init));
  3877  0F9C  30C6               	movlw	198
  3878  0F9D  00F0               	movwf	memcpy@d1
  3879  0F9E  3020               	movlw	32
  3880  0F9F  00F1               	movwf	memcpy@d1+1
  3881  0FA0  3000               	movlw	low (_mtouch_button_init| (0+32768))
  3882  0FA1  00F2               	movwf	memcpy@s1
  3883  0FA2  3088               	movlw	high (_mtouch_button_init| (0+32768))
  3884  0FA3  00F3               	movwf	memcpy@s1+1
  3885  0FA4  30AA               	movlw	170
  3886  0FA5  00F4               	movwf	memcpy@n
  3887  0FA6  3000               	movlw	0
  3888  0FA7  00F5               	movwf	memcpy@n+1
  3889  0FA8  3181  2128  318F   	fcall	_memcpy
  3890  0FAB                     l3043:	
  3891                           
  3892                           ;mcc_generated_files/mtouch/mtouch_button.c: 254:     for (button = 0; button < 10u; but
      +                          ton++)
  3893  0FAB  0020               	movlb	0	; select bank0
  3894  0FAC  01A0               	clrf	MTOUCH_Button_InitializeAll@button
  3895  0FAD                     l3049:	
  3896                           
  3897                           ;mcc_generated_files/mtouch/mtouch_button.c: 255:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 256:         MTOUCH_Button_Initialize(button);
  3898  0FAD  0820               	movf	MTOUCH_Button_InitializeAll@button,w
  3899  0FAE  3181  21B0  318F   	fcall	_MTOUCH_Button_Initialize
  3900  0FB1                     l3051:	
  3901                           
  3902                           ;mcc_generated_files/mtouch/mtouch_button.c: 257:     }
  3903  0FB1  3001               	movlw	1
  3904  0FB2  00FD               	movwf	??_MTOUCH_Button_InitializeAll
  3905  0FB3  087D               	movf	??_MTOUCH_Button_InitializeAll,w
  3906  0FB4  0020               	movlb	0	; select bank0
  3907  0FB5  07A0               	addwf	MTOUCH_Button_InitializeAll@button,f
  3908  0FB6                     l3053:	
  3909  0FB6  300A               	movlw	10
  3910  0FB7  0220               	subwf	MTOUCH_Button_InitializeAll@button,w
  3911  0FB8  1C03               	skipc
  3912  0FB9  2FBB               	goto	u1481
  3913  0FBA  2FBC               	goto	u1480
  3914  0FBB                     u1481:	
  3915  0FBB  2FAD               	goto	l3049
  3916  0FBC                     u1480:	
  3917  0FBC                     l441:	
  3918  0FBC  0008               	return
  3919  0FBD                     __end_of_MTOUCH_Button_InitializeAll:	
  3920                           
  3921                           	psect	text10
  3922  0128                     __ptext10:	
  3923 ;; *************** function _memcpy *****************
  3924 ;; Defined at:
  3925 ;;		line 4 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/memcpy.c"
  3926 ;; Parameters:    Size  Location     Type
  3927 ;;  d1              2    0[COMMON] PTR void 
  3928 ;;		 -> mtouch_button(170), 
  3929 ;;  s1              2    2[COMMON] PTR const void 
  3930 ;;		 -> mtouch_button_init(170), 
  3931 ;;  n               2    4[COMMON] unsigned int 
  3932 ;; Auto vars:     Size  Location     Type
  3933 ;;  s               2    9[COMMON] PTR const unsigned char 
  3934 ;;		 -> mtouch_button_init(170), 
  3935 ;;  d               2    7[COMMON] PTR unsigned char 
  3936 ;;		 -> mtouch_button(170), 
  3937 ;;  tmp             1   11[COMMON] unsigned char 
  3938 ;; Return value:  Size  Location     Type
  3939 ;;                  2    0[COMMON] PTR void 
  3940 ;; Registers used:
  3941 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  3942 ;; Tracked objects:
  3943 ;;		On entry : 0/0
  3944 ;;		On exit  : 0/0
  3945 ;;		Unchanged: 0/0
  3946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3947 ;;      Params:         6       0       0       0       0       0
  3948 ;;      Locals:         5       0       0       0       0       0
  3949 ;;      Temps:          1       0       0       0       0       0
  3950 ;;      Totals:        12       0       0       0       0       0
  3951 ;;Total ram usage:       12 bytes
  3952 ;; Hardware stack levels used:    1
  3953 ;; This function calls:
  3954 ;;		Nothing
  3955 ;; This function is called by:
  3956 ;;		_MTOUCH_Button_InitializeAll
  3957 ;; This function uses a non-reentrant model
  3958 ;;
  3959                           
  3960                           
  3961                           ;psect for function _memcpy
  3962  0128                     _memcpy:	
  3963  0128                     l2933:	
  3964                           ;incstack = 0
  3965                           ; Regs used in _memcpy: [wreg-fsr1h+status,2+status,0+pclath]
  3966                           
  3967  0128  0873               	movf	memcpy@s1+1,w
  3968  0129  00FA               	movwf	memcpy@s+1
  3969  012A  0872               	movf	memcpy@s1,w
  3970  012B  00F9               	movwf	memcpy@s
  3971  012C  0871               	movf	memcpy@d1+1,w
  3972  012D  00F8               	movwf	memcpy@d+1
  3973  012E  0870               	movf	memcpy@d1,w
  3974  012F  00F7               	movwf	memcpy@d
  3975  0130  2947               	goto	l2943
  3976  0131                     l2935:	
  3977  0131  0879               	movf	memcpy@s,w
  3978  0132  0084               	movwf	4
  3979  0133  087A               	movf	memcpy@s+1,w
  3980  0134  0085               	movwf	5
  3981  0135  0800               	movf	0,w	;code access
  3982  0136  00F6               	movwf	??_memcpy
  3983  0137  0876               	movf	??_memcpy,w
  3984  0138  00FB               	movwf	memcpy@tmp
  3985  0139                     l2937:	
  3986  0139  3001               	movlw	1
  3987  013A  07F9               	addwf	memcpy@s,f
  3988  013B  3000               	movlw	0
  3989  013C  3DFA               	addwfc	memcpy@s+1,f
  3990  013D                     l2939:	
  3991  013D  0877               	movf	memcpy@d,w
  3992  013E  0086               	movwf	6
  3993  013F  0878               	movf	memcpy@d+1,w
  3994  0140  0087               	movwf	7
  3995  0141  087B               	movf	memcpy@tmp,w
  3996  0142  0081               	movwf	1
  3997  0143                     l2941:	
  3998  0143  3001               	movlw	1
  3999  0144  07F7               	addwf	memcpy@d,f
  4000  0145  3000               	movlw	0
  4001  0146  3DF8               	addwfc	memcpy@d+1,f
  4002  0147                     l2943:	
  4003  0147  3001               	movlw	1
  4004  0148  02F4               	subwf	memcpy@n,f
  4005  0149  3000               	movlw	0
  4006  014A  3BF5               	subwfb	memcpy@n+1,f
  4007  014B  0A74               	incf	memcpy@n,w
  4008  014C  1D03               	skipz
  4009  014D  2952               	goto	u1291
  4010  014E  0A75               	incf	memcpy@n+1,w
  4011  014F  1D03               	btfss	3,2
  4012  0150  2952               	goto	u1291
  4013  0151  2953               	goto	u1290
  4014  0152                     u1291:	
  4015  0152  2931               	goto	l2935
  4016  0153                     u1290:	
  4017  0153                     l1401:	
  4018  0153  0008               	return
  4019  0154                     __end_of_memcpy:	
  4020                           
  4021                           	psect	text11
  4022  0FDE                     __ptext11:	
  4023 ;; *************** function _EUSART_Initialize *****************
  4024 ;; Defined at:
  4025 ;;		line 66 in file "mcc_generated_files/eusart.c"
  4026 ;; Parameters:    Size  Location     Type
  4027 ;;		None
  4028 ;; Auto vars:     Size  Location     Type
  4029 ;;		None
  4030 ;; Return value:  Size  Location     Type
  4031 ;;                  1    wreg      void 
  4032 ;; Registers used:
  4033 ;;		wreg, status,2, status,0, pclath, cstack
  4034 ;; Tracked objects:
  4035 ;;		On entry : 0/0
  4036 ;;		On exit  : 0/0
  4037 ;;		Unchanged: 0/0
  4038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4039 ;;      Params:         0       0       0       0       0       0
  4040 ;;      Locals:         0       0       0       0       0       0
  4041 ;;      Temps:          0       0       0       0       0       0
  4042 ;;      Totals:         0       0       0       0       0       0
  4043 ;;Total ram usage:        0 bytes
  4044 ;; Hardware stack levels used:    1
  4045 ;; Hardware stack levels required when called:    1
  4046 ;; This function calls:
  4047 ;;		_EUSART_SetErrorHandler
  4048 ;;		_EUSART_SetFramingErrorHandler
  4049 ;;		_EUSART_SetOverrunErrorHandler
  4050 ;; This function is called by:
  4051 ;;		_SYSTEM_Initialize
  4052 ;; This function uses a non-reentrant model
  4053 ;;
  4054                           
  4055                           
  4056                           ;psect for function _EUSART_Initialize
  4057  0FDE                     _EUSART_Initialize:	
  4058  0FDE                     l3173:	
  4059                           ;incstack = 0
  4060                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4061                           
  4062                           
  4063                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  4064  0FDE  3008               	movlw	8
  4065  0FDF  0023               	movlb	3	; select bank3
  4066  0FE0  009F               	movwf	31	;volatile
  4067                           
  4068                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x80;
  4069  0FE1  3080               	movlw	128
  4070  0FE2  009D               	movwf	29	;volatile
  4071                           
  4072                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  4073  0FE3  3024               	movlw	36
  4074  0FE4  009E               	movwf	30	;volatile
  4075                           
  4076                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x8A;
  4077  0FE5  308A               	movlw	138
  4078  0FE6  009B               	movwf	27	;volatile
  4079  0FE7                     l3175:	
  4080                           
  4081                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  4082  0FE7  019C               	clrf	28	;volatile
  4083  0FE8                     l3177:	
  4084                           
  4085                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  4086  0FE8  3000               	movlw	0
  4087  0FE9  00F0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  4088  0FEA  3000               	movlw	0
  4089  0FEB  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  4090  0FEC  318B  2375  318F   	fcall	_EUSART_SetFramingErrorHandler
  4091  0FEF                     l3179:	
  4092                           
  4093                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  4094  0FEF  3000               	movlw	0
  4095  0FF0  00F0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  4096  0FF1  3000               	movlw	0
  4097  0FF2  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  4098  0FF3  318B  237B  318F   	fcall	_EUSART_SetOverrunErrorHandler
  4099  0FF6                     l3181:	
  4100                           
  4101                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  4102  0FF6  3000               	movlw	0
  4103  0FF7  00F0               	movwf	EUSART_SetErrorHandler@interruptHandler
  4104  0FF8  3000               	movlw	0
  4105  0FF9  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  4106  0FFA  318B  236F  318F   	fcall	_EUSART_SetErrorHandler
  4107  0FFD                     l3183:	
  4108                           
  4109                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  4110  0FFD  0020               	movlb	0	; select bank0
  4111  0FFE  01C3               	clrf	_eusartRxLastError	;volatile
  4112  0FFF                     l625:	
  4113  0FFF  0008               	return
  4114  1000                     __end_of_EUSART_Initialize:	
  4115                           
  4116                           	psect	text12
  4117  0B7B                     __ptext12:	
  4118 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  4119 ;; Defined at:
  4120 ;;		line 161 in file "mcc_generated_files/eusart.c"
  4121 ;; Parameters:    Size  Location     Type
  4122 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  4123 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  4124 ;; Auto vars:     Size  Location     Type
  4125 ;;		None
  4126 ;; Return value:  Size  Location     Type
  4127 ;;                  1    wreg      void 
  4128 ;; Registers used:
  4129 ;;		wreg
  4130 ;; Tracked objects:
  4131 ;;		On entry : 0/0
  4132 ;;		On exit  : 0/0
  4133 ;;		Unchanged: 0/0
  4134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4135 ;;      Params:         2       0       0       0       0       0
  4136 ;;      Locals:         0       0       0       0       0       0
  4137 ;;      Temps:          0       0       0       0       0       0
  4138 ;;      Totals:         2       0       0       0       0       0
  4139 ;;Total ram usage:        2 bytes
  4140 ;; Hardware stack levels used:    1
  4141 ;; This function calls:
  4142 ;;		Nothing
  4143 ;; This function is called by:
  4144 ;;		_EUSART_Initialize
  4145 ;; This function uses a non-reentrant model
  4146 ;;
  4147                           
  4148                           
  4149                           ;psect for function _EUSART_SetOverrunErrorHandler
  4150  0B7B                     _EUSART_SetOverrunErrorHandler:	
  4151  0B7B                     l3121:	
  4152                           ;incstack = 0
  4153                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  4154                           
  4155                           
  4156                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  4157  0B7B  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  4158  0B7C  0020               	movlb	0	; select bank0
  4159  0B7D  00BA               	movwf	_EUSART_OverrunErrorHandler+1
  4160  0B7E  0870               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  4161  0B7F  00B9               	movwf	_EUSART_OverrunErrorHandler
  4162  0B80                     l667:	
  4163  0B80  0008               	return
  4164  0B81                     __end_of_EUSART_SetOverrunErrorHandler:	
  4165                           
  4166                           	psect	text13
  4167  0B75                     __ptext13:	
  4168 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  4169 ;; Defined at:
  4170 ;;		line 157 in file "mcc_generated_files/eusart.c"
  4171 ;; Parameters:    Size  Location     Type
  4172 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  4173 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  4174 ;; Auto vars:     Size  Location     Type
  4175 ;;		None
  4176 ;; Return value:  Size  Location     Type
  4177 ;;                  1    wreg      void 
  4178 ;; Registers used:
  4179 ;;		wreg
  4180 ;; Tracked objects:
  4181 ;;		On entry : 0/0
  4182 ;;		On exit  : 0/0
  4183 ;;		Unchanged: 0/0
  4184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4185 ;;      Params:         2       0       0       0       0       0
  4186 ;;      Locals:         0       0       0       0       0       0
  4187 ;;      Temps:          0       0       0       0       0       0
  4188 ;;      Totals:         2       0       0       0       0       0
  4189 ;;Total ram usage:        2 bytes
  4190 ;; Hardware stack levels used:    1
  4191 ;; This function calls:
  4192 ;;		Nothing
  4193 ;; This function is called by:
  4194 ;;		_EUSART_Initialize
  4195 ;; This function uses a non-reentrant model
  4196 ;;
  4197                           
  4198                           
  4199                           ;psect for function _EUSART_SetFramingErrorHandler
  4200  0B75                     _EUSART_SetFramingErrorHandler:	
  4201  0B75                     l3119:	
  4202                           ;incstack = 0
  4203                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  4204                           
  4205                           
  4206                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  4207  0B75  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  4208  0B76  0020               	movlb	0	; select bank0
  4209  0B77  00BC               	movwf	_EUSART_FramingErrorHandler+1
  4210  0B78  0870               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  4211  0B79  00BB               	movwf	_EUSART_FramingErrorHandler
  4212  0B7A                     l664:	
  4213  0B7A  0008               	return
  4214  0B7B                     __end_of_EUSART_SetFramingErrorHandler:	
  4215                           
  4216                           	psect	text14
  4217  0B6F                     __ptext14:	
  4218 ;; *************** function _EUSART_SetErrorHandler *****************
  4219 ;; Defined at:
  4220 ;;		line 165 in file "mcc_generated_files/eusart.c"
  4221 ;; Parameters:    Size  Location     Type
  4222 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  4223 ;;		 -> EUSART_DefaultErrorHandler(1), 
  4224 ;; Auto vars:     Size  Location     Type
  4225 ;;		None
  4226 ;; Return value:  Size  Location     Type
  4227 ;;                  1    wreg      void 
  4228 ;; Registers used:
  4229 ;;		wreg
  4230 ;; Tracked objects:
  4231 ;;		On entry : 0/0
  4232 ;;		On exit  : 0/0
  4233 ;;		Unchanged: 0/0
  4234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4235 ;;      Params:         2       0       0       0       0       0
  4236 ;;      Locals:         0       0       0       0       0       0
  4237 ;;      Temps:          0       0       0       0       0       0
  4238 ;;      Totals:         2       0       0       0       0       0
  4239 ;;Total ram usage:        2 bytes
  4240 ;; Hardware stack levels used:    1
  4241 ;; This function calls:
  4242 ;;		Nothing
  4243 ;; This function is called by:
  4244 ;;		_EUSART_Initialize
  4245 ;; This function uses a non-reentrant model
  4246 ;;
  4247                           
  4248                           
  4249                           ;psect for function _EUSART_SetErrorHandler
  4250  0B6F                     _EUSART_SetErrorHandler:	
  4251  0B6F                     l3123:	
  4252                           ;incstack = 0
  4253                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  4254                           
  4255                           
  4256                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  4257  0B6F  0871               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  4258  0B70  0020               	movlb	0	; select bank0
  4259  0B71  00B8               	movwf	_EUSART_ErrorHandler+1
  4260  0B72  0870               	movf	EUSART_SetErrorHandler@interruptHandler,w
  4261  0B73  00B7               	movwf	_EUSART_ErrorHandler
  4262  0B74                     l670:	
  4263  0B74  0008               	return
  4264  0B75                     __end_of_EUSART_SetErrorHandler:	
  4265                           
  4266                           	psect	text15
  4267  0CFD                     __ptext15:	
  4268 ;; *************** function _MTOUCH_Service_Mainloop *****************
  4269 ;; Defined at:
  4270 ;;		line 95 in file "mcc_generated_files/mtouch/mtouch.c"
  4271 ;; Parameters:    Size  Location     Type
  4272 ;;		None
  4273 ;; Auto vars:     Size  Location     Type
  4274 ;;		None
  4275 ;; Return value:  Size  Location     Type
  4276 ;;                  1    wreg      _Bool 
  4277 ;; Registers used:
  4278 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4279 ;; Tracked objects:
  4280 ;;		On entry : 0/0
  4281 ;;		On exit  : 0/0
  4282 ;;		Unchanged: 0/0
  4283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4284 ;;      Params:         0       0       0       0       0       0
  4285 ;;      Locals:         0       0       0       0       0       0
  4286 ;;      Temps:          0       1       0       0       0       0
  4287 ;;      Totals:         0       1       0       0       0       0
  4288 ;;Total ram usage:        1 bytes
  4289 ;; Hardware stack levels used:    1
  4290 ;; Hardware stack levels required when called:    6
  4291 ;; This function calls:
  4292 ;;		_MTOUCH_Button_ServiceAll
  4293 ;;		_MTOUCH_Sensor_SampleAll
  4294 ;;		_MTOUCH_Sensor_Sampled_ResetAll
  4295 ;;		_MTOUCH_Tick
  4296 ;;		_MTOUCH_needReburst
  4297 ;; This function is called by:
  4298 ;;		_main
  4299 ;;		_touch_example
  4300 ;; This function uses a non-reentrant model
  4301 ;;
  4302                           
  4303                           
  4304                           ;psect for function _MTOUCH_Service_Mainloop
  4305  0CFD                     _MTOUCH_Service_Mainloop:	
  4306  0CFD                     l3201:	
  4307                           ;incstack = 0
  4308                           ; Regs used in _MTOUCH_Service_Mainloop: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4309                           
  4310                           
  4311                           ;mcc_generated_files/mtouch/mtouch.c: 99:     mtouch_time_toScan = 1;
  4312  0CFD  0020               	movlb	0	; select bank0
  4313  0CFE  01C9               	clrf	_mtouch_time_toScan
  4314  0CFF  0AC9               	incf	_mtouch_time_toScan,f
  4315  0D00                     l3203:	
  4316  0D00                     l3205:	
  4317                           ;mcc_generated_files/mtouch/mtouch.c: 101:     if(mtouch_time_toScan)
  4318                           
  4319                           
  4320                           ;mcc_generated_files/mtouch/mtouch.c: 102:     {;mcc_generated_files/mtouch/mtouch.c: 10
      +                          3:         if(MTOUCH_Sensor_SampleAll() == 0)
  4321  0D00  318C  24A8  318C   	fcall	_MTOUCH_Sensor_SampleAll
  4322  0D03  3A00               	xorlw	0
  4323  0D04  1D03               	skipz
  4324  0D05  2D07               	goto	u1611
  4325  0D06  2D08               	goto	u1610
  4326  0D07                     u1611:	
  4327  0D07  2D0A               	goto	l3211
  4328  0D08                     u1610:	
  4329  0D08                     l3207:	
  4330                           
  4331                           ;mcc_generated_files/mtouch/mtouch.c: 104:         return 0;
  4332  0D08  3000               	movlw	0
  4333  0D09  2D1B               	goto	l52
  4334  0D0A                     l3211:	
  4335                           
  4336                           ;mcc_generated_files/mtouch/mtouch.c: 107:             MTOUCH_Button_ServiceAll();
  4337  0D0A  318C  2427  318C   	fcall	_MTOUCH_Button_ServiceAll
  4338  0D0D                     l3213:	
  4339                           
  4340                           ;mcc_generated_files/mtouch/mtouch.c: 108:             mtouch_time_toScan = MTOUCH_needR
      +                          eburst();
  4341  0D0D  318B  2360  318C   	fcall	_MTOUCH_needReburst
  4342  0D10  0020               	movlb	0	; select bank0
  4343  0D11  00B4               	movwf	??_MTOUCH_Service_Mainloop
  4344  0D12  0834               	movf	??_MTOUCH_Service_Mainloop,w
  4345  0D13  00C9               	movwf	_mtouch_time_toScan
  4346  0D14                     l3215:	
  4347                           
  4348                           ;mcc_generated_files/mtouch/mtouch.c: 109:             MTOUCH_Sensor_Sampled_ResetAll();
  4349  0D14  3181  2154  318C   	fcall	_MTOUCH_Sensor_Sampled_ResetAll
  4350  0D17                     l3217:	
  4351                           
  4352                           ;mcc_generated_files/mtouch/mtouch.c: 110:             MTOUCH_Tick();
  4353  0D17  318B  2362  318C   	fcall	_MTOUCH_Tick
  4354  0D1A                     l3219:	
  4355                           
  4356                           ;mcc_generated_files/mtouch/mtouch.c: 111:             return 1;
  4357  0D1A  3001               	movlw	1
  4358  0D1B                     l52:	
  4359  0D1B  0008               	return
  4360  0D1C                     __end_of_MTOUCH_Service_Mainloop:	
  4361                           
  4362                           	psect	text16
  4363  0B60                     __ptext16:	
  4364 ;; *************** function _MTOUCH_needReburst *****************
  4365 ;; Defined at:
  4366 ;;		line 134 in file "mcc_generated_files/mtouch/mtouch.c"
  4367 ;; Parameters:    Size  Location     Type
  4368 ;;		None
  4369 ;; Auto vars:     Size  Location     Type
  4370 ;;  needReburst     1    0        _Bool 
  4371 ;; Return value:  Size  Location     Type
  4372 ;;                  1    wreg      _Bool 
  4373 ;; Registers used:
  4374 ;;		wreg, status,2
  4375 ;; Tracked objects:
  4376 ;;		On entry : 0/0
  4377 ;;		On exit  : 0/0
  4378 ;;		Unchanged: 0/0
  4379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4380 ;;      Params:         0       0       0       0       0       0
  4381 ;;      Locals:         1       0       0       0       0       0
  4382 ;;      Temps:          0       0       0       0       0       0
  4383 ;;      Totals:         1       0       0       0       0       0
  4384 ;;Total ram usage:        1 bytes
  4385 ;; Hardware stack levels used:    1
  4386 ;; This function calls:
  4387 ;;		Nothing
  4388 ;; This function is called by:
  4389 ;;		_MTOUCH_Service_Mainloop
  4390 ;; This function uses a non-reentrant model
  4391 ;;
  4392                           
  4393                           
  4394                           ;psect for function _MTOUCH_needReburst
  4395  0B60                     _MTOUCH_needReburst:	
  4396  0B60                     l3165:	
  4397                           ;incstack = 0
  4398                           ; Regs used in _MTOUCH_needReburst: [wreg+status,2]
  4399                           
  4400  0B60                     l3167:	
  4401                           
  4402                           ;mcc_generated_files/mtouch/mtouch.c: 138:     return needReburst;
  4403  0B60  3000               	movlw	0
  4404  0B61                     l59:	
  4405  0B61  0008               	return
  4406  0B62                     __end_of_MTOUCH_needReburst:	
  4407                           
  4408                           	psect	text17
  4409  0B62                     __ptext17:	
  4410 ;; *************** function _MTOUCH_Tick *****************
  4411 ;; Defined at:
  4412 ;;		line 124 in file "mcc_generated_files/mtouch/mtouch.c"
  4413 ;; Parameters:    Size  Location     Type
  4414 ;;		None
  4415 ;; Auto vars:     Size  Location     Type
  4416 ;;		None
  4417 ;; Return value:  Size  Location     Type
  4418 ;;                  1    wreg      void 
  4419 ;; Registers used:
  4420 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4421 ;; Tracked objects:
  4422 ;;		On entry : 0/0
  4423 ;;		On exit  : 0/0
  4424 ;;		Unchanged: 0/0
  4425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4426 ;;      Params:         0       0       0       0       0       0
  4427 ;;      Locals:         0       0       0       0       0       0
  4428 ;;      Temps:          0       0       0       0       0       0
  4429 ;;      Totals:         0       0       0       0       0       0
  4430 ;;Total ram usage:        0 bytes
  4431 ;; Hardware stack levels used:    1
  4432 ;; Hardware stack levels required when called:    2
  4433 ;; This function calls:
  4434 ;;		_MTOUCH_Button_Tick
  4435 ;; This function is called by:
  4436 ;;		_MTOUCH_Service_Mainloop
  4437 ;; This function uses a non-reentrant model
  4438 ;;
  4439                           
  4440                           
  4441                           ;psect for function _MTOUCH_Tick
  4442  0B62                     _MTOUCH_Tick:	
  4443  0B62                     l3171:	
  4444                           ;incstack = 0
  4445                           ; Regs used in _MTOUCH_Tick: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4446                           
  4447                           
  4448                           ;mcc_generated_files/mtouch/mtouch.c: 126:     MTOUCH_Button_Tick();
  4449  0B62  3180  20AB  318B   	fcall	_MTOUCH_Button_Tick
  4450  0B65                     l56:	
  4451  0B65  0008               	return
  4452  0B66                     __end_of_MTOUCH_Tick:	
  4453                           
  4454                           	psect	text18
  4455  00AB                     __ptext18:	
  4456 ;; *************** function _MTOUCH_Button_Tick *****************
  4457 ;; Defined at:
  4458 ;;		line 374 in file "mcc_generated_files/mtouch/mtouch_button.c"
  4459 ;; Parameters:    Size  Location     Type
  4460 ;;		None
  4461 ;; Auto vars:     Size  Location     Type
  4462 ;;  i               1    0[BANK0 ] unsigned char 
  4463 ;; Return value:  Size  Location     Type
  4464 ;;                  1    wreg      void 
  4465 ;; Registers used:
  4466 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4467 ;; Tracked objects:
  4468 ;;		On entry : 0/0
  4469 ;;		On exit  : 0/0
  4470 ;;		Unchanged: 0/0
  4471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4472 ;;      Params:         0       0       0       0       0       0
  4473 ;;      Locals:         0       1       0       0       0       0
  4474 ;;      Temps:          4       0       0       0       0       0
  4475 ;;      Totals:         4       1       0       0       0       0
  4476 ;;Total ram usage:        5 bytes
  4477 ;; Hardware stack levels used:    1
  4478 ;; Hardware stack levels required when called:    1
  4479 ;; This function calls:
  4480 ;;		_Button_Tick_helper
  4481 ;;		___wmul
  4482 ;; This function is called by:
  4483 ;;		_MTOUCH_Tick
  4484 ;; This function uses a non-reentrant model
  4485 ;;
  4486                           
  4487                           
  4488                           ;psect for function _MTOUCH_Button_Tick
  4489  00AB                     _MTOUCH_Button_Tick:	
  4490  00AB                     l3065:	
  4491                           ;incstack = 0
  4492                           ; Regs used in _MTOUCH_Button_Tick: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4493                           
  4494                           
  4495                           ;mcc_generated_files/mtouch/mtouch_button.c: 376:     uint8_t i;;mcc_generated_files/mto
      +                          uch/mtouch_button.c: 377:     for (i = 0; i < 10u; i++)
  4496  00AB  0020               	movlb	0	; select bank0
  4497  00AC  01A0               	clrf	MTOUCH_Button_Tick@i
  4498  00AD                     l3071:	
  4499                           
  4500                           ;mcc_generated_files/mtouch/mtouch_button.c: 378:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 379:         Button_Tick_helper(&mtouch_button[i]);
  4501  00AD  0820               	movf	MTOUCH_Button_Tick@i,w
  4502  00AE  00FA               	movwf	??_MTOUCH_Button_Tick
  4503  00AF  01FB               	clrf	??_MTOUCH_Button_Tick+1
  4504  00B0  087A               	movf	??_MTOUCH_Button_Tick,w
  4505  00B1  00F0               	movwf	___wmul@multiplier
  4506  00B2  087B               	movf	??_MTOUCH_Button_Tick+1,w
  4507  00B3  00F1               	movwf	___wmul@multiplier+1
  4508  00B4  3011               	movlw	17
  4509  00B5  00F2               	movwf	___wmul@multiplicand
  4510  00B6  3000               	movlw	0
  4511  00B7  00F3               	movwf	___wmul@multiplicand+1
  4512  00B8  318C  24DE  3180   	fcall	___wmul
  4513  00BB  30C6               	movlw	198
  4514  00BC  00FC               	movwf	??_MTOUCH_Button_Tick+2
  4515  00BD  3020               	movlw	32
  4516  00BE  00FD               	movwf	??_MTOUCH_Button_Tick+3
  4517  00BF  0870               	movf	?___wmul,w
  4518  00C0  077C               	addwf	??_MTOUCH_Button_Tick+2,w
  4519  00C1  00F6               	movwf	Button_Tick_helper@button
  4520  00C2  0871               	movf	?___wmul+1,w
  4521  00C3  3D7D               	addwfc	??_MTOUCH_Button_Tick+3,w
  4522  00C4  00F7               	movwf	Button_Tick_helper@button+1
  4523  00C5  3180  20FE  3180   	fcall	_Button_Tick_helper
  4524  00C8                     l3073:	
  4525                           
  4526                           ;mcc_generated_files/mtouch/mtouch_button.c: 380:     }
  4527  00C8  3001               	movlw	1
  4528  00C9  00FA               	movwf	??_MTOUCH_Button_Tick
  4529  00CA  087A               	movf	??_MTOUCH_Button_Tick,w
  4530  00CB  0020               	movlb	0	; select bank0
  4531  00CC  07A0               	addwf	MTOUCH_Button_Tick@i,f
  4532  00CD                     l3075:	
  4533  00CD  300A               	movlw	10
  4534  00CE  0220               	subwf	MTOUCH_Button_Tick@i,w
  4535  00CF  1C03               	skipc
  4536  00D0  28D2               	goto	u1511
  4537  00D1  28D3               	goto	u1510
  4538  00D2                     u1511:	
  4539  00D2  28AD               	goto	l3071
  4540  00D3                     u1510:	
  4541  00D3                     l477:	
  4542  00D3  0008               	return
  4543  00D4                     __end_of_MTOUCH_Button_Tick:	
  4544                           
  4545                           	psect	text19
  4546  00FE                     __ptext19:	
  4547 ;; *************** function _Button_Tick_helper *****************
  4548 ;; Defined at:
  4549 ;;		line 382 in file "mcc_generated_files/mtouch/mtouch_button.c"
  4550 ;; Parameters:    Size  Location     Type
  4551 ;;  button          2    6[COMMON] PTR struct .
  4552 ;;		 -> mtouch_button(170), 
  4553 ;; Auto vars:     Size  Location     Type
  4554 ;;		None
  4555 ;; Return value:  Size  Location     Type
  4556 ;;                  1    wreg      void 
  4557 ;; Registers used:
  4558 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4559 ;; Tracked objects:
  4560 ;;		On entry : 0/0
  4561 ;;		On exit  : 0/0
  4562 ;;		Unchanged: 0/0
  4563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4564 ;;      Params:         2       0       0       0       0       0
  4565 ;;      Locals:         0       0       0       0       0       0
  4566 ;;      Temps:          2       0       0       0       0       0
  4567 ;;      Totals:         4       0       0       0       0       0
  4568 ;;Total ram usage:        4 bytes
  4569 ;; Hardware stack levels used:    1
  4570 ;; This function calls:
  4571 ;;		Nothing
  4572 ;; This function is called by:
  4573 ;;		_MTOUCH_Button_Tick
  4574 ;; This function uses a non-reentrant model
  4575 ;;
  4576                           
  4577                           
  4578                           ;psect for function _Button_Tick_helper
  4579  00FE                     _Button_Tick_helper:	
  4580  00FE                     l3023:	
  4581                           ;incstack = 0
  4582                           ; Regs used in _Button_Tick_helper: [wreg+fsr1l+fsr1h+status,2+status,0]
  4583                           
  4584                           
  4585                           ;mcc_generated_files/mtouch/mtouch_button.c: 382: static void Button_Tick_helper(mtouch_
      +                          button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 383: {;mcc_generated_files
      +                          /mtouch/mtouch_button.c: 385:     if ((button->state) == MTOUCH_BUTTON_STATE_pressed)
  4586  00FE  0876               	movf	Button_Tick_helper@button,w
  4587  00FF  0086               	movwf	6
  4588  0100  0877               	movf	Button_Tick_helper@button+1,w
  4589  0101  0087               	movwf	7
  4590  0102  3142               	addfsr 1,2
  4591  0103  3002               	movlw	2
  4592  0104  0601               	xorwf	1,w
  4593  0105  1D03               	btfss	3,2
  4594  0106  2908               	goto	u1451
  4595  0107  2909               	goto	u1450
  4596  0108                     u1451:	
  4597  0108  2927               	goto	l482
  4598  0109                     u1450:	
  4599  0109                     l3025:	
  4600                           
  4601                           ;mcc_generated_files/mtouch/mtouch_button.c: 386:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 387:         (button->counter)++;
  4602  0109  0876               	movf	Button_Tick_helper@button,w
  4603  010A  0086               	movwf	6
  4604  010B  0877               	movf	Button_Tick_helper@button+1,w
  4605  010C  0087               	movwf	7
  4606  010D  314A               	addfsr 1,10
  4607  010E  3001               	movlw	1
  4608  010F  0781               	addwf	1,f
  4609  0110  3141               	addfsr 1,1
  4610  0111  1803               	skipnc
  4611  0112  0A81               	incf	1,f
  4612                           
  4613                           ;mcc_generated_files/mtouch/mtouch_button.c: 388:         if (button->counter == (mtouch
      +                          _button_statecounter_t)0)
  4614  0113  0876               	movf	Button_Tick_helper@button,w
  4615  0114  0086               	movwf	6
  4616  0115  0877               	movf	Button_Tick_helper@button+1,w
  4617  0116  0087               	movwf	7
  4618  0117  314A               	addfsr 1,10
  4619  0118  0016               	moviw fsr1++
  4620  0119  0401               	iorwf	1,w
  4621  011A  1D03               	btfss	3,2
  4622  011B  291D               	goto	u1461
  4623  011C  291E               	goto	u1460
  4624  011D                     u1461:	
  4625  011D  2927               	goto	l482
  4626  011E                     u1460:	
  4627  011E                     l3027:	
  4628                           
  4629                           ;mcc_generated_files/mtouch/mtouch_button.c: 389:         {;mcc_generated_files/mtouch/m
      +                          touch_button.c: 390:             button->counter = (mtouch_button_statecounter_t)0xFFFF;
  4630  011E  0876               	movf	Button_Tick_helper@button,w
  4631  011F  0086               	movwf	6
  4632  0120  0877               	movf	Button_Tick_helper@button+1,w
  4633  0121  0087               	movwf	7
  4634  0122  314A               	addfsr 1,10
  4635  0123  30FF               	movlw	255
  4636  0124  3FC0               	movwi [0]fsr1
  4637  0125  30FF               	movlw	255
  4638  0126  3FC1               	movwi [1]fsr1
  4639  0127                     l482:	
  4640  0127  0008               	return
  4641  0128                     __end_of_Button_Tick_helper:	
  4642                           
  4643                           	psect	text20
  4644  0154                     __ptext20:	
  4645 ;; *************** function _MTOUCH_Sensor_Sampled_ResetAll *****************
  4646 ;; Defined at:
  4647 ;;		line 555 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  4648 ;; Parameters:    Size  Location     Type
  4649 ;;		None
  4650 ;; Auto vars:     Size  Location     Type
  4651 ;;  sensor          2   10[COMMON] PTR struct .
  4652 ;;		 -> mtouch_sensor(90), 
  4653 ;; Return value:  Size  Location     Type
  4654 ;;                  1    wreg      void 
  4655 ;; Registers used:
  4656 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4657 ;; Tracked objects:
  4658 ;;		On entry : 0/0
  4659 ;;		On exit  : 0/0
  4660 ;;		Unchanged: 0/0
  4661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4662 ;;      Params:         0       0       0       0       0       0
  4663 ;;      Locals:         2       0       0       0       0       0
  4664 ;;      Temps:          2       0       0       0       0       0
  4665 ;;      Totals:         4       0       0       0       0       0
  4666 ;;Total ram usage:        4 bytes
  4667 ;; Hardware stack levels used:    1
  4668 ;; Hardware stack levels required when called:    1
  4669 ;; This function calls:
  4670 ;;		_Sensor_Sampled_Reset
  4671 ;; This function is called by:
  4672 ;;		_MTOUCH_Initialize
  4673 ;;		_MTOUCH_Service_Mainloop
  4674 ;; This function uses a non-reentrant model
  4675 ;;
  4676                           
  4677                           
  4678                           ;psect for function _MTOUCH_Sensor_Sampled_ResetAll
  4679  0154                     _MTOUCH_Sensor_Sampled_ResetAll:	
  4680  0154                     l3055:	
  4681                           ;incstack = 0
  4682                           ; Regs used in _MTOUCH_Sensor_Sampled_ResetAll: [wreg+fsr1l+fsr1h+status,2+status,0+pcla
      +                          th+cstack]
  4683                           
  4684                           
  4685                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 557:     mtouch_sensor_t* sensor;;mcc_gener
      +                          ated_files/mtouch/mtouch_sensor.c: 558:     for(sensor = &mtouch_sensor[0];sensor<= &mto
      +                          uch_sensor[10u -1];sensor++)
  4686  0154  306C               	movlw	108
  4687  0155  00FA               	movwf	MTOUCH_Sensor_Sampled_ResetAll@sensor
  4688  0156  3020               	movlw	32
  4689  0157  00FB               	movwf	MTOUCH_Sensor_Sampled_ResetAll@sensor+1
  4690  0158  30BD               	movlw	189
  4691  0159  00F8               	movwf	??_MTOUCH_Sensor_Sampled_ResetAll
  4692  015A  3020               	movlw	32
  4693  015B  00F9               	movwf	??_MTOUCH_Sensor_Sampled_ResetAll+1
  4694  015C  087B               	movf	MTOUCH_Sensor_Sampled_ResetAll@sensor+1,w
  4695  015D  0279               	subwf	??_MTOUCH_Sensor_Sampled_ResetAll+1,w
  4696  015E  1D03               	skipz
  4697  015F  2962               	goto	u1495
  4698  0160  087A               	movf	MTOUCH_Sensor_Sampled_ResetAll@sensor,w
  4699  0161  0278               	subwf	??_MTOUCH_Sensor_Sampled_ResetAll,w
  4700  0162                     u1495:	
  4701  0162  1803               	skipnc
  4702  0163  2965               	goto	u1491
  4703  0164  2966               	goto	u1490
  4704  0165                     u1491:	
  4705  0165  2967               	goto	l3059
  4706  0166                     u1490:	
  4707  0166  2980               	goto	l363
  4708  0167                     l3059:	
  4709                           
  4710                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 559:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 560:         Sensor_Sampled_Reset(sensor);
  4711  0167  087B               	movf	MTOUCH_Sensor_Sampled_ResetAll@sensor+1,w
  4712  0168  00F7               	movwf	Sensor_Sampled_Reset@sensor+1
  4713  0169  087A               	movf	MTOUCH_Sensor_Sampled_ResetAll@sensor,w
  4714  016A  00F6               	movwf	Sensor_Sampled_Reset@sensor
  4715  016B  318B  2396  3181   	fcall	_Sensor_Sampled_Reset
  4716  016E                     l3061:	
  4717                           
  4718                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 561:     }
  4719  016E  3009               	movlw	9
  4720  016F  07FA               	addwf	MTOUCH_Sensor_Sampled_ResetAll@sensor,f
  4721  0170  3000               	movlw	0
  4722  0171  3DFB               	addwfc	MTOUCH_Sensor_Sampled_ResetAll@sensor+1,f
  4723  0172                     l3063:	
  4724  0172  30BD               	movlw	189
  4725  0173  00F8               	movwf	??_MTOUCH_Sensor_Sampled_ResetAll
  4726  0174  3020               	movlw	32
  4727  0175  00F9               	movwf	??_MTOUCH_Sensor_Sampled_ResetAll+1
  4728  0176  087B               	movf	MTOUCH_Sensor_Sampled_ResetAll@sensor+1,w
  4729  0177  0279               	subwf	??_MTOUCH_Sensor_Sampled_ResetAll+1,w
  4730  0178  1D03               	skipz
  4731  0179  297C               	goto	u1505
  4732  017A  087A               	movf	MTOUCH_Sensor_Sampled_ResetAll@sensor,w
  4733  017B  0278               	subwf	??_MTOUCH_Sensor_Sampled_ResetAll,w
  4734  017C                     u1505:	
  4735  017C  1803               	skipnc
  4736  017D  297F               	goto	u1501
  4737  017E  2980               	goto	u1500
  4738  017F                     u1501:	
  4739  017F  2967               	goto	l3059
  4740  0180                     u1500:	
  4741  0180                     l363:	
  4742  0180  0008               	return
  4743  0181                     __end_of_MTOUCH_Sensor_Sampled_ResetAll:	
  4744                           
  4745                           	psect	text21
  4746  0B96                     __ptext21:	
  4747 ;; *************** function _Sensor_Sampled_Reset *****************
  4748 ;; Defined at:
  4749 ;;		line 572 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  4750 ;; Parameters:    Size  Location     Type
  4751 ;;  sensor          2    6[COMMON] PTR struct .
  4752 ;;		 -> mtouch_sensor(90), 
  4753 ;; Auto vars:     Size  Location     Type
  4754 ;;		None
  4755 ;; Return value:  Size  Location     Type
  4756 ;;                  1    wreg      void 
  4757 ;; Registers used:
  4758 ;;		wreg, fsr1l, fsr1h
  4759 ;; Tracked objects:
  4760 ;;		On entry : 0/0
  4761 ;;		On exit  : 0/0
  4762 ;;		Unchanged: 0/0
  4763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4764 ;;      Params:         2       0       0       0       0       0
  4765 ;;      Locals:         0       0       0       0       0       0
  4766 ;;      Temps:          0       0       0       0       0       0
  4767 ;;      Totals:         2       0       0       0       0       0
  4768 ;;Total ram usage:        2 bytes
  4769 ;; Hardware stack levels used:    1
  4770 ;; This function calls:
  4771 ;;		Nothing
  4772 ;; This function is called by:
  4773 ;;		_MTOUCH_Sensor_Initialize
  4774 ;;		_MTOUCH_Sensor_Sampled_ResetAll
  4775 ;; This function uses a non-reentrant model
  4776 ;;
  4777                           
  4778                           
  4779                           ;psect for function _Sensor_Sampled_Reset
  4780  0B96                     _Sensor_Sampled_Reset:	
  4781  0B96                     l2777:	
  4782                           ;incstack = 0
  4783                           ; Regs used in _Sensor_Sampled_Reset: [wregfsr1]
  4784                           
  4785                           
  4786                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 572: static __attribute__((inline)) void Se
      +                          nsor_Sampled_Reset(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 
      +                          573: {;mcc_generated_files/mtouch/mtouch_sensor.c: 574:     sensor->sampled = 0;
  4787  0B96  0876               	movf	Sensor_Sampled_Reset@sensor,w
  4788  0B97  0086               	movwf	6
  4789  0B98  0877               	movf	Sensor_Sampled_Reset@sensor+1,w
  4790  0B99  0087               	movwf	7
  4791  0B9A  3148               	addfsr 1,8
  4792  0B9B  1081               	bcf	1,1
  4793  0B9C                     l371:	
  4794  0B9C  0008               	return
  4795  0B9D                     __end_of_Sensor_Sampled_Reset:	
  4796                           
  4797                           	psect	text22
  4798  0CA8                     __ptext22:	
  4799 ;; *************** function _MTOUCH_Sensor_SampleAll *****************
  4800 ;; Defined at:
  4801 ;;		line 195 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  4802 ;; Parameters:    Size  Location     Type
  4803 ;;		None
  4804 ;; Auto vars:     Size  Location     Type
  4805 ;;  sensor          1   18[BANK0 ] enum E2470
  4806 ;; Return value:  Size  Location     Type
  4807 ;;                  1    wreg      _Bool 
  4808 ;; Registers used:
  4809 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4810 ;; Tracked objects:
  4811 ;;		On entry : 0/0
  4812 ;;		On exit  : 0/0
  4813 ;;		Unchanged: 0/0
  4814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4815 ;;      Params:         0       0       0       0       0       0
  4816 ;;      Locals:         0       1       0       0       0       0
  4817 ;;      Temps:          0       1       0       0       0       0
  4818 ;;      Totals:         0       2       0       0       0       0
  4819 ;;Total ram usage:        2 bytes
  4820 ;; Hardware stack levels used:    1
  4821 ;; Hardware stack levels required when called:    5
  4822 ;; This function calls:
  4823 ;;		_Sensor_Service
  4824 ;; This function is called by:
  4825 ;;		_MTOUCH_Service_Mainloop
  4826 ;; This function uses a non-reentrant model
  4827 ;;
  4828                           
  4829                           
  4830                           ;psect for function _MTOUCH_Sensor_SampleAll
  4831  0CA8                     _MTOUCH_Sensor_SampleAll:	
  4832  0CA8                     l3133:	
  4833                           ;incstack = 0
  4834                           ; Regs used in _MTOUCH_Sensor_SampleAll: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4835                           
  4836                           
  4837                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 197:     enum mtouch_sensor_names sensor;;m
      +                          cc_generated_files/mtouch/mtouch_sensor.c: 198:     for (sensor = 0; sensor < 10u; senso
      +                          r++)
  4838  0CA8  0020               	movlb	0	; select bank0
  4839  0CA9  01B2               	clrf	MTOUCH_Sensor_SampleAll@sensor
  4840  0CAA                     l3139:	
  4841                           
  4842                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 199:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 200:         if(Sensor_Service(sensor)!= MTOUCH_SENSOR_ERROR_none)
  4843  0CAA  0832               	movf	MTOUCH_Sensor_SampleAll@sensor,w
  4844  0CAB  3185  2516  318C   	fcall	_Sensor_Service
  4845  0CAE  3A00               	xorlw	0
  4846  0CAF  1903               	skipnz
  4847  0CB0  2CB2               	goto	u1571
  4848  0CB1  2CB3               	goto	u1570
  4849  0CB2                     u1571:	
  4850  0CB2  2CB5               	goto	l3145
  4851  0CB3                     u1570:	
  4852  0CB3                     l3141:	
  4853                           
  4854                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 201:             return 0;
  4855  0CB3  3000               	movlw	0
  4856  0CB4  2CC1               	goto	l240
  4857  0CB5                     l3145:	
  4858                           
  4859                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 202:     }
  4860  0CB5  3001               	movlw	1
  4861  0CB6  0020               	movlb	0	; select bank0
  4862  0CB7  00B1               	movwf	??_MTOUCH_Sensor_SampleAll
  4863  0CB8  0831               	movf	??_MTOUCH_Sensor_SampleAll,w
  4864  0CB9  07B2               	addwf	MTOUCH_Sensor_SampleAll@sensor,f
  4865  0CBA                     l3147:	
  4866  0CBA  300A               	movlw	10
  4867  0CBB  0232               	subwf	MTOUCH_Sensor_SampleAll@sensor,w
  4868  0CBC  1C03               	skipc
  4869  0CBD  2CBF               	goto	u1581
  4870  0CBE  2CC0               	goto	u1580
  4871  0CBF                     u1581:	
  4872  0CBF  2CAA               	goto	l3139
  4873  0CC0                     u1580:	
  4874  0CC0                     l3149:	
  4875                           
  4876                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 203:     return 1;
  4877  0CC0  3001               	movlw	1
  4878  0CC1                     l240:	
  4879  0CC1  0008               	return
  4880  0CC2                     __end_of_MTOUCH_Sensor_SampleAll:	
  4881                           
  4882                           	psect	text23
  4883  0516                     __ptext23:	
  4884 ;; *************** function _Sensor_Service *****************
  4885 ;; Defined at:
  4886 ;;		line 241 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  4887 ;; Parameters:    Size  Location     Type
  4888 ;;  name            1    wreg     enum E2470
  4889 ;; Auto vars:     Size  Location     Type
  4890 ;;  name            1   13[BANK0 ] enum E2470
  4891 ;;  sensor          2   15[BANK0 ] PTR struct .
  4892 ;;		 -> mtouch_sensor(90), 
  4893 ;;  error           1   14[BANK0 ] enum E2481
  4894 ;; Return value:  Size  Location     Type
  4895 ;;                  1    wreg      enum E2481
  4896 ;; Registers used:
  4897 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4898 ;; Tracked objects:
  4899 ;;		On entry : 0/0
  4900 ;;		On exit  : 0/0
  4901 ;;		Unchanged: 0/0
  4902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4903 ;;      Params:         0       0       0       0       0       0
  4904 ;;      Locals:         0       4       0       0       0       0
  4905 ;;      Temps:          0       4       0       0       0       0
  4906 ;;      Totals:         0       8       0       0       0       0
  4907 ;;Total ram usage:        8 bytes
  4908 ;; Hardware stack levels used:    1
  4909 ;; Hardware stack levels required when called:    4
  4910 ;; This function calls:
  4911 ;;		_Sensor_Acquisition
  4912 ;;		_Sensor_DefaultCallback
  4913 ;;		_Sensor_RawSample_Update
  4914 ;;		_Sensor_isEnabled
  4915 ;;		_Sensor_setSampled
  4916 ;;		___wmul
  4917 ;; This function is called by:
  4918 ;;		_MTOUCH_Sensor_SampleAll
  4919 ;; This function uses a non-reentrant model
  4920 ;;
  4921                           
  4922                           
  4923                           ;psect for function _Sensor_Service
  4924  0516                     _Sensor_Service:	
  4925                           
  4926                           ;incstack = 0
  4927                           ; Regs used in _Sensor_Service: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4928                           ;Sensor_Service@name stored from wreg
  4929  0516  0020               	movlb	0	; select bank0
  4930  0517  00AD               	movwf	Sensor_Service@name
  4931  0518                     l3077:	
  4932                           
  4933                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 241: static enum mtouch_sensor_error Sensor
      +                          _Service(enum mtouch_sensor_names name);mcc_generated_files/mtouch/mtouch_sensor.c: 242:
      +                           {;mcc_generated_files/mtouch/mtouch_sensor.c: 243:     mtouch_sensor_t* sensor = &mtouc
      +                          h_sensor[name];
  4934  0518  082D               	movf	Sensor_Service@name,w
  4935  0519  00A9               	movwf	??_Sensor_Service
  4936  051A  01AA               	clrf	??_Sensor_Service+1
  4937  051B  0829               	movf	??_Sensor_Service,w
  4938  051C  00F0               	movwf	___wmul@multiplier
  4939  051D  082A               	movf	??_Sensor_Service+1,w
  4940  051E  00F1               	movwf	___wmul@multiplier+1
  4941  051F  3009               	movlw	9
  4942  0520  00F2               	movwf	___wmul@multiplicand
  4943  0521  3000               	movlw	0
  4944  0522  00F3               	movwf	___wmul@multiplicand+1
  4945  0523  318C  24DE  3185   	fcall	___wmul
  4946  0526  306C               	movlw	108
  4947  0527  0020               	movlb	0	; select bank0
  4948  0528  00AB               	movwf	??_Sensor_Service+2
  4949  0529  3020               	movlw	32
  4950  052A  00AC               	movwf	??_Sensor_Service+3
  4951  052B  0870               	movf	?___wmul,w
  4952  052C  072B               	addwf	??_Sensor_Service+2,w
  4953  052D  00AF               	movwf	Sensor_Service@sensor
  4954  052E  0871               	movf	?___wmul+1,w
  4955  052F  3D2C               	addwfc	??_Sensor_Service+3,w
  4956  0530  00B0               	movwf	Sensor_Service@sensor+1
  4957  0531                     l3079:	
  4958                           
  4959                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 244:     enum mtouch_sensor_error error = S
      +                          ensor_Acquisition(sensor);
  4960  0531  0830               	movf	Sensor_Service@sensor+1,w
  4961  0532  00A6               	movwf	Sensor_Acquisition@sensor+1
  4962  0533  082F               	movf	Sensor_Service@sensor,w
  4963  0534  00A5               	movwf	Sensor_Acquisition@sensor
  4964  0535  3182  224D  3185   	fcall	_Sensor_Acquisition
  4965  0538  0020               	movlb	0	; select bank0
  4966  0539  00A9               	movwf	??_Sensor_Service
  4967  053A  0829               	movf	??_Sensor_Service,w
  4968  053B  00AE               	movwf	Sensor_Service@error
  4969                           
  4970                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 247:     switch(error)
  4971  053C  2D67               	goto	l3091
  4972  053D                     l3081:	
  4973                           
  4974                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 250:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 251:             if(Sensor_isEnabled(sensor))
  4975  053D  0830               	movf	Sensor_Service@sensor+1,w
  4976  053E  00F1               	movwf	Sensor_isEnabled@sensor+1
  4977  053F  082F               	movf	Sensor_Service@sensor,w
  4978  0540  00F0               	movwf	Sensor_isEnabled@sensor
  4979  0541  318B  23E7  3185   	fcall	_Sensor_isEnabled
  4980  0544  3A00               	xorlw	0
  4981  0545  1903               	skipnz
  4982  0546  2D48               	goto	u1521
  4983  0547  2D49               	goto	u1520
  4984  0548                     u1521:	
  4985  0548  2D84               	goto	l3093
  4986  0549                     u1520:	
  4987  0549                     l3083:	
  4988                           
  4989                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 252:             {;mcc_generated_files/mtou
      +                          ch/mtouch_sensor.c: 257:                 if(!lowpowerActivated)
  4990  0549  0020               	movlb	0	; select bank0
  4991  054A  0844               	movf	_lowpowerActivated,w
  4992  054B  1D03               	btfss	3,2
  4993  054C  2D4E               	goto	u1531
  4994  054D  2D4F               	goto	u1530
  4995  054E                     u1531:	
  4996  054E  2D56               	goto	l258
  4997  054F                     u1530:	
  4998  054F                     l3085:	
  4999                           
  5000                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 258:                 {;mcc_generated_files/
      +                          mtouch/mtouch_sensor.c: 259:                     Sensor_RawSample_Update(sensor);
  5001  054F  0830               	movf	Sensor_Service@sensor+1,w
  5002  0550  00F1               	movwf	Sensor_RawSample_Update@sensor+1
  5003  0551  082F               	movf	Sensor_Service@sensor,w
  5004  0552  00F0               	movwf	Sensor_RawSample_Update@sensor
  5005  0553  318C  24C2  3185   	fcall	_Sensor_RawSample_Update
  5006  0556                     l258:	
  5007                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 260:                 }
  5008                           
  5009                           
  5010                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 261:                 Sensor_setSampled(sens
      +                          or);
  5011  0556  0020               	movlb	0	; select bank0
  5012  0557  0830               	movf	Sensor_Service@sensor+1,w
  5013  0558  00F1               	movwf	Sensor_setSampled@sensor+1
  5014  0559  082F               	movf	Sensor_Service@sensor,w
  5015  055A  00F0               	movwf	Sensor_setSampled@sensor
  5016  055B  318B  238F  3185   	fcall	_Sensor_setSampled
  5017  055E                     l3087:	
  5018                           
  5019                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 262:                 callback_sampled(name)
      +                          ;
  5020  055E  0020               	movlb	0	; select bank0
  5021  055F  082D               	movf	Sensor_Service@name,w
  5022  0560  00A9               	movwf	??_Sensor_Service
  5023  0561  0829               	movf	??_Sensor_Service,w
  5024  0562  00F0               	movwf	Sensor_DefaultCallback@sensor
  5025  0563  3180  2004  3185   	fcall	_Sensor_DefaultCallback
  5026  0566  2D84               	goto	l3093
  5027  0567                     l3091:	
  5028  0567  082E               	movf	Sensor_Service@error,w
  5029  0568  00A9               	movwf	??_Sensor_Service
  5030  0569  01AA               	clrf	??_Sensor_Service+1
  5031  056A  1BA9               	btfsc	??_Sensor_Service,7
  5032  056B  03AA               	decf	??_Sensor_Service+1,f
  5033                           
  5034                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  5035                           ; Switch size 1, requested type "simple"
  5036                           ; Number of cases is 2, Range of values is 0 to 255
  5037                           ; switch strategies available:
  5038                           ; Name         Instructions Cycles
  5039                           ; simple_byte            7     4 (average)
  5040                           ; jumptable            260     6 (fixed)
  5041                           ;	Chosen strategy is simple_byte
  5042  056C  082A               	movf	??_Sensor_Service+1,w
  5043  056D  3A00               	xorlw	0	; case 0
  5044  056E  1903               	skipnz
  5045  056F  2D74               	goto	l3483
  5046  0570  3AFF               	xorlw	255	; case 255
  5047  0571  1903               	skipnz
  5048  0572  2D79               	goto	l3485
  5049  0573  2D84               	goto	l3093
  5050  0574                     l3483:	
  5051                           
  5052                           ; Switch size 1, requested type "simple"
  5053                           ; Number of cases is 1, Range of values is 0 to 0
  5054                           ; switch strategies available:
  5055                           ; Name         Instructions Cycles
  5056                           ; simple_byte            4     3 (average)
  5057                           ; direct_byte            8     6 (fixed)
  5058                           ; jumptable            260     6 (fixed)
  5059                           ;	Chosen strategy is simple_byte
  5060  0574  0829               	movf	??_Sensor_Service,w
  5061  0575  3A00               	xorlw	0	; case 0
  5062  0576  1903               	skipnz
  5063  0577  2D3D               	goto	l3081
  5064  0578  2D84               	goto	l3093
  5065  0579                     l3485:	
  5066                           
  5067                           ; Switch size 1, requested type "simple"
  5068                           ; Number of cases is 3, Range of values is 253 to 255
  5069                           ; switch strategies available:
  5070                           ; Name         Instructions Cycles
  5071                           ; simple_byte           10     6 (average)
  5072                           ; direct_byte           11     5 (fixed)
  5073                           ; jumptable            263     9 (fixed)
  5074                           ;	Chosen strategy is simple_byte
  5075  0579  0829               	movf	??_Sensor_Service,w
  5076  057A  3AFD               	xorlw	253	; case 253
  5077  057B  1903               	skipnz
  5078  057C  2D84               	goto	l3093
  5079  057D  3A03               	xorlw	3	; case 254
  5080  057E  1903               	skipnz
  5081  057F  2D84               	goto	l3093
  5082  0580  3A01               	xorlw	1	; case 255
  5083  0581  1903               	skipnz
  5084  0582  2D84               	goto	l3093
  5085  0583  2D84               	goto	l3093
  5086  0584                     l3093:	
  5087                           
  5088                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 274:     return error;
  5089  0584  0020               	movlb	0	; select bank0
  5090  0585  082E               	movf	Sensor_Service@error,w
  5091  0586                     l264:	
  5092  0586  0008               	return
  5093  0587                     __end_of_Sensor_Service:	
  5094                           
  5095                           	psect	text24
  5096  0B8F                     __ptext24:	
  5097 ;; *************** function _Sensor_setSampled *****************
  5098 ;; Defined at:
  5099 ;;		line 577 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5100 ;; Parameters:    Size  Location     Type
  5101 ;;  sensor          2    0[COMMON] PTR struct .
  5102 ;;		 -> mtouch_sensor(90), 
  5103 ;; Auto vars:     Size  Location     Type
  5104 ;;		None
  5105 ;; Return value:  Size  Location     Type
  5106 ;;                  1    wreg      void 
  5107 ;; Registers used:
  5108 ;;		wreg, fsr1l, fsr1h
  5109 ;; Tracked objects:
  5110 ;;		On entry : 0/0
  5111 ;;		On exit  : 0/0
  5112 ;;		Unchanged: 0/0
  5113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5114 ;;      Params:         2       0       0       0       0       0
  5115 ;;      Locals:         0       0       0       0       0       0
  5116 ;;      Temps:          0       0       0       0       0       0
  5117 ;;      Totals:         2       0       0       0       0       0
  5118 ;;Total ram usage:        2 bytes
  5119 ;; Hardware stack levels used:    1
  5120 ;; This function calls:
  5121 ;;		Nothing
  5122 ;; This function is called by:
  5123 ;;		_Sensor_Service
  5124 ;; This function uses a non-reentrant model
  5125 ;;
  5126                           
  5127                           
  5128                           ;psect for function _Sensor_setSampled
  5129  0B8F                     _Sensor_setSampled:	
  5130  0B8F                     l2915:	
  5131                           ;incstack = 0
  5132                           ; Regs used in _Sensor_setSampled: [wregfsr1]
  5133                           
  5134                           
  5135                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 577: static __attribute__((inline)) void Se
      +                          nsor_setSampled(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 578
      +                          : {;mcc_generated_files/mtouch/mtouch_sensor.c: 579:     sensor->sampled = 1;
  5136  0B8F  0870               	movf	Sensor_setSampled@sensor,w
  5137  0B90  0086               	movwf	6
  5138  0B91  0871               	movf	Sensor_setSampled@sensor+1,w
  5139  0B92  0087               	movwf	7
  5140  0B93  3148               	addfsr 1,8
  5141  0B94  1481               	bsf	1,1
  5142  0B95                     l374:	
  5143  0B95  0008               	return
  5144  0B96                     __end_of_Sensor_setSampled:	
  5145                           
  5146                           	psect	text25
  5147  0CC2                     __ptext25:	
  5148 ;; *************** function _Sensor_RawSample_Update *****************
  5149 ;; Defined at:
  5150 ;;		line 438 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5151 ;; Parameters:    Size  Location     Type
  5152 ;;  sensor          2    0[COMMON] PTR struct .
  5153 ;;		 -> mtouch_sensor(90), 
  5154 ;; Auto vars:     Size  Location     Type
  5155 ;;		None
  5156 ;; Return value:  Size  Location     Type
  5157 ;;                  1    wreg      void 
  5158 ;; Registers used:
  5159 ;;		wreg, fsr1l, fsr1h
  5160 ;; Tracked objects:
  5161 ;;		On entry : 0/0
  5162 ;;		On exit  : 0/0
  5163 ;;		Unchanged: 0/0
  5164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5165 ;;      Params:         2       0       0       0       0       0
  5166 ;;      Locals:         0       0       0       0       0       0
  5167 ;;      Temps:          0       0       0       0       0       0
  5168 ;;      Totals:         2       0       0       0       0       0
  5169 ;;Total ram usage:        2 bytes
  5170 ;; Hardware stack levels used:    1
  5171 ;; This function calls:
  5172 ;;		Nothing
  5173 ;; This function is called by:
  5174 ;;		_Sensor_Service
  5175 ;; This function uses a non-reentrant model
  5176 ;;
  5177                           
  5178                           
  5179                           ;psect for function _Sensor_RawSample_Update
  5180  0CC2                     _Sensor_RawSample_Update:	
  5181  0CC2                     l2905:	
  5182                           ;incstack = 0
  5183                           ; Regs used in _Sensor_RawSample_Update: [wregfsr1]
  5184                           
  5185  0CC2  1F8B               	btfss	11,7	;volatile
  5186  0CC3  2CC5               	goto	u1271
  5187  0CC4  2CC6               	goto	u1270
  5188  0CC5                     u1271:	
  5189  0CC5  2CD3               	goto	l2913
  5190  0CC6                     u1270:	
  5191  0CC6                     l2907:	
  5192  0CC6  138B               	bcf	11,7	;volatile
  5193  0CC7                     l2909:	
  5194  0CC7  0870               	movf	Sensor_RawSample_Update@sensor,w
  5195  0CC8  0086               	movwf	6
  5196  0CC9  0871               	movf	Sensor_RawSample_Update@sensor+1,w
  5197  0CCA  0087               	movwf	7
  5198  0CCB  3146               	addfsr 1,6
  5199  0CCC  0020               	movlb	0	; select bank0
  5200  0CCD  083D               	movf	_packet_sample,w
  5201  0CCE  3FC0               	movwi [0]fsr1
  5202  0CCF  083E               	movf	_packet_sample+1,w
  5203  0CD0  3FC1               	movwi [1]fsr1
  5204  0CD1                     l2911:	
  5205  0CD1  178B               	bsf	11,7	;volatile
  5206  0CD2  2CDD               	goto	l315
  5207  0CD3                     l2913:	
  5208  0CD3  0870               	movf	Sensor_RawSample_Update@sensor,w
  5209  0CD4  0086               	movwf	6
  5210  0CD5  0871               	movf	Sensor_RawSample_Update@sensor+1,w
  5211  0CD6  0087               	movwf	7
  5212  0CD7  3146               	addfsr 1,6
  5213  0CD8  0020               	movlb	0	; select bank0
  5214  0CD9  083D               	movf	_packet_sample,w
  5215  0CDA  3FC0               	movwi [0]fsr1
  5216  0CDB  083E               	movf	_packet_sample+1,w
  5217  0CDC  3FC1               	movwi [1]fsr1
  5218  0CDD                     l315:	
  5219  0CDD  0008               	return
  5220  0CDE                     __end_of_Sensor_RawSample_Update:	
  5221                           
  5222                           	psect	text26
  5223  0004                     __ptext26:	
  5224 ;; *************** function _Sensor_DefaultCallback *****************
  5225 ;; Defined at:
  5226 ;;		line 458 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5227 ;; Parameters:    Size  Location     Type
  5228 ;;  sensor          1    0[COMMON] enum E2470
  5229 ;; Auto vars:     Size  Location     Type
  5230 ;;		None
  5231 ;; Return value:  Size  Location     Type
  5232 ;;                  1    wreg      void 
  5233 ;; Registers used:
  5234 ;;		None
  5235 ;; Tracked objects:
  5236 ;;		On entry : 0/0
  5237 ;;		On exit  : 0/0
  5238 ;;		Unchanged: 0/0
  5239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5240 ;;      Params:         1       0       0       0       0       0
  5241 ;;      Locals:         0       0       0       0       0       0
  5242 ;;      Temps:          0       0       0       0       0       0
  5243 ;;      Totals:         1       0       0       0       0       0
  5244 ;;Total ram usage:        1 bytes
  5245 ;; Hardware stack levels used:    1
  5246 ;; This function calls:
  5247 ;;		Nothing
  5248 ;; This function is called by:
  5249 ;;		_Sensor_Service
  5250 ;; This function uses a non-reentrant model
  5251 ;;
  5252                           
  5253                           
  5254                           ;psect for function _Sensor_DefaultCallback
  5255  0004                     _Sensor_DefaultCallback:	
  5256  0004                     l318:	
  5257                           ;incstack = 0
  5258                           ; Regs used in _Sensor_DefaultCallback: []
  5259                           
  5260  0004  0008               	return
  5261  0005                     __end_of_Sensor_DefaultCallback:	
  5262                           
  5263                           	psect	text27
  5264  024D                     __ptext27:	
  5265 ;; *************** function _Sensor_Acquisition *****************
  5266 ;; Defined at:
  5267 ;;		line 288 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5268 ;; Parameters:    Size  Location     Type
  5269 ;;  sensor          2    5[BANK0 ] PTR struct .
  5270 ;;		 -> mtouch_sensor(90), 
  5271 ;; Auto vars:     Size  Location     Type
  5272 ;;  retry           1    8[BANK0 ] unsigned char 
  5273 ;; Return value:  Size  Location     Type
  5274 ;;                  1    wreg      enum E2481
  5275 ;; Registers used:
  5276 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5277 ;; Tracked objects:
  5278 ;;		On entry : 0/0
  5279 ;;		On exit  : 0/0
  5280 ;;		Unchanged: 0/0
  5281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5282 ;;      Params:         0       2       0       0       0       0
  5283 ;;      Locals:         0       1       0       0       0       0
  5284 ;;      Temps:          0       1       0       0       0       0
  5285 ;;      Totals:         0       4       0       0       0       0
  5286 ;;Total ram usage:        4 bytes
  5287 ;; Hardware stack levels used:    1
  5288 ;; Hardware stack levels required when called:    3
  5289 ;; This function calls:
  5290 ;;		_Sensor_Acq_ExecutePacket
  5291 ;;		_Sensor_isEnabled
  5292 ;;		_Sensor_setActive
  5293 ;;		_Sensor_setInactive
  5294 ;;		_abs
  5295 ;; This function is called by:
  5296 ;;		_Sensor_Service
  5297 ;; This function uses a non-reentrant model
  5298 ;;
  5299                           
  5300                           
  5301                           ;psect for function _Sensor_Acquisition
  5302  024D                     _Sensor_Acquisition:	
  5303  024D                     l2879:	
  5304                           ;incstack = 0
  5305                           ; Regs used in _Sensor_Acquisition: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5306                           
  5307                           
  5308                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 288: static enum mtouch_sensor_error Sensor
      +                          _Acquisition(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 289: {
      +                          ;mcc_generated_files/mtouch/mtouch_sensor.c: 291:     uint8_t retry = (uint8_t)5u;
  5309  024D  3005               	movlw	5
  5310  024E  0020               	movlb	0	; select bank0
  5311  024F  00A7               	movwf	??_Sensor_Acquisition
  5312  0250  0827               	movf	??_Sensor_Acquisition,w
  5313  0251  00A8               	movwf	Sensor_Acquisition@retry
  5314  0252                     l2881:	
  5315                           
  5316                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 293:     if(!Sensor_isEnabled(sensor))
  5317  0252  0826               	movf	Sensor_Acquisition@sensor+1,w
  5318  0253  00F1               	movwf	Sensor_isEnabled@sensor+1
  5319  0254  0825               	movf	Sensor_Acquisition@sensor,w
  5320  0255  00F0               	movwf	Sensor_isEnabled@sensor
  5321  0256  318B  23E7  3182   	fcall	_Sensor_isEnabled
  5322  0259  3A00               	xorlw	0
  5323  025A  1D03               	skipz
  5324  025B  2A5D               	goto	u1231
  5325  025C  2A5E               	goto	u1230
  5326  025D                     u1231:	
  5327  025D  2A6A               	goto	l2893
  5328  025E                     u1230:	
  5329  025E                     l2883:	
  5330                           
  5331                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 294:         return MTOUCH_SENSOR_ERROR_non
      +                          e;
  5332  025E  3000               	movlw	0
  5333  025F  2AA1               	goto	l272
  5334  0260                     l2887:	
  5335                           
  5336                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 297:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 298:         retry--;
  5337  0260  3001               	movlw	1
  5338  0261  0020               	movlb	0	; select bank0
  5339  0262  02A8               	subwf	Sensor_Acquisition@retry,f
  5340                           
  5341                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 299:         if(retry == 0)
  5342  0263  0828               	movf	Sensor_Acquisition@retry,w
  5343  0264  1D03               	btfss	3,2
  5344  0265  2A67               	goto	u1241
  5345  0266  2A68               	goto	u1240
  5346  0267                     u1241:	
  5347  0267  2A6A               	goto	l2893
  5348  0268                     u1240:	
  5349  0268                     l2889:	
  5350                           
  5351                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 300:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 301:             return MTOUCH_SENSOR_ERROR_tooManyRetries;
  5352  0268  30FC               	movlw	252
  5353  0269  2AA1               	goto	l272
  5354  026A                     l2893:	
  5355                           
  5356                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 296:     while(Sensor_Acq_ExecutePacket(sen
      +                          sor))
  5357  026A  0020               	movlb	0	; select bank0
  5358  026B  0826               	movf	Sensor_Acquisition@sensor+1,w
  5359  026C  00FD               	movwf	Sensor_Acq_ExecutePacket@sensor+1
  5360  026D  0825               	movf	Sensor_Acquisition@sensor,w
  5361  026E  00FC               	movwf	Sensor_Acq_ExecutePacket@sensor
  5362  026F  3182  22FC  3182   	fcall	_Sensor_Acq_ExecutePacket
  5363  0272  3A00               	xorlw	0
  5364  0273  1D03               	skipz
  5365  0274  2A76               	goto	u1251
  5366  0275  2A77               	goto	u1250
  5367  0276                     u1251:	
  5368  0276  2A60               	goto	l2887
  5369  0277                     u1250:	
  5370  0277                     l2895:	
  5371                           
  5372                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 305:     if((mtouch_sensor_packetsample_t)a
      +                          bs(packet_sample - sensor->rawSample) > 100u)
  5373  0277  0020               	movlb	0	; select bank0
  5374  0278  0825               	movf	Sensor_Acquisition@sensor,w
  5375  0279  0086               	movwf	6
  5376  027A  0826               	movf	Sensor_Acquisition@sensor+1,w
  5377  027B  0087               	movwf	7
  5378  027C  3146               	addfsr 1,6
  5379  027D  3F40               	moviw [0]fsr1
  5380  027E  023D               	subwf	_packet_sample,w
  5381  027F  00F0               	movwf	abs@a
  5382  0280  3F41               	moviw [1]fsr1
  5383  0281  3B3E               	subwfb	_packet_sample+1,w
  5384  0282  00F1               	movwf	abs@a+1
  5385  0283  318C  248E  3182   	fcall	_abs
  5386  0286  3000               	movlw	0
  5387  0287  0271               	subwf	?_abs+1,w
  5388  0288  3065               	movlw	101
  5389  0289  1903               	skipnz
  5390  028A  0270               	subwf	?_abs,w
  5391  028B  1C03               	skipc
  5392  028C  2A8E               	goto	u1261
  5393  028D  2A8F               	goto	u1260
  5394  028E                     u1261:	
  5395  028E  2A98               	goto	l2899
  5396  028F                     u1260:	
  5397  028F                     l2897:	
  5398                           
  5399                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 306:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 307:         Sensor_setActive(sensor);
  5400  028F  0020               	movlb	0	; select bank0
  5401  0290  0826               	movf	Sensor_Acquisition@sensor+1,w
  5402  0291  00F1               	movwf	Sensor_setActive@sensor+1
  5403  0292  0825               	movf	Sensor_Acquisition@sensor,w
  5404  0293  00F0               	movwf	Sensor_setActive@sensor
  5405  0294  318B  2381  3182   	fcall	_Sensor_setActive
  5406                           
  5407                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 308:     }
  5408  0297  2A5E               	goto	l2883
  5409  0298                     l2899:	
  5410                           
  5411                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 310:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 311:         Sensor_setInactive(sensor);
  5412  0298  0020               	movlb	0	; select bank0
  5413  0299  0826               	movf	Sensor_Acquisition@sensor+1,w
  5414  029A  00F1               	movwf	Sensor_setInactive@sensor+1
  5415  029B  0825               	movf	Sensor_Acquisition@sensor,w
  5416  029C  00F0               	movwf	Sensor_setInactive@sensor
  5417  029D  318B  2388  3182   	fcall	_Sensor_setInactive
  5418  02A0  2A5E               	goto	l2883
  5419  02A1                     l272:	
  5420  02A1  0008               	return
  5421  02A2                     __end_of_Sensor_Acquisition:	
  5422                           
  5423                           	psect	text28
  5424  0C8E                     __ptext28:	
  5425 ;; *************** function _abs *****************
  5426 ;; Defined at:
  5427 ;;		line 1 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
  5428 ;; Parameters:    Size  Location     Type
  5429 ;;  a               2    0[COMMON] int 
  5430 ;; Auto vars:     Size  Location     Type
  5431 ;;		None
  5432 ;; Return value:  Size  Location     Type
  5433 ;;                  2    0[COMMON] int 
  5434 ;; Registers used:
  5435 ;;		wreg, status,2, status,0
  5436 ;; Tracked objects:
  5437 ;;		On entry : 0/0
  5438 ;;		On exit  : 0/0
  5439 ;;		Unchanged: 0/0
  5440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5441 ;;      Params:         2       0       0       0       0       0
  5442 ;;      Locals:         0       0       0       0       0       0
  5443 ;;      Temps:          2       0       0       0       0       0
  5444 ;;      Totals:         4       0       0       0       0       0
  5445 ;;Total ram usage:        4 bytes
  5446 ;; Hardware stack levels used:    1
  5447 ;; This function calls:
  5448 ;;		Nothing
  5449 ;; This function is called by:
  5450 ;;		_Sensor_Acquisition
  5451 ;; This function uses a non-reentrant model
  5452 ;;
  5453                           
  5454                           
  5455                           ;psect for function _abs
  5456  0C8E                     _abs:	
  5457  0C8E                     l2829:	
  5458                           ;incstack = 0
  5459                           ; Regs used in _abs: [wreg+status,2+status,0]
  5460                           
  5461  0C8E  0871               	movf	abs@a+1,w
  5462  0C8F  3A80               	xorlw	128
  5463  0C90  00F2               	movwf	??_abs
  5464  0C91  3080               	movlw	128
  5465  0C92  0272               	subwf	??_abs,w
  5466  0C93  1D03               	skipz
  5467  0C94  2C97               	goto	u1175
  5468  0C95  3001               	movlw	1
  5469  0C96  0270               	subwf	abs@a,w
  5470  0C97                     u1175:	
  5471  0C97  1803               	skipnc
  5472  0C98  2C9A               	goto	u1171
  5473  0C99  2C9B               	goto	u1170
  5474  0C9A                     u1171:	
  5475  0C9A  2CA7               	goto	l1392
  5476  0C9B                     u1170:	
  5477  0C9B                     l2831:	
  5478  0C9B  0970               	comf	abs@a,w
  5479  0C9C  00F2               	movwf	??_abs
  5480  0C9D  0971               	comf	abs@a+1,w
  5481  0C9E  00F3               	movwf	??_abs+1
  5482  0C9F  0AF2               	incf	??_abs,f
  5483  0CA0  1903               	skipnz
  5484  0CA1  0AF3               	incf	??_abs+1,f
  5485  0CA2  0872               	movf	??_abs,w
  5486  0CA3  00F0               	movwf	?_abs
  5487  0CA4  0873               	movf	??_abs+1,w
  5488  0CA5  00F1               	movwf	?_abs+1
  5489  0CA6  2CA7               	goto	l1395
  5490  0CA7                     l1392:	
  5491  0CA7                     l1395:	
  5492  0CA7  0008               	return
  5493  0CA8                     __end_of_abs:	
  5494                           
  5495                           	psect	text29
  5496  0B88                     __ptext29:	
  5497 ;; *************** function _Sensor_setInactive *****************
  5498 ;; Defined at:
  5499 ;;		line 523 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5500 ;; Parameters:    Size  Location     Type
  5501 ;;  sensor          2    0[COMMON] PTR struct .
  5502 ;;		 -> mtouch_sensor(90), 
  5503 ;; Auto vars:     Size  Location     Type
  5504 ;;		None
  5505 ;; Return value:  Size  Location     Type
  5506 ;;                  1    wreg      void 
  5507 ;; Registers used:
  5508 ;;		wreg, fsr1l, fsr1h
  5509 ;; Tracked objects:
  5510 ;;		On entry : 0/0
  5511 ;;		On exit  : 0/0
  5512 ;;		Unchanged: 0/0
  5513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5514 ;;      Params:         2       0       0       0       0       0
  5515 ;;      Locals:         0       0       0       0       0       0
  5516 ;;      Temps:          0       0       0       0       0       0
  5517 ;;      Totals:         2       0       0       0       0       0
  5518 ;;Total ram usage:        2 bytes
  5519 ;; Hardware stack levels used:    1
  5520 ;; This function calls:
  5521 ;;		Nothing
  5522 ;; This function is called by:
  5523 ;;		_Sensor_Acquisition
  5524 ;; This function uses a non-reentrant model
  5525 ;;
  5526                           
  5527                           
  5528                           ;psect for function _Sensor_setInactive
  5529  0B88                     _Sensor_setInactive:	
  5530  0B88                     l2835:	
  5531                           ;incstack = 0
  5532                           ; Regs used in _Sensor_setInactive: [wregfsr1]
  5533                           
  5534                           
  5535                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 523: static __attribute__((inline)) void Se
      +                          nsor_setInactive(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 52
      +                          4: {;mcc_generated_files/mtouch/mtouch_sensor.c: 525:     sensor->active = 0;
  5536  0B88  0870               	movf	Sensor_setInactive@sensor,w
  5537  0B89  0086               	movwf	6
  5538  0B8A  0871               	movf	Sensor_setInactive@sensor+1,w
  5539  0B8B  0087               	movwf	7
  5540  0B8C  3148               	addfsr 1,8
  5541  0B8D  1101               	bcf	1,2
  5542  0B8E                     l348:	
  5543  0B8E  0008               	return
  5544  0B8F                     __end_of_Sensor_setInactive:	
  5545                           
  5546                           	psect	text30
  5547  0B81                     __ptext30:	
  5548 ;; *************** function _Sensor_setActive *****************
  5549 ;; Defined at:
  5550 ;;		line 518 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5551 ;; Parameters:    Size  Location     Type
  5552 ;;  sensor          2    0[COMMON] PTR struct .
  5553 ;;		 -> mtouch_sensor(90), 
  5554 ;; Auto vars:     Size  Location     Type
  5555 ;;		None
  5556 ;; Return value:  Size  Location     Type
  5557 ;;                  1    wreg      void 
  5558 ;; Registers used:
  5559 ;;		wreg, fsr1l, fsr1h
  5560 ;; Tracked objects:
  5561 ;;		On entry : 0/0
  5562 ;;		On exit  : 0/0
  5563 ;;		Unchanged: 0/0
  5564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5565 ;;      Params:         2       0       0       0       0       0
  5566 ;;      Locals:         0       0       0       0       0       0
  5567 ;;      Temps:          0       0       0       0       0       0
  5568 ;;      Totals:         2       0       0       0       0       0
  5569 ;;Total ram usage:        2 bytes
  5570 ;; Hardware stack levels used:    1
  5571 ;; This function calls:
  5572 ;;		Nothing
  5573 ;; This function is called by:
  5574 ;;		_Sensor_Acquisition
  5575 ;; This function uses a non-reentrant model
  5576 ;;
  5577                           
  5578                           
  5579                           ;psect for function _Sensor_setActive
  5580  0B81                     _Sensor_setActive:	
  5581  0B81                     l2833:	
  5582                           ;incstack = 0
  5583                           ; Regs used in _Sensor_setActive: [wregfsr1]
  5584                           
  5585                           
  5586                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 518: static __attribute__((inline)) void Se
      +                          nsor_setActive(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 519:
      +                           {;mcc_generated_files/mtouch/mtouch_sensor.c: 520:     sensor->active = 1;
  5587  0B81  0870               	movf	Sensor_setActive@sensor,w
  5588  0B82  0086               	movwf	6
  5589  0B83  0871               	movf	Sensor_setActive@sensor+1,w
  5590  0B84  0087               	movwf	7
  5591  0B85  3148               	addfsr 1,8
  5592  0B86  1501               	bsf	1,2
  5593  0B87                     l345:	
  5594  0B87  0008               	return
  5595  0B88                     __end_of_Sensor_setActive:	
  5596                           
  5597                           	psect	text31
  5598  0BE7                     __ptext31:	
  5599 ;; *************** function _Sensor_isEnabled *****************
  5600 ;; Defined at:
  5601 ;;		line 503 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5602 ;; Parameters:    Size  Location     Type
  5603 ;;  sensor          2    0[COMMON] PTR struct .
  5604 ;;		 -> mtouch_sensor(90), 
  5605 ;; Auto vars:     Size  Location     Type
  5606 ;;		None
  5607 ;; Return value:  Size  Location     Type
  5608 ;;                  1    wreg      _Bool 
  5609 ;; Registers used:
  5610 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5611 ;; Tracked objects:
  5612 ;;		On entry : 0/0
  5613 ;;		On exit  : 0/0
  5614 ;;		Unchanged: 0/0
  5615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5616 ;;      Params:         2       0       0       0       0       0
  5617 ;;      Locals:         0       0       0       0       0       0
  5618 ;;      Temps:          0       0       0       0       0       0
  5619 ;;      Totals:         2       0       0       0       0       0
  5620 ;;Total ram usage:        2 bytes
  5621 ;; Hardware stack levels used:    1
  5622 ;; This function calls:
  5623 ;;		Nothing
  5624 ;; This function is called by:
  5625 ;;		_Sensor_Service
  5626 ;;		_Sensor_Acquisition
  5627 ;; This function uses a non-reentrant model
  5628 ;;
  5629                           
  5630                           
  5631                           ;psect for function _Sensor_isEnabled
  5632  0BE7                     _Sensor_isEnabled:	
  5633  0BE7                     l2779:	
  5634                           ;incstack = 0
  5635                           ; Regs used in _Sensor_isEnabled: [wreg+fsr1l+fsr1h+status,2+status,0]
  5636                           
  5637                           
  5638                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 503: static _Bool Sensor_isEnabled(mtouch_s
      +                          ensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 504: {;mcc_generated_files/
      +                          mtouch/mtouch_sensor.c: 505:     if(sensor!=((void*)0))
  5639  0BE7  0870               	movf	Sensor_isEnabled@sensor,w
  5640  0BE8  0471               	iorwf	Sensor_isEnabled@sensor+1,w
  5641  0BE9  1903               	btfsc	3,2
  5642  0BEA  2BEC               	goto	u1131
  5643  0BEB  2BED               	goto	u1130
  5644  0BEC                     u1131:	
  5645  0BEC  2BF5               	goto	l2787
  5646  0BED                     u1130:	
  5647  0BED                     l2781:	
  5648                           
  5649                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 506:         return (_Bool)sensor->enabled;
  5650  0BED  0870               	movf	Sensor_isEnabled@sensor,w
  5651  0BEE  0086               	movwf	6
  5652  0BEF  0871               	movf	Sensor_isEnabled@sensor+1,w
  5653  0BF0  0087               	movwf	7
  5654  0BF1  3148               	addfsr 1,8
  5655  0BF2  0801               	movf	1,w
  5656  0BF3  3901               	andlw	1
  5657  0BF4  2BF6               	goto	l341
  5658  0BF5                     l2787:	
  5659                           
  5660                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 508:         return 0;
  5661  0BF5  3000               	movlw	0
  5662  0BF6                     l341:	
  5663  0BF6  0008               	return
  5664  0BF7                     __end_of_Sensor_isEnabled:	
  5665                           
  5666                           	psect	text32
  5667  02FC                     __ptext32:	
  5668 ;; *************** function _Sensor_Acq_ExecutePacket *****************
  5669 ;; Defined at:
  5670 ;;		line 323 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5671 ;; Parameters:    Size  Location     Type
  5672 ;;  sensor          2   12[COMMON] PTR struct .
  5673 ;;		 -> mtouch_sensor(90), 
  5674 ;; Auto vars:     Size  Location     Type
  5675 ;;  error           1    4[BANK0 ] enum E2481
  5676 ;;  GIE_state       1    3[BANK0 ] unsigned char 
  5677 ;;  ADCON1_temp     1    2[BANK0 ] unsigned char 
  5678 ;;  ADCON0_temp     1    1[BANK0 ] unsigned char 
  5679 ;; Return value:  Size  Location     Type
  5680 ;;                  1    wreg      enum E2481
  5681 ;; Registers used:
  5682 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5683 ;; Tracked objects:
  5684 ;;		On entry : 0/0
  5685 ;;		On exit  : 0/0
  5686 ;;		Unchanged: 0/0
  5687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5688 ;;      Params:         2       0       0       0       0       0
  5689 ;;      Locals:         0       4       0       0       0       0
  5690 ;;      Temps:          0       1       0       0       0       0
  5691 ;;      Totals:         2       5       0       0       0       0
  5692 ;;Total ram usage:        7 bytes
  5693 ;; Hardware stack levels used:    1
  5694 ;; Hardware stack levels required when called:    2
  5695 ;; This function calls:
  5696 ;;		_MTOUCH_Delay
  5697 ;;		_MTOUCH_Random
  5698 ;;		_MTOUCH_Sensor_Scan_Initialize
  5699 ;;		_Sensor_Acq_ExecuteScan
  5700 ;;		_Sensor_setScanFunction
  5701 ;; This function is called by:
  5702 ;;		_Sensor_Acquisition
  5703 ;; This function uses a non-reentrant model
  5704 ;;
  5705                           
  5706                           
  5707                           ;psect for function _Sensor_Acq_ExecutePacket
  5708  02FC                     _Sensor_Acq_ExecutePacket:	
  5709  02FC                     l2791:	
  5710                           ;incstack = 0
  5711                           ; Regs used in _Sensor_Acq_ExecutePacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5712                           
  5713                           
  5714                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 323: static enum mtouch_sensor_error Sensor
      +                          _Acq_ExecutePacket(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 
      +                          324: {;mcc_generated_files/mtouch/mtouch_sensor.c: 326:     enum mtouch_sensor_error err
      +                          or = MTOUCH_SENSOR_ERROR_none;
  5715  02FC  0020               	movlb	0	; select bank0
  5716  02FD  01A4               	clrf	Sensor_Acq_ExecutePacket@error
  5717  02FE                     l2793:	
  5718                           
  5719                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 327:     uint8_t ADCON0_temp;;mcc_generated
      +                          _files/mtouch/mtouch_sensor.c: 328:     uint8_t ADCON1_temp;;mcc_generated_files/mtouch/
      +                          mtouch_sensor.c: 330:     uint8_t GIE_state;;mcc_generated_files/mtouch/mtouch_sensor.c:
      +                           332:     ADCON0_temp = ADCON0;
  5720  02FE  0021               	movlb	1	; select bank1
  5721  02FF  081D               	movf	29,w	;volatile
  5722  0300  0020               	movlb	0	; select bank0
  5723  0301  00A0               	movwf	??_Sensor_Acq_ExecutePacket
  5724  0302  0820               	movf	??_Sensor_Acq_ExecutePacket,w
  5725  0303  00A1               	movwf	Sensor_Acq_ExecutePacket@ADCON0_temp
  5726  0304                     l2795:	
  5727                           
  5728                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 333:     ADCON1_temp = ADCON1;
  5729  0304  0021               	movlb	1	; select bank1
  5730  0305  081E               	movf	30,w	;volatile
  5731  0306  0020               	movlb	0	; select bank0
  5732  0307  00A0               	movwf	??_Sensor_Acq_ExecutePacket
  5733  0308  0820               	movf	??_Sensor_Acq_ExecutePacket,w
  5734  0309  00A2               	movwf	Sensor_Acq_ExecutePacket@ADCON1_temp
  5735  030A                     l2797:	
  5736                           
  5737                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 334:     MTOUCH_Sensor_Scan_Initialize();
  5738  030A  318B  236A  3182   	fcall	_MTOUCH_Sensor_Scan_Initialize
  5739  030D                     l2799:	
  5740                           
  5741                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 336:     GIE_state = INTCONbits.GIE;
  5742  030D  3000               	movlw	0
  5743  030E  1B8B               	btfsc	11,7	;volatile
  5744  030F  3001               	movlw	1
  5745  0310  0020               	movlb	0	; select bank0
  5746  0311  00A3               	movwf	Sensor_Acq_ExecutePacket@GIE_state
  5747  0312                     l2801:	
  5748                           
  5749                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 338:     Sensor_setScanFunction(sensor);
  5750  0312  087D               	movf	Sensor_Acq_ExecutePacket@sensor+1,w
  5751  0313  00F1               	movwf	Sensor_setScanFunction@sensor+1
  5752  0314  087C               	movf	Sensor_Acq_ExecutePacket@sensor,w
  5753  0315  00F0               	movwf	Sensor_setScanFunction@sensor
  5754  0316  318C  244C  3182   	fcall	_Sensor_setScanFunction
  5755                           
  5756                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 340:     currentScannSensor = sensor->senso
      +                          r_name;
  5757  0319  087C               	movf	Sensor_Acq_ExecutePacket@sensor,w
  5758  031A  0086               	movwf	6
  5759  031B  087D               	movf	Sensor_Acq_ExecutePacket@sensor+1,w
  5760  031C  0087               	movwf	7
  5761  031D  0801               	movf	1,w
  5762  031E  0020               	movlb	0	; select bank0
  5763  031F  00A0               	movwf	??_Sensor_Acq_ExecutePacket
  5764  0320  0820               	movf	??_Sensor_Acq_ExecutePacket,w
  5765  0321  00C7               	movwf	_currentScannSensor
  5766                           
  5767                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 341:     packet_counter = sensor->oversampl
      +                          ing;
  5768  0322  087C               	movf	Sensor_Acq_ExecutePacket@sensor,w
  5769  0323  0086               	movwf	6
  5770  0324  087D               	movf	Sensor_Acq_ExecutePacket@sensor+1,w
  5771  0325  0087               	movwf	7
  5772  0326  3145               	addfsr 1,5
  5773  0327  0801               	movf	1,w
  5774  0328  00A0               	movwf	??_Sensor_Acq_ExecutePacket
  5775  0329  0820               	movf	??_Sensor_Acq_ExecutePacket,w
  5776  032A  00C6               	movwf	_packet_counter
  5777  032B                     l2803:	
  5778                           
  5779                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 342:     packet_sample = 0;
  5780  032B  01BD               	clrf	_packet_sample
  5781  032C  01BE               	clrf	_packet_sample+1
  5782  032D                     l2805:	
  5783                           
  5784                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 343:     sensor_globalFlags.packet_done = 0
      +                          ;
  5785  032D  1048               	bcf	_sensor_globalFlags,0	;volatile
  5786  032E                     l2807:	
  5787                           
  5788                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 344:     sample_delay = MTOUCH_Random();
  5789  032E  318C  2460  3182   	fcall	_MTOUCH_Random
  5790  0331  0020               	movlb	0	; select bank0
  5791  0332  00A0               	movwf	??_Sensor_Acq_ExecutePacket
  5792  0333  0820               	movf	??_Sensor_Acq_ExecutePacket,w
  5793  0334  00C5               	movwf	_sample_delay
  5794  0335                     l2809:	
  5795                           
  5796                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 345:     packet_sample = 0;
  5797  0335  01BD               	clrf	_packet_sample
  5798  0336  01BE               	clrf	_packet_sample+1
  5799  0337                     l2811:	
  5800                           
  5801                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 347:     sensor_globalFlags.interrupted = 0
      +                          ;
  5802  0337  10C8               	bcf	_sensor_globalFlags,1	;volatile
  5803  0338                     l2813:	
  5804                           
  5805                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 351:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 352:         INTCONbits.GIE = (uint8_t)0;
  5806  0338  138B               	bcf	11,7	;volatile
  5807  0339                     l2815:	
  5808                           
  5809                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 353:         Sensor_Acq_ExecuteScan();
  5810  0339  3183  2361  3182   	fcall	_Sensor_Acq_ExecuteScan
  5811  033C                     l2817:	
  5812                           
  5813                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 354:         INTCONbits.GIE = GIE_state;
  5814  033C  0020               	movlb	0	; select bank0
  5815  033D  0C23               	rrf	Sensor_Acq_ExecutePacket@GIE_state,w
  5816  033E  1C03               	skipc
  5817  033F  138B               	bcf	11,7	;volatile
  5818  0340  1803               	skipnc
  5819  0341  178B               	bsf	11,7	;volatile
  5820  0342                     l2819:	
  5821                           
  5822                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 355:         MTOUCH_Delay();
  5823  0342  318C  2439  3182   	fcall	_MTOUCH_Delay
  5824  0345                     l282:	
  5825                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 356:         while(ADCON0bits.GO_nDONE == 1
      +                          );
  5826                           
  5827  0345  0021               	movlb	1	; select bank1
  5828  0346  189D               	btfsc	29,1	;volatile
  5829  0347  2B49               	goto	u1141
  5830  0348  2B4A               	goto	u1140
  5831  0349                     u1141:	
  5832  0349  2B45               	goto	l282
  5833  034A                     u1140:	
  5834  034A                     l284:	
  5835                           
  5836                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 357:     } while(sensor_globalFlags.packet_
      +                          done == 0);
  5837  034A  0020               	movlb	0	; select bank0
  5838  034B  1C48               	btfss	_sensor_globalFlags,0	;volatile
  5839  034C  2B4E               	goto	u1151
  5840  034D  2B4F               	goto	u1150
  5841  034E                     u1151:	
  5842  034E  2B38               	goto	l2813
  5843  034F                     u1150:	
  5844  034F                     l2821:	
  5845                           
  5846                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 360:     ADCON0 = ADCON0_temp;
  5847  034F  0821               	movf	Sensor_Acq_ExecutePacket@ADCON0_temp,w
  5848  0350  0021               	movlb	1	; select bank1
  5849  0351  009D               	movwf	29	;volatile
  5850                           
  5851                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 361:     ADCON1 = ADCON1_temp;
  5852  0352  0020               	movlb	0	; select bank0
  5853  0353  0822               	movf	Sensor_Acq_ExecutePacket@ADCON1_temp,w
  5854  0354  0021               	movlb	1	; select bank1
  5855  0355  009E               	movwf	30	;volatile
  5856  0356                     l2823:	
  5857                           
  5858                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 363:     if(sensor_globalFlags.interrupted)
  5859  0356  0020               	movlb	0	; select bank0
  5860  0357  1CC8               	btfss	_sensor_globalFlags,1	;volatile
  5861  0358  2B5A               	goto	u1161
  5862  0359  2B5B               	goto	u1160
  5863  035A                     u1161:	
  5864  035A  2B5F               	goto	l286
  5865  035B                     u1160:	
  5866  035B                     l2825:	
  5867                           
  5868                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 364:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 365:         error = MTOUCH_SENSOR_ERROR_interruptedScan;
  5869  035B  30FA               	movlw	250
  5870  035C  00A0               	movwf	??_Sensor_Acq_ExecutePacket
  5871  035D  0820               	movf	??_Sensor_Acq_ExecutePacket,w
  5872  035E  00A4               	movwf	Sensor_Acq_ExecutePacket@error
  5873  035F                     l286:	
  5874                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 366:     }
  5875                           
  5876                           
  5877                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 368:     return error;
  5878  035F  0824               	movf	Sensor_Acq_ExecutePacket@error,w
  5879  0360                     l287:	
  5880  0360  0008               	return
  5881  0361                     __end_of_Sensor_Acq_ExecutePacket:	
  5882                           
  5883                           	psect	text33
  5884  0C4C                     __ptext33:	
  5885 ;; *************** function _Sensor_setScanFunction *****************
  5886 ;; Defined at:
  5887 ;;		line 470 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5888 ;; Parameters:    Size  Location     Type
  5889 ;;  sensor          2    0[COMMON] PTR struct .
  5890 ;;		 -> mtouch_sensor(90), 
  5891 ;; Auto vars:     Size  Location     Type
  5892 ;;		None
  5893 ;; Return value:  Size  Location     Type
  5894 ;;                  1    wreg      void 
  5895 ;; Registers used:
  5896 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5897 ;; Tracked objects:
  5898 ;;		On entry : 0/0
  5899 ;;		On exit  : 0/0
  5900 ;;		Unchanged: 0/0
  5901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5902 ;;      Params:         2       0       0       0       0       0
  5903 ;;      Locals:         0       0       0       0       0       0
  5904 ;;      Temps:          0       0       0       0       0       0
  5905 ;;      Totals:         2       0       0       0       0       0
  5906 ;;Total ram usage:        2 bytes
  5907 ;; Hardware stack levels used:    1
  5908 ;; This function calls:
  5909 ;;		Nothing
  5910 ;; This function is called by:
  5911 ;;		_Sensor_Acq_ExecutePacket
  5912 ;; This function uses a non-reentrant model
  5913 ;;
  5914                           
  5915                           
  5916                           ;psect for function _Sensor_setScanFunction
  5917  0C4C                     _Sensor_setScanFunction:	
  5918  0C4C                     l2715:	
  5919                           ;incstack = 0
  5920                           ; Regs used in _Sensor_setScanFunction: [wreg+fsr1l+fsr1h+status,2+status,0]
  5921                           
  5922  0C4C  0870               	movf	Sensor_setScanFunction@sensor,w
  5923  0C4D  0086               	movwf	6
  5924  0C4E  0871               	movf	Sensor_setScanFunction@sensor+1,w
  5925  0C4F  0087               	movwf	7
  5926  0C50  3141               	addfsr 1,1
  5927  0C51  3F40               	moviw [0]fsr1
  5928  0C52  0020               	movlb	0	; select bank0
  5929  0C53  00D7               	movwf	_Sensor_scanA
  5930  0C54  3F41               	moviw [1]fsr1
  5931  0C55  00D8               	movwf	_Sensor_scanA+1
  5932  0C56  0870               	movf	Sensor_setScanFunction@sensor,w
  5933  0C57  0086               	movwf	6
  5934  0C58  0871               	movf	Sensor_setScanFunction@sensor+1,w
  5935  0C59  0087               	movwf	7
  5936  0C5A  3143               	addfsr 1,3
  5937  0C5B  3F40               	moviw [0]fsr1
  5938  0C5C  00D5               	movwf	_Sensor_scanB
  5939  0C5D  3F41               	moviw [1]fsr1
  5940  0C5E  00D6               	movwf	_Sensor_scanB+1
  5941  0C5F                     l324:	
  5942  0C5F  0008               	return
  5943  0C60                     __end_of_Sensor_setScanFunction:	
  5944                           
  5945                           	psect	text34
  5946  0361                     __ptext34:	
  5947 ;; *************** function _Sensor_Acq_ExecuteScan *****************
  5948 ;; Defined at:
  5949 ;;		line 387 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5950 ;; Parameters:    Size  Location     Type
  5951 ;;		None
  5952 ;; Auto vars:     Size  Location     Type
  5953 ;;  result          2   10[COMMON] unsigned short 
  5954 ;; Return value:  Size  Location     Type
  5955 ;;                  1    wreg      void 
  5956 ;; Registers used:
  5957 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5958 ;; Tracked objects:
  5959 ;;		On entry : 0/0
  5960 ;;		On exit  : 0/0
  5961 ;;		Unchanged: 0/0
  5962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5963 ;;      Params:         0       0       0       0       0       0
  5964 ;;      Locals:         2       0       0       0       0       0
  5965 ;;      Temps:          4       0       0       0       0       0
  5966 ;;      Totals:         6       0       0       0       0       0
  5967 ;;Total ram usage:        6 bytes
  5968 ;; Hardware stack levels used:    1
  5969 ;; Hardware stack levels required when called:    1
  5970 ;; This function calls:
  5971 ;;		_MTOUCH_CVD_ScanA_0
  5972 ;;		_MTOUCH_CVD_ScanA_1
  5973 ;;		_MTOUCH_CVD_ScanA_2
  5974 ;;		_MTOUCH_CVD_ScanA_3
  5975 ;;		_MTOUCH_CVD_ScanA_4
  5976 ;;		_MTOUCH_CVD_ScanA_5
  5977 ;;		_MTOUCH_CVD_ScanA_6
  5978 ;;		_MTOUCH_CVD_ScanA_7
  5979 ;;		_MTOUCH_CVD_ScanA_8
  5980 ;;		_MTOUCH_CVD_ScanA_9
  5981 ;;		_MTOUCH_CVD_ScanB_0
  5982 ;;		_MTOUCH_CVD_ScanB_1
  5983 ;;		_MTOUCH_CVD_ScanB_2
  5984 ;;		_MTOUCH_CVD_ScanB_3
  5985 ;;		_MTOUCH_CVD_ScanB_4
  5986 ;;		_MTOUCH_CVD_ScanB_5
  5987 ;;		_MTOUCH_CVD_ScanB_6
  5988 ;;		_MTOUCH_CVD_ScanB_7
  5989 ;;		_MTOUCH_CVD_ScanB_8
  5990 ;;		_MTOUCH_CVD_ScanB_9
  5991 ;;		___wmul
  5992 ;; This function is called by:
  5993 ;;		_Sensor_Acq_ExecutePacket
  5994 ;; This function uses a non-reentrant model
  5995 ;;
  5996                           
  5997                           
  5998                           ;psect for function _Sensor_Acq_ExecuteScan
  5999  0361                     _Sensor_Acq_ExecuteScan:	
  6000  0361                     l2717:	
  6001                           ;incstack = 0
  6002                           ; Regs used in _Sensor_Acq_ExecuteScan: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6003                           
  6004                           
  6005                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 390:     mtouch_sensor_adcsample_t result =
      +                           ADRES;
  6006  0361  0021               	movlb	1	; select bank1
  6007  0362  081C               	movf	28,w	;volatile
  6008  0363  00FB               	movwf	Sensor_Acq_ExecuteScan@result+1
  6009  0364  081B               	movf	27,w	;volatile
  6010  0365  00FA               	movwf	Sensor_Acq_ExecuteScan@result
  6011  0366                     l2719:	
  6012                           
  6013                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 392:     if(sensor_globalFlags.packet_done)
  6014  0366  0020               	movlb	0	; select bank0
  6015  0367  1C48               	btfss	_sensor_globalFlags,0	;volatile
  6016  0368  2B6A               	goto	u1051
  6017  0369  2B6B               	goto	u1050
  6018  036A                     u1051:	
  6019  036A  2B6C               	goto	l2723
  6020  036B                     u1050:	
  6021  036B  2BC9               	goto	l296
  6022  036C                     l2723:	
  6023                           
  6024                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 395:     if (packet_counter != (uint8_t)0)
  6025  036C  0846               	movf	_packet_counter,w
  6026  036D  1903               	btfsc	3,2
  6027  036E  2B70               	goto	u1061
  6028  036F  2B71               	goto	u1060
  6029  0370                     u1061:	
  6030  0370  2BC4               	goto	l2745
  6031  0371                     u1060:	
  6032  0371  2B7E               	goto	l2733
  6033  0372                     l2727:	
  6034  0372  0858               	movf	_Sensor_scanA+1,w
  6035  0373  008A               	movwf	10
  6036  0374  0857               	movf	_Sensor_scanA,w
  6037  0375  000A               	callw
  6038  0376  3183               	pagesel	$
  6039  0377  2B8F               	goto	l2735
  6040  0378                     l2729:	
  6041  0378  0856               	movf	_Sensor_scanB+1,w
  6042  0379  008A               	movwf	10
  6043  037A  0855               	movf	_Sensor_scanB,w
  6044  037B  000A               	callw
  6045  037C  3183               	pagesel	$
  6046  037D  2B8F               	goto	l2735
  6047  037E                     l2733:	
  6048  037E  0846               	movf	_packet_counter,w
  6049  037F  3901               	andlw	1
  6050  0380  00F6               	movwf	??_Sensor_Acq_ExecuteScan
  6051  0381  01F7               	clrf	??_Sensor_Acq_ExecuteScan+1
  6052                           
  6053                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6054                           ; Switch size 1, requested type "simple"
  6055                           ; Number of cases is 1, Range of values is 0 to 0
  6056                           ; switch strategies available:
  6057                           ; Name         Instructions Cycles
  6058                           ; simple_byte            4     3 (average)
  6059                           ; direct_byte            8     6 (fixed)
  6060                           ; jumptable            260     6 (fixed)
  6061                           ;	Chosen strategy is simple_byte
  6062  0382  0877               	movf	??_Sensor_Acq_ExecuteScan+1,w
  6063  0383  3A00               	xorlw	0	; case 0
  6064  0384  1903               	skipnz
  6065  0385  2B87               	goto	l3487
  6066  0386  2B8F               	goto	l2735
  6067  0387                     l3487:	
  6068                           
  6069                           ; Switch size 1, requested type "simple"
  6070                           ; Number of cases is 2, Range of values is 0 to 1
  6071                           ; switch strategies available:
  6072                           ; Name         Instructions Cycles
  6073                           ; simple_byte            7     4 (average)
  6074                           ; direct_byte           10     6 (fixed)
  6075                           ; jumptable            260     6 (fixed)
  6076                           ;	Chosen strategy is simple_byte
  6077  0387  0876               	movf	??_Sensor_Acq_ExecuteScan,w
  6078  0388  3A00               	xorlw	0	; case 0
  6079  0389  1903               	skipnz
  6080  038A  2B72               	goto	l2727
  6081  038B  3A01               	xorlw	1	; case 1
  6082  038C  1903               	skipnz
  6083  038D  2B78               	goto	l2729
  6084  038E  2B8F               	goto	l2735
  6085  038F                     l2735:	
  6086  038F  0020               	movlb	0	; select bank0
  6087  0390  0847               	movf	_currentScannSensor,w
  6088  0391  00F6               	movwf	??_Sensor_Acq_ExecuteScan
  6089  0392  01F7               	clrf	??_Sensor_Acq_ExecuteScan+1
  6090  0393  0876               	movf	??_Sensor_Acq_ExecuteScan,w
  6091  0394  00F0               	movwf	___wmul@multiplier
  6092  0395  0877               	movf	??_Sensor_Acq_ExecuteScan+1,w
  6093  0396  00F1               	movwf	___wmul@multiplier+1
  6094  0397  3009               	movlw	9
  6095  0398  00F2               	movwf	___wmul@multiplicand
  6096  0399  3000               	movlw	0
  6097  039A  00F3               	movwf	___wmul@multiplicand+1
  6098  039B  318C  24DE  3183   	fcall	___wmul
  6099  039E  3071               	movlw	113
  6100  039F  00F8               	movwf	??_Sensor_Acq_ExecuteScan+2
  6101  03A0  3020               	movlw	32
  6102  03A1  00F9               	movwf	??_Sensor_Acq_ExecuteScan+3
  6103  03A2  0870               	movf	?___wmul,w
  6104  03A3  0778               	addwf	??_Sensor_Acq_ExecuteScan+2,w
  6105  03A4  0086               	movwf	6
  6106  03A5  0871               	movf	?___wmul+1,w
  6107  03A6  3D79               	addwfc	??_Sensor_Acq_ExecuteScan+3,w
  6108  03A7  0087               	movwf	7
  6109  03A8  0801               	movf	1,w
  6110  03A9  0020               	movlb	0	; select bank0
  6111  03AA  0646               	xorwf	_packet_counter,w
  6112  03AB  1903               	skipnz
  6113  03AC  2BAE               	goto	u1071
  6114  03AD  2BAF               	goto	u1070
  6115  03AE                     u1071:	
  6116  03AE  2BC1               	goto	l2743
  6117  03AF                     u1070:	
  6118  03AF                     l2737:	
  6119  03AF  1C46               	btfss	_packet_counter,0
  6120  03B0  2BB2               	goto	u1081
  6121  03B1  2BB3               	goto	u1080
  6122  03B2                     u1081:	
  6123  03B2  2BBD               	goto	l2741
  6124  03B3                     u1080:	
  6125  03B3                     l2739:	
  6126  03B3  3000               	movlw	0
  6127  03B4  00F6               	movwf	??_Sensor_Acq_ExecuteScan
  6128  03B5  3004               	movlw	4
  6129  03B6  00F7               	movwf	??_Sensor_Acq_ExecuteScan+1
  6130  03B7  087A               	movf	Sensor_Acq_ExecuteScan@result,w
  6131  03B8  0276               	subwf	??_Sensor_Acq_ExecuteScan,w
  6132  03B9  00FA               	movwf	Sensor_Acq_ExecuteScan@result
  6133  03BA  087B               	movf	Sensor_Acq_ExecuteScan@result+1,w
  6134  03BB  3B77               	subwfb	??_Sensor_Acq_ExecuteScan+1,w
  6135  03BC  00FB               	movwf	Sensor_Acq_ExecuteScan@result+1
  6136  03BD                     l2741:	
  6137  03BD  087A               	movf	Sensor_Acq_ExecuteScan@result,w
  6138  03BE  07BD               	addwf	_packet_sample,f
  6139  03BF  087B               	movf	Sensor_Acq_ExecuteScan@result+1,w
  6140  03C0  3DBE               	addwfc	_packet_sample+1,f
  6141  03C1                     l2743:	
  6142  03C1  3001               	movlw	1
  6143  03C2  02C6               	subwf	_packet_counter,f
  6144  03C3  2BC9               	goto	l296
  6145  03C4                     l2745:	
  6146  03C4  087A               	movf	Sensor_Acq_ExecuteScan@result,w
  6147  03C5  07BD               	addwf	_packet_sample,f
  6148  03C6  087B               	movf	Sensor_Acq_ExecuteScan@result+1,w
  6149  03C7  3DBE               	addwfc	_packet_sample+1,f
  6150  03C8                     l2747:	
  6151  03C8  1448               	bsf	_sensor_globalFlags,0	;volatile
  6152  03C9                     l296:	
  6153  03C9  0008               	return
  6154  03CA                     __end_of_Sensor_Acq_ExecuteScan:	
  6155                           
  6156                           	psect	text35
  6157  0F7C                     __ptext35:	
  6158 ;; *************** function _MTOUCH_CVD_ScanB_8 *****************
  6159 ;; Defined at:
  6160 ;;		line 1129 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  6161 ;; Parameters:    Size  Location     Type
  6162 ;;		None
  6163 ;; Auto vars:     Size  Location     Type
  6164 ;;		None
  6165 ;; Return value:  Size  Location     Type
  6166 ;;                  1    wreg      void 
  6167 ;; Registers used:
  6168 ;;		wreg
  6169 ;; Tracked objects:
  6170 ;;		On entry : 0/0
  6171 ;;		On exit  : 0/0
  6172 ;;		Unchanged: 0/0
  6173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6174 ;;      Params:         0       0       0       0       0       0
  6175 ;;      Locals:         0       0       0       0       0       0
  6176 ;;      Temps:          0       0       0       0       0       0
  6177 ;;      Totals:         0       0       0       0       0       0
  6178 ;;Total ram usage:        0 bytes
  6179 ;; Hardware stack levels used:    1
  6180 ;; This function calls:
  6181 ;;		Nothing
  6182 ;; This function is called by:
  6183 ;;		_Sensor_Acq_ExecuteScan
  6184 ;; This function uses a non-reentrant model
  6185 ;;
  6186                           
  6187                           
  6188                           ;psect for function _MTOUCH_CVD_ScanB_8
  6189  0F7C                     _MTOUCH_CVD_ScanB_8:	
  6190  0F7C                     l2655:	
  6191                           ;incstack = 0
  6192                           ; Regs used in _MTOUCH_CVD_ScanB_8: [wreg]
  6193                           
  6194  0F7C  0022               	banksel	269	;# 
  6195  0F7D  128D               	bcf	13,5	;# 
  6196  0F7E  0021               	banksel	157	;# 
  6197  0F7F  301D               	movlw	29	;# 
  6198  0F80  009D               	movwf	29	;# 
  6199  0F81                     l2657:	
  6200                           
  6201                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1141:     _delay(16u);
  6202  0F81  3005               	movlw	5
  6203  0F82                     u1987:	
  6204  0F82  0B89               	decfsz	9,f
  6205  0F83  2F82               	goto	u1987
  6206  0F84  0000               	nop
  6207  0F85  308D               	movlw	141	;# 
  6208  0F86  0084               	movwf	4	;# 
  6209  0F87  3000               	movlw	0	;# 
  6210  0F88  0085               	movwf	5	;# 
  6211  0F89  300D               	movlw	13	;# 
  6212  0F8A  0086               	movwf	6	;# 
  6213  0F8B  3001               	movlw	1	;# 
  6214  0F8C  0087               	movwf	7	;# 
  6215  0F8D  3015               	movlw	21	;# 
  6216  0F8E  1700               	bsf	0,6	;# 
  6217  0F8F                     l2659:	
  6218                           
  6219                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1159:     _delay(0u);
  6220  0F8F  009D               	movwf	29	;# 
  6221  0F90                     l2661:	
  6222                           
  6223                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1166:     _delay(8u);
  6224  0F90  3200               	nop2	;2 cycle nop
  6225  0F91  3200               	nop2	;2 cycle nop
  6226  0F92  3200               	nop2	;2 cycle nop
  6227  0F93  3200               	nop2	;2 cycle nop
  6228  0F94  0021               	banksel	157	;# 
  6229  0F95  149D               	bsf	29,1	;# 
  6230  0F96                     l2663:	
  6231                           
  6232                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1173:     _delay(3u);
  6233  0F96  3200               	nop2	;2 cycle nop
  6234  0F97  0000               	nop
  6235  0F98  0022               	banksel	269	;# 
  6236  0F99  130D               	bcf	13,6	;# 
  6237  0F9A  1300               	bcf	0,6	;# 
  6238  0F9B                     l115:	
  6239  0F9B  0008               	return
  6240  0F9C                     __end_of_MTOUCH_CVD_ScanB_8:	
  6241                           
  6242                           	psect	text36
  6243  0F5C                     __ptext36:	
  6244 ;; *************** function _MTOUCH_CVD_ScanB_7 *****************
  6245 ;; Defined at:
  6246 ;;		line 1002 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  6247 ;; Parameters:    Size  Location     Type
  6248 ;;		None
  6249 ;; Auto vars:     Size  Location     Type
  6250 ;;		None
  6251 ;; Return value:  Size  Location     Type
  6252 ;;                  1    wreg      void 
  6253 ;; Registers used:
  6254 ;;		wreg
  6255 ;; Tracked objects:
  6256 ;;		On entry : 0/0
  6257 ;;		On exit  : 0/0
  6258 ;;		Unchanged: 0/0
  6259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6260 ;;      Params:         0       0       0       0       0       0
  6261 ;;      Locals:         0       0       0       0       0       0
  6262 ;;      Temps:          0       0       0       0       0       0
  6263 ;;      Totals:         0       0       0       0       0       0
  6264 ;;Total ram usage:        0 bytes
  6265 ;; Hardware stack levels used:    1
  6266 ;; This function calls:
  6267 ;;		Nothing
  6268 ;; This function is called by:
  6269 ;;		_Sensor_Acq_ExecuteScan
  6270 ;; This function uses a non-reentrant model
  6271 ;;
  6272                           
  6273                           
  6274                           ;psect for function _MTOUCH_CVD_ScanB_7
  6275  0F5C                     _MTOUCH_CVD_ScanB_7:	
  6276  0F5C                     l2635:	
  6277                           ;incstack = 0
  6278                           ; Regs used in _MTOUCH_CVD_ScanB_7: [wreg]
  6279                           
  6280  0F5C  0022               	banksel	269	;# 
  6281  0F5D  120D               	bcf	13,4	;# 
  6282  0F5E  0021               	banksel	157	;# 
  6283  0F5F  3021               	movlw	33	;# 
  6284  0F60  009D               	movwf	29	;# 
  6285  0F61                     l2637:	
  6286                           
  6287                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1014:     _delay(16u);
  6288  0F61  3005               	movlw	5
  6289  0F62                     u1997:	
  6290  0F62  0B89               	decfsz	9,f
  6291  0F63  2F62               	goto	u1997
  6292  0F64  0000               	nop
  6293  0F65  308D               	movlw	141	;# 
  6294  0F66  0084               	movwf	4	;# 
  6295  0F67  3000               	movlw	0	;# 
  6296  0F68  0085               	movwf	5	;# 
  6297  0F69  300D               	movlw	13	;# 
  6298  0F6A  0086               	movwf	6	;# 
  6299  0F6B  3001               	movlw	1	;# 
  6300  0F6C  0087               	movwf	7	;# 
  6301  0F6D  301D               	movlw	29	;# 
  6302  0F6E  1680               	bsf	0,5	;# 
  6303  0F6F                     l2639:	
  6304                           
  6305                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1032:     _delay(0u);
  6306  0F6F  009D               	movwf	29	;# 
  6307  0F70                     l2641:	
  6308                           
  6309                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1039:     _delay(8u);
  6310  0F70  3200               	nop2	;2 cycle nop
  6311  0F71  3200               	nop2	;2 cycle nop
  6312  0F72  3200               	nop2	;2 cycle nop
  6313  0F73  3200               	nop2	;2 cycle nop
  6314  0F74  0021               	banksel	157	;# 
  6315  0F75  149D               	bsf	29,1	;# 
  6316  0F76                     l2643:	
  6317                           
  6318                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1046:     _delay(3u);
  6319  0F76  3200               	nop2	;2 cycle nop
  6320  0F77  0000               	nop
  6321  0F78  0022               	banksel	269	;# 
  6322  0F79  128D               	bcf	13,5	;# 
  6323  0F7A  1280               	bcf	0,5	;# 
  6324  0F7B                     l109:	
  6325  0F7B  0008               	return
  6326  0F7C                     __end_of_MTOUCH_CVD_ScanB_7:	
  6327                           
  6328                           	psect	text37
  6329  0F3C                     __ptext37:	
  6330 ;; *************** function _MTOUCH_CVD_ScanB_6 *****************
  6331 ;; Defined at:
  6332 ;;		line 875 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  6333 ;; Parameters:    Size  Location     Type
  6334 ;;		None
  6335 ;; Auto vars:     Size  Location     Type
  6336 ;;		None
  6337 ;; Return value:  Size  Location     Type
  6338 ;;                  1    wreg      void 
  6339 ;; Registers used:
  6340 ;;		wreg
  6341 ;; Tracked objects:
  6342 ;;		On entry : 0/0
  6343 ;;		On exit  : 0/0
  6344 ;;		Unchanged: 0/0
  6345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6346 ;;      Params:         0       0       0       0       0       0
  6347 ;;      Locals:         0       0       0       0       0       0
  6348 ;;      Temps:          0       0       0       0       0       0
  6349 ;;      Totals:         0       0       0       0       0       0
  6350 ;;Total ram usage:        0 bytes
  6351 ;; Hardware stack levels used:    1
  6352 ;; This function calls:
  6353 ;;		Nothing
  6354 ;; This function is called by:
  6355 ;;		_Sensor_Acq_ExecuteScan
  6356 ;; This function uses a non-reentrant model
  6357 ;;
  6358                           
  6359                           
  6360                           ;psect for function _MTOUCH_CVD_ScanB_6
  6361  0F3C                     _MTOUCH_CVD_ScanB_6:	
  6362  0F3C                     l2615:	
  6363                           ;incstack = 0
  6364                           ; Regs used in _MTOUCH_CVD_ScanB_6: [wreg]
  6365                           
  6366  0F3C  0022               	banksel	269	;# 
  6367  0F3D  118D               	bcf	13,3	;# 
  6368  0F3E  0021               	banksel	157	;# 
  6369  0F3F  3025               	movlw	37	;# 
  6370  0F40  009D               	movwf	29	;# 
  6371  0F41                     l2617:	
  6372                           
  6373                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 887:     _delay(16u);
  6374  0F41  3005               	movlw	5
  6375  0F42                     u2007:	
  6376  0F42  0B89               	decfsz	9,f
  6377  0F43  2F42               	goto	u2007
  6378  0F44  0000               	nop
  6379  0F45  308D               	movlw	141	;# 
  6380  0F46  0084               	movwf	4	;# 
  6381  0F47  3000               	movlw	0	;# 
  6382  0F48  0085               	movwf	5	;# 
  6383  0F49  300D               	movlw	13	;# 
  6384  0F4A  0086               	movwf	6	;# 
  6385  0F4B  3001               	movlw	1	;# 
  6386  0F4C  0087               	movwf	7	;# 
  6387  0F4D  3021               	movlw	33	;# 
  6388  0F4E  1600               	bsf	0,4	;# 
  6389  0F4F                     l2619:	
  6390                           
  6391                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 905:     _delay(0u);
  6392  0F4F  009D               	movwf	29	;# 
  6393  0F50                     l2621:	
  6394                           
  6395                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 912:     _delay(8u);
  6396  0F50  3200               	nop2	;2 cycle nop
  6397  0F51  3200               	nop2	;2 cycle nop
  6398  0F52  3200               	nop2	;2 cycle nop
  6399  0F53  3200               	nop2	;2 cycle nop
  6400  0F54  0021               	banksel	157	;# 
  6401  0F55  149D               	bsf	29,1	;# 
  6402  0F56                     l2623:	
  6403                           
  6404                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 919:     _delay(3u);
  6405  0F56  3200               	nop2	;2 cycle nop
  6406  0F57  0000               	nop
  6407  0F58  0022               	banksel	269	;# 
  6408  0F59  120D               	bcf	13,4	;# 
  6409  0F5A  1200               	bcf	0,4	;# 
  6410  0F5B                     l103:	
  6411  0F5B  0008               	return
  6412  0F5C                     __end_of_MTOUCH_CVD_ScanB_6:	
  6413                           
  6414                           	psect	text38
  6415  0F1C                     __ptext38:	
  6416 ;; *************** function _MTOUCH_CVD_ScanB_5 *****************
  6417 ;; Defined at:
  6418 ;;		line 748 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  6419 ;; Parameters:    Size  Location     Type
  6420 ;;		None
  6421 ;; Auto vars:     Size  Location     Type
  6422 ;;		None
  6423 ;; Return value:  Size  Location     Type
  6424 ;;                  1    wreg      void 
  6425 ;; Registers used:
  6426 ;;		wreg
  6427 ;; Tracked objects:
  6428 ;;		On entry : 0/0
  6429 ;;		On exit  : 0/0
  6430 ;;		Unchanged: 0/0
  6431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6432 ;;      Params:         0       0       0       0       0       0
  6433 ;;      Locals:         0       0       0       0       0       0
  6434 ;;      Temps:          0       0       0       0       0       0
  6435 ;;      Totals:         0       0       0       0       0       0
  6436 ;;Total ram usage:        0 bytes
  6437 ;; Hardware stack levels used:    1
  6438 ;; This function calls:
  6439 ;;		Nothing
  6440 ;; This function is called by:
  6441 ;;		_Sensor_Acq_ExecuteScan
  6442 ;; This function uses a non-reentrant model
  6443 ;;
  6444                           
  6445                           
  6446                           ;psect for function _MTOUCH_CVD_ScanB_5
  6447  0F1C                     _MTOUCH_CVD_ScanB_5:	
  6448  0F1C                     l2595:	
  6449                           ;incstack = 0
  6450                           ; Regs used in _MTOUCH_CVD_ScanB_5: [wreg]
  6451                           
  6452  0F1C  0022               	banksel	269	;# 
  6453  0F1D  108D               	bcf	13,1	;# 
  6454  0F1E  0021               	banksel	157	;# 
  6455  0F1F  302D               	movlw	45	;# 
  6456  0F20  009D               	movwf	29	;# 
  6457  0F21                     l2597:	
  6458                           
  6459                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 760:     _delay(16u);
  6460  0F21  3005               	movlw	5
  6461  0F22                     u2017:	
  6462  0F22  0B89               	decfsz	9,f
  6463  0F23  2F22               	goto	u2017
  6464  0F24  0000               	nop
  6465  0F25  308D               	movlw	141	;# 
  6466  0F26  0084               	movwf	4	;# 
  6467  0F27  3000               	movlw	0	;# 
  6468  0F28  0085               	movwf	5	;# 
  6469  0F29  300D               	movlw	13	;# 
  6470  0F2A  0086               	movwf	6	;# 
  6471  0F2B  3001               	movlw	1	;# 
  6472  0F2C  0087               	movwf	7	;# 
  6473  0F2D  3025               	movlw	37	;# 
  6474  0F2E  1580               	bsf	0,3	;# 
  6475  0F2F                     l2599:	
  6476                           
  6477                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 778:     _delay(0u);
  6478  0F2F  009D               	movwf	29	;# 
  6479  0F30                     l2601:	
  6480                           
  6481                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 785:     _delay(8u);
  6482  0F30  3200               	nop2	;2 cycle nop
  6483  0F31  3200               	nop2	;2 cycle nop
  6484  0F32  3200               	nop2	;2 cycle nop
  6485  0F33  3200               	nop2	;2 cycle nop
  6486  0F34  0021               	banksel	157	;# 
  6487  0F35  149D               	bsf	29,1	;# 
  6488  0F36                     l2603:	
  6489                           
  6490                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 792:     _delay(3u);
  6491  0F36  3200               	nop2	;2 cycle nop
  6492  0F37  0000               	nop
  6493  0F38  0022               	banksel	269	;# 
  6494  0F39  118D               	bcf	13,3	;# 
  6495  0F3A  1180               	bcf	0,3	;# 
  6496  0F3B                     l97:	
  6497  0F3B  0008               	return
  6498  0F3C                     __end_of_MTOUCH_CVD_ScanB_5:	
  6499                           
  6500                           	psect	text39
  6501  0EFC                     __ptext39:	
  6502 ;; *************** function _MTOUCH_CVD_ScanB_4 *****************
  6503 ;; Defined at:
  6504 ;;		line 621 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  6505 ;; Parameters:    Size  Location     Type
  6506 ;;		None
  6507 ;; Auto vars:     Size  Location     Type
  6508 ;;		None
  6509 ;; Return value:  Size  Location     Type
  6510 ;;                  1    wreg      void 
  6511 ;; Registers used:
  6512 ;;		wreg
  6513 ;; Tracked objects:
  6514 ;;		On entry : 0/0
  6515 ;;		On exit  : 0/0
  6516 ;;		Unchanged: 0/0
  6517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6518 ;;      Params:         0       0       0       0       0       0
  6519 ;;      Locals:         0       0       0       0       0       0
  6520 ;;      Temps:          0       0       0       0       0       0
  6521 ;;      Totals:         0       0       0       0       0       0
  6522 ;;Total ram usage:        0 bytes
  6523 ;; Hardware stack levels used:    1
  6524 ;; This function calls:
  6525 ;;		Nothing
  6526 ;; This function is called by:
  6527 ;;		_Sensor_Acq_ExecuteScan
  6528 ;; This function uses a non-reentrant model
  6529 ;;
  6530                           
  6531                           
  6532                           ;psect for function _MTOUCH_CVD_ScanB_4
  6533  0EFC                     _MTOUCH_CVD_ScanB_4:	
  6534  0EFC                     l2575:	
  6535                           ;incstack = 0
  6536                           ; Regs used in _MTOUCH_CVD_ScanB_4: [wreg]
  6537                           
  6538  0EFC  0022               	banksel	268	;# 
  6539  0EFD  120C               	bcf	12,4	;# 
  6540  0EFE  0021               	banksel	157	;# 
  6541  0EFF  3011               	movlw	17	;# 
  6542  0F00  009D               	movwf	29	;# 
  6543  0F01                     l2577:	
  6544                           
  6545                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 633:     _delay(16u);
  6546  0F01  3005               	movlw	5
  6547  0F02                     u2027:	
  6548  0F02  0B89               	decfsz	9,f
  6549  0F03  2F02               	goto	u2027
  6550  0F04  0000               	nop
  6551  0F05  308D               	movlw	141	;# 
  6552  0F06  0084               	movwf	4	;# 
  6553  0F07  3000               	movlw	0	;# 
  6554  0F08  0085               	movwf	5	;# 
  6555  0F09  300D               	movlw	13	;# 
  6556  0F0A  0086               	movwf	6	;# 
  6557  0F0B  3001               	movlw	1	;# 
  6558  0F0C  0087               	movwf	7	;# 
  6559  0F0D  302D               	movlw	45	;# 
  6560  0F0E  1480               	bsf	0,1	;# 
  6561  0F0F                     l2579:	
  6562                           
  6563                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 651:     _delay(0u);
  6564  0F0F  009D               	movwf	29	;# 
  6565  0F10                     l2581:	
  6566                           
  6567                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 658:     _delay(8u);
  6568  0F10  3200               	nop2	;2 cycle nop
  6569  0F11  3200               	nop2	;2 cycle nop
  6570  0F12  3200               	nop2	;2 cycle nop
  6571  0F13  3200               	nop2	;2 cycle nop
  6572  0F14  0021               	banksel	157	;# 
  6573  0F15  149D               	bsf	29,1	;# 
  6574  0F16                     l2583:	
  6575                           
  6576                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 665:     _delay(3u);
  6577  0F16  3200               	nop2	;2 cycle nop
  6578  0F17  0000               	nop
  6579  0F18  0022               	banksel	269	;# 
  6580  0F19  108D               	bcf	13,1	;# 
  6581  0F1A  1080               	bcf	0,1	;# 
  6582  0F1B                     l91:	
  6583  0F1B  0008               	return
  6584  0F1C                     __end_of_MTOUCH_CVD_ScanB_4:	
  6585                           
  6586                           	psect	text40
  6587  0EDC                     __ptext40:	
  6588 ;; *************** function _MTOUCH_CVD_ScanB_3 *****************
  6589 ;; Defined at:
  6590 ;;		line 494 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  6591 ;; Parameters:    Size  Location     Type
  6592 ;;		None
  6593 ;; Auto vars:     Size  Location     Type
  6594 ;;		None
  6595 ;; Return value:  Size  Location     Type
  6596 ;;                  1    wreg      void 
  6597 ;; Registers used:
  6598 ;;		wreg
  6599 ;; Tracked objects:
  6600 ;;		On entry : 0/0
  6601 ;;		On exit  : 0/0
  6602 ;;		Unchanged: 0/0
  6603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6604 ;;      Params:         0       0       0       0       0       0
  6605 ;;      Locals:         0       0       0       0       0       0
  6606 ;;      Temps:          0       0       0       0       0       0
  6607 ;;      Totals:         0       0       0       0       0       0
  6608 ;;Total ram usage:        0 bytes
  6609 ;; Hardware stack levels used:    1
  6610 ;; This function calls:
  6611 ;;		Nothing
  6612 ;; This function is called by:
  6613 ;;		_Sensor_Acq_ExecuteScan
  6614 ;; This function uses a non-reentrant model
  6615 ;;
  6616                           
  6617                           
  6618                           ;psect for function _MTOUCH_CVD_ScanB_3
  6619  0EDC                     _MTOUCH_CVD_ScanB_3:	
  6620  0EDC                     l2555:	
  6621                           ;incstack = 0
  6622                           ; Regs used in _MTOUCH_CVD_ScanB_3: [wreg]
  6623                           
  6624  0EDC  0022               	banksel	268	;# 
  6625  0EDD  110C               	bcf	12,2	;# 
  6626  0EDE  0021               	banksel	157	;# 
  6627  0EDF  3009               	movlw	9	;# 
  6628  0EE0  009D               	movwf	29	;# 
  6629  0EE1                     l2557:	
  6630                           
  6631                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 506:     _delay(16u);
  6632  0EE1  3005               	movlw	5
  6633  0EE2                     u2037:	
  6634  0EE2  0B89               	decfsz	9,f
  6635  0EE3  2EE2               	goto	u2037
  6636  0EE4  0000               	nop
  6637  0EE5  308C               	movlw	140	;# 
  6638  0EE6  0084               	movwf	4	;# 
  6639  0EE7  3000               	movlw	0	;# 
  6640  0EE8  0085               	movwf	5	;# 
  6641  0EE9  300C               	movlw	12	;# 
  6642  0EEA  0086               	movwf	6	;# 
  6643  0EEB  3001               	movlw	1	;# 
  6644  0EEC  0087               	movwf	7	;# 
  6645  0EED  3011               	movlw	17	;# 
  6646  0EEE  1600               	bsf	0,4	;# 
  6647  0EEF                     l2559:	
  6648                           
  6649                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 524:     _delay(0u);
  6650  0EEF  009D               	movwf	29	;# 
  6651  0EF0                     l2561:	
  6652                           
  6653                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 531:     _delay(8u);
  6654  0EF0  3200               	nop2	;2 cycle nop
  6655  0EF1  3200               	nop2	;2 cycle nop
  6656  0EF2  3200               	nop2	;2 cycle nop
  6657  0EF3  3200               	nop2	;2 cycle nop
  6658  0EF4  0021               	banksel	157	;# 
  6659  0EF5  149D               	bsf	29,1	;# 
  6660  0EF6                     l2563:	
  6661                           
  6662                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 538:     _delay(3u);
  6663  0EF6  3200               	nop2	;2 cycle nop
  6664  0EF7  0000               	nop
  6665  0EF8  0022               	banksel	268	;# 
  6666  0EF9  120C               	bcf	12,4	;# 
  6667  0EFA  1200               	bcf	0,4	;# 
  6668  0EFB                     l85:	
  6669  0EFB  0008               	return
  6670  0EFC                     __end_of_MTOUCH_CVD_ScanB_3:	
  6671                           
  6672                           	psect	text41
  6673  0EBC                     __ptext41:	
  6674 ;; *************** function _MTOUCH_CVD_ScanB_2 *****************
  6675 ;; Defined at:
  6676 ;;		line 367 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  6677 ;; Parameters:    Size  Location     Type
  6678 ;;		None
  6679 ;; Auto vars:     Size  Location     Type
  6680 ;;		None
  6681 ;; Return value:  Size  Location     Type
  6682 ;;                  1    wreg      void 
  6683 ;; Registers used:
  6684 ;;		wreg
  6685 ;; Tracked objects:
  6686 ;;		On entry : 0/0
  6687 ;;		On exit  : 0/0
  6688 ;;		Unchanged: 0/0
  6689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6690 ;;      Params:         0       0       0       0       0       0
  6691 ;;      Locals:         0       0       0       0       0       0
  6692 ;;      Temps:          0       0       0       0       0       0
  6693 ;;      Totals:         0       0       0       0       0       0
  6694 ;;Total ram usage:        0 bytes
  6695 ;; Hardware stack levels used:    1
  6696 ;; This function calls:
  6697 ;;		Nothing
  6698 ;; This function is called by:
  6699 ;;		_Sensor_Acq_ExecuteScan
  6700 ;; This function uses a non-reentrant model
  6701 ;;
  6702                           
  6703                           
  6704                           ;psect for function _MTOUCH_CVD_ScanB_2
  6705  0EBC                     _MTOUCH_CVD_ScanB_2:	
  6706  0EBC                     l2535:	
  6707                           ;incstack = 0
  6708                           ; Regs used in _MTOUCH_CVD_ScanB_2: [wreg]
  6709                           
  6710  0EBC  0022               	banksel	268	;# 
  6711  0EBD  108C               	bcf	12,1	;# 
  6712  0EBE  0021               	banksel	157	;# 
  6713  0EBF  3005               	movlw	5	;# 
  6714  0EC0  009D               	movwf	29	;# 
  6715  0EC1                     l2537:	
  6716                           
  6717                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 379:     _delay(16u);
  6718  0EC1  3005               	movlw	5
  6719  0EC2                     u2047:	
  6720  0EC2  0B89               	decfsz	9,f
  6721  0EC3  2EC2               	goto	u2047
  6722  0EC4  0000               	nop
  6723  0EC5  308C               	movlw	140	;# 
  6724  0EC6  0084               	movwf	4	;# 
  6725  0EC7  3000               	movlw	0	;# 
  6726  0EC8  0085               	movwf	5	;# 
  6727  0EC9  300C               	movlw	12	;# 
  6728  0ECA  0086               	movwf	6	;# 
  6729  0ECB  3001               	movlw	1	;# 
  6730  0ECC  0087               	movwf	7	;# 
  6731  0ECD  3009               	movlw	9	;# 
  6732  0ECE  1500               	bsf	0,2	;# 
  6733  0ECF                     l2539:	
  6734                           
  6735                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 397:     _delay(0u);
  6736  0ECF  009D               	movwf	29	;# 
  6737  0ED0                     l2541:	
  6738                           
  6739                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 404:     _delay(8u);
  6740  0ED0  3200               	nop2	;2 cycle nop
  6741  0ED1  3200               	nop2	;2 cycle nop
  6742  0ED2  3200               	nop2	;2 cycle nop
  6743  0ED3  3200               	nop2	;2 cycle nop
  6744  0ED4  0021               	banksel	157	;# 
  6745  0ED5  149D               	bsf	29,1	;# 
  6746  0ED6                     l2543:	
  6747                           
  6748                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 411:     _delay(3u);
  6749  0ED6  3200               	nop2	;2 cycle nop
  6750  0ED7  0000               	nop
  6751  0ED8  0022               	banksel	268	;# 
  6752  0ED9  110C               	bcf	12,2	;# 
  6753  0EDA  1100               	bcf	0,2	;# 
  6754  0EDB                     l79:	
  6755  0EDB  0008               	return
  6756  0EDC                     __end_of_MTOUCH_CVD_ScanB_2:	
  6757                           
  6758                           	psect	text42
  6759  0E9C                     __ptext42:	
  6760 ;; *************** function _MTOUCH_CVD_ScanB_1 *****************
  6761 ;; Defined at:
  6762 ;;		line 240 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  6763 ;; Parameters:    Size  Location     Type
  6764 ;;		None
  6765 ;; Auto vars:     Size  Location     Type
  6766 ;;		None
  6767 ;; Return value:  Size  Location     Type
  6768 ;;                  1    wreg      void 
  6769 ;; Registers used:
  6770 ;;		wreg
  6771 ;; Tracked objects:
  6772 ;;		On entry : 0/0
  6773 ;;		On exit  : 0/0
  6774 ;;		Unchanged: 0/0
  6775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6776 ;;      Params:         0       0       0       0       0       0
  6777 ;;      Locals:         0       0       0       0       0       0
  6778 ;;      Temps:          0       0       0       0       0       0
  6779 ;;      Totals:         0       0       0       0       0       0
  6780 ;;Total ram usage:        0 bytes
  6781 ;; Hardware stack levels used:    1
  6782 ;; This function calls:
  6783 ;;		Nothing
  6784 ;; This function is called by:
  6785 ;;		_Sensor_Acq_ExecuteScan
  6786 ;; This function uses a non-reentrant model
  6787 ;;
  6788                           
  6789                           
  6790                           ;psect for function _MTOUCH_CVD_ScanB_1
  6791  0E9C                     _MTOUCH_CVD_ScanB_1:	
  6792  0E9C                     l2515:	
  6793                           ;incstack = 0
  6794                           ; Regs used in _MTOUCH_CVD_ScanB_1: [wreg]
  6795                           
  6796  0E9C  0022               	banksel	268	;# 
  6797  0E9D  100C               	bcf	12,0	;# 
  6798  0E9E  0021               	banksel	157	;# 
  6799  0E9F  3001               	movlw	1	;# 
  6800  0EA0  009D               	movwf	29	;# 
  6801  0EA1                     l2517:	
  6802                           
  6803                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 252:     _delay(16u);
  6804  0EA1  3005               	movlw	5
  6805  0EA2                     u2057:	
  6806  0EA2  0B89               	decfsz	9,f
  6807  0EA3  2EA2               	goto	u2057
  6808  0EA4  0000               	nop
  6809  0EA5  308C               	movlw	140	;# 
  6810  0EA6  0084               	movwf	4	;# 
  6811  0EA7  3000               	movlw	0	;# 
  6812  0EA8  0085               	movwf	5	;# 
  6813  0EA9  300C               	movlw	12	;# 
  6814  0EAA  0086               	movwf	6	;# 
  6815  0EAB  3001               	movlw	1	;# 
  6816  0EAC  0087               	movwf	7	;# 
  6817  0EAD  3005               	movlw	5	;# 
  6818  0EAE  1480               	bsf	0,1	;# 
  6819  0EAF                     l2519:	
  6820                           
  6821                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 270:     _delay(0u);
  6822  0EAF  009D               	movwf	29	;# 
  6823  0EB0                     l2521:	
  6824                           
  6825                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 277:     _delay(8u);
  6826  0EB0  3200               	nop2	;2 cycle nop
  6827  0EB1  3200               	nop2	;2 cycle nop
  6828  0EB2  3200               	nop2	;2 cycle nop
  6829  0EB3  3200               	nop2	;2 cycle nop
  6830  0EB4  0021               	banksel	157	;# 
  6831  0EB5  149D               	bsf	29,1	;# 
  6832  0EB6                     l2523:	
  6833                           
  6834                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 284:     _delay(3u);
  6835  0EB6  3200               	nop2	;2 cycle nop
  6836  0EB7  0000               	nop
  6837  0EB8  0022               	banksel	268	;# 
  6838  0EB9  108C               	bcf	12,1	;# 
  6839  0EBA  1080               	bcf	0,1	;# 
  6840  0EBB                     l73:	
  6841  0EBB  0008               	return
  6842  0EBC                     __end_of_MTOUCH_CVD_ScanB_1:	
  6843                           
  6844                           	psect	text43
  6845  0E7C                     __ptext43:	
  6846 ;; *************** function _MTOUCH_CVD_ScanB_0 *****************
  6847 ;; Defined at:
  6848 ;;		line 113 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  6849 ;; Parameters:    Size  Location     Type
  6850 ;;		None
  6851 ;; Auto vars:     Size  Location     Type
  6852 ;;		None
  6853 ;; Return value:  Size  Location     Type
  6854 ;;                  1    wreg      void 
  6855 ;; Registers used:
  6856 ;;		wreg
  6857 ;; Tracked objects:
  6858 ;;		On entry : 0/0
  6859 ;;		On exit  : 0/0
  6860 ;;		Unchanged: 0/0
  6861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6862 ;;      Params:         0       0       0       0       0       0
  6863 ;;      Locals:         0       0       0       0       0       0
  6864 ;;      Temps:          0       0       0       0       0       0
  6865 ;;      Totals:         0       0       0       0       0       0
  6866 ;;Total ram usage:        0 bytes
  6867 ;; Hardware stack levels used:    1
  6868 ;; This function calls:
  6869 ;;		Nothing
  6870 ;; This function is called by:
  6871 ;;		_Sensor_Acq_ExecuteScan
  6872 ;; This function uses a non-reentrant model
  6873 ;;
  6874                           
  6875                           
  6876                           ;psect for function _MTOUCH_CVD_ScanB_0
  6877  0E7C                     _MTOUCH_CVD_ScanB_0:	
  6878  0E7C                     l2495:	
  6879                           ;incstack = 0
  6880                           ; Regs used in _MTOUCH_CVD_ScanB_0: [wreg]
  6881                           
  6882  0E7C  0022               	banksel	269	;# 
  6883  0E7D  138D               	bcf	13,7	;# 
  6884  0E7E  0021               	banksel	157	;# 
  6885  0E7F  3019               	movlw	25	;# 
  6886  0E80  009D               	movwf	29	;# 
  6887  0E81                     l2497:	
  6888                           
  6889                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 125:     _delay(16u);
  6890  0E81  3005               	movlw	5
  6891  0E82                     u2067:	
  6892  0E82  0B89               	decfsz	9,f
  6893  0E83  2E82               	goto	u2067
  6894  0E84  0000               	nop
  6895  0E85  308C               	movlw	140	;# 
  6896  0E86  0084               	movwf	4	;# 
  6897  0E87  3000               	movlw	0	;# 
  6898  0E88  0085               	movwf	5	;# 
  6899  0E89  300C               	movlw	12	;# 
  6900  0E8A  0086               	movwf	6	;# 
  6901  0E8B  3001               	movlw	1	;# 
  6902  0E8C  0087               	movwf	7	;# 
  6903  0E8D  3001               	movlw	1	;# 
  6904  0E8E  1400               	bsf	0,0	;# 
  6905  0E8F                     l2499:	
  6906                           
  6907                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 143:     _delay(0u);
  6908  0E8F  009D               	movwf	29	;# 
  6909  0E90                     l2501:	
  6910                           
  6911                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 150:     _delay(8u);
  6912  0E90  3200               	nop2	;2 cycle nop
  6913  0E91  3200               	nop2	;2 cycle nop
  6914  0E92  3200               	nop2	;2 cycle nop
  6915  0E93  3200               	nop2	;2 cycle nop
  6916  0E94  0021               	banksel	157	;# 
  6917  0E95  149D               	bsf	29,1	;# 
  6918  0E96                     l2503:	
  6919                           
  6920                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 157:     _delay(3u);
  6921  0E96  3200               	nop2	;2 cycle nop
  6922  0E97  0000               	nop
  6923  0E98  0022               	banksel	268	;# 
  6924  0E99  100C               	bcf	12,0	;# 
  6925  0E9A  1000               	bcf	0,0	;# 
  6926  0E9B                     l67:	
  6927  0E9B  0008               	return
  6928  0E9C                     __end_of_MTOUCH_CVD_ScanB_0:	
  6929                           
  6930                           	psect	text44
  6931  0E5C                     __ptext44:	
  6932 ;; *************** function _MTOUCH_CVD_ScanB_9 *****************
  6933 ;; Defined at:
  6934 ;;		line 1256 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  6935 ;; Parameters:    Size  Location     Type
  6936 ;;		None
  6937 ;; Auto vars:     Size  Location     Type
  6938 ;;		None
  6939 ;; Return value:  Size  Location     Type
  6940 ;;                  1    wreg      void 
  6941 ;; Registers used:
  6942 ;;		wreg
  6943 ;; Tracked objects:
  6944 ;;		On entry : 0/0
  6945 ;;		On exit  : 0/0
  6946 ;;		Unchanged: 0/0
  6947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6948 ;;      Params:         0       0       0       0       0       0
  6949 ;;      Locals:         0       0       0       0       0       0
  6950 ;;      Temps:          0       0       0       0       0       0
  6951 ;;      Totals:         0       0       0       0       0       0
  6952 ;;Total ram usage:        0 bytes
  6953 ;; Hardware stack levels used:    1
  6954 ;; This function calls:
  6955 ;;		Nothing
  6956 ;; This function is called by:
  6957 ;;		_Sensor_Acq_ExecuteScan
  6958 ;; This function uses a non-reentrant model
  6959 ;;
  6960                           
  6961                           
  6962                           ;psect for function _MTOUCH_CVD_ScanB_9
  6963  0E5C                     _MTOUCH_CVD_ScanB_9:	
  6964  0E5C                     l2675:	
  6965                           ;incstack = 0
  6966                           ; Regs used in _MTOUCH_CVD_ScanB_9: [wreg]
  6967                           
  6968  0E5C  0022               	banksel	269	;# 
  6969  0E5D  130D               	bcf	13,6	;# 
  6970  0E5E  0021               	banksel	157	;# 
  6971  0E5F  3015               	movlw	21	;# 
  6972  0E60  009D               	movwf	29	;# 
  6973  0E61                     l2677:	
  6974                           
  6975                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1268:     _delay(16u);
  6976  0E61  3005               	movlw	5
  6977  0E62                     u2077:	
  6978  0E62  0B89               	decfsz	9,f
  6979  0E63  2E62               	goto	u2077
  6980  0E64  0000               	nop
  6981  0E65  308D               	movlw	141	;# 
  6982  0E66  0084               	movwf	4	;# 
  6983  0E67  3000               	movlw	0	;# 
  6984  0E68  0085               	movwf	5	;# 
  6985  0E69  300D               	movlw	13	;# 
  6986  0E6A  0086               	movwf	6	;# 
  6987  0E6B  3001               	movlw	1	;# 
  6988  0E6C  0087               	movwf	7	;# 
  6989  0E6D  3019               	movlw	25	;# 
  6990  0E6E  1780               	bsf	0,7	;# 
  6991  0E6F                     l2679:	
  6992                           
  6993                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1286:     _delay(0u);
  6994  0E6F  009D               	movwf	29	;# 
  6995  0E70                     l2681:	
  6996                           
  6997                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1293:     _delay(8u);
  6998  0E70  3200               	nop2	;2 cycle nop
  6999  0E71  3200               	nop2	;2 cycle nop
  7000  0E72  3200               	nop2	;2 cycle nop
  7001  0E73  3200               	nop2	;2 cycle nop
  7002  0E74  0021               	banksel	157	;# 
  7003  0E75  149D               	bsf	29,1	;# 
  7004  0E76                     l2683:	
  7005                           
  7006                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1300:     _delay(3u);
  7007  0E76  3200               	nop2	;2 cycle nop
  7008  0E77  0000               	nop
  7009  0E78  0022               	banksel	269	;# 
  7010  0E79  138D               	bcf	13,7	;# 
  7011  0E7A  1380               	bcf	0,7	;# 
  7012  0E7B                     l121:	
  7013  0E7B  0008               	return
  7014  0E7C                     __end_of_MTOUCH_CVD_ScanB_9:	
  7015                           
  7016                           	psect	text45
  7017  0E3C                     __ptext45:	
  7018 ;; *************** function _MTOUCH_CVD_ScanA_8 *****************
  7019 ;; Defined at:
  7020 ;;		line 1066 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  7021 ;; Parameters:    Size  Location     Type
  7022 ;;		None
  7023 ;; Auto vars:     Size  Location     Type
  7024 ;;		None
  7025 ;; Return value:  Size  Location     Type
  7026 ;;                  1    wreg      void 
  7027 ;; Registers used:
  7028 ;;		wreg
  7029 ;; Tracked objects:
  7030 ;;		On entry : 0/0
  7031 ;;		On exit  : 0/0
  7032 ;;		Unchanged: 0/0
  7033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7034 ;;      Params:         0       0       0       0       0       0
  7035 ;;      Locals:         0       0       0       0       0       0
  7036 ;;      Temps:          0       0       0       0       0       0
  7037 ;;      Totals:         0       0       0       0       0       0
  7038 ;;Total ram usage:        0 bytes
  7039 ;; Hardware stack levels used:    1
  7040 ;; This function calls:
  7041 ;;		Nothing
  7042 ;; This function is called by:
  7043 ;;		_Sensor_Acq_ExecuteScan
  7044 ;; This function uses a non-reentrant model
  7045 ;;
  7046                           
  7047                           
  7048                           ;psect for function _MTOUCH_CVD_ScanA_8
  7049  0E3C                     _MTOUCH_CVD_ScanA_8:	
  7050  0E3C                     l2645:	
  7051                           ;incstack = 0
  7052                           ; Regs used in _MTOUCH_CVD_ScanA_8: [wreg]
  7053                           
  7054  0E3C  0022               	banksel	269	;# 
  7055  0E3D  168D               	bsf	13,5	;# 
  7056  0E3E  0021               	banksel	157	;# 
  7057  0E3F  301D               	movlw	29	;# 
  7058  0E40  009D               	movwf	29	;# 
  7059  0E41                     l2647:	
  7060                           
  7061                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1078:     _delay(16u);
  7062  0E41  3005               	movlw	5
  7063  0E42                     u2087:	
  7064  0E42  0B89               	decfsz	9,f
  7065  0E43  2E42               	goto	u2087
  7066  0E44  0000               	nop
  7067  0E45  308D               	movlw	141	;# 
  7068  0E46  0084               	movwf	4	;# 
  7069  0E47  3000               	movlw	0	;# 
  7070  0E48  0085               	movwf	5	;# 
  7071  0E49  300D               	movlw	13	;# 
  7072  0E4A  0086               	movwf	6	;# 
  7073  0E4B  3001               	movlw	1	;# 
  7074  0E4C  0087               	movwf	7	;# 
  7075  0E4D  3015               	movlw	21	;# 
  7076  0E4E  1700               	bsf	0,6	;# 
  7077  0E4F                     l2649:	
  7078                           
  7079                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1096:     _delay(0u);
  7080  0E4F  009D               	movwf	29	;# 
  7081  0E50                     l2651:	
  7082                           
  7083                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1102:     _delay(8u);
  7084  0E50  3200               	nop2	;2 cycle nop
  7085  0E51  3200               	nop2	;2 cycle nop
  7086  0E52  3200               	nop2	;2 cycle nop
  7087  0E53  3200               	nop2	;2 cycle nop
  7088  0E54  0021               	banksel	157	;# 
  7089  0E55  149D               	bsf	29,1	;# 
  7090  0E56                     l2653:	
  7091                           
  7092                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1109:     _delay(3u);
  7093  0E56  3200               	nop2	;2 cycle nop
  7094  0E57  0000               	nop
  7095  0E58  0022               	banksel	269	;# 
  7096  0E59  170D               	bsf	13,6	;# 
  7097  0E5A  1300               	bcf	0,6	;# 
  7098  0E5B                     l112:	
  7099  0E5B  0008               	return
  7100  0E5C                     __end_of_MTOUCH_CVD_ScanA_8:	
  7101                           
  7102                           	psect	text46
  7103  0E1C                     __ptext46:	
  7104 ;; *************** function _MTOUCH_CVD_ScanA_7 *****************
  7105 ;; Defined at:
  7106 ;;		line 939 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  7107 ;; Parameters:    Size  Location     Type
  7108 ;;		None
  7109 ;; Auto vars:     Size  Location     Type
  7110 ;;		None
  7111 ;; Return value:  Size  Location     Type
  7112 ;;                  1    wreg      void 
  7113 ;; Registers used:
  7114 ;;		wreg
  7115 ;; Tracked objects:
  7116 ;;		On entry : 0/0
  7117 ;;		On exit  : 0/0
  7118 ;;		Unchanged: 0/0
  7119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7120 ;;      Params:         0       0       0       0       0       0
  7121 ;;      Locals:         0       0       0       0       0       0
  7122 ;;      Temps:          0       0       0       0       0       0
  7123 ;;      Totals:         0       0       0       0       0       0
  7124 ;;Total ram usage:        0 bytes
  7125 ;; Hardware stack levels used:    1
  7126 ;; This function calls:
  7127 ;;		Nothing
  7128 ;; This function is called by:
  7129 ;;		_Sensor_Acq_ExecuteScan
  7130 ;; This function uses a non-reentrant model
  7131 ;;
  7132                           
  7133                           
  7134                           ;psect for function _MTOUCH_CVD_ScanA_7
  7135  0E1C                     _MTOUCH_CVD_ScanA_7:	
  7136  0E1C                     l2625:	
  7137                           ;incstack = 0
  7138                           ; Regs used in _MTOUCH_CVD_ScanA_7: [wreg]
  7139                           
  7140  0E1C  0022               	banksel	269	;# 
  7141  0E1D  160D               	bsf	13,4	;# 
  7142  0E1E  0021               	banksel	157	;# 
  7143  0E1F  3021               	movlw	33	;# 
  7144  0E20  009D               	movwf	29	;# 
  7145  0E21                     l2627:	
  7146                           
  7147                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 951:     _delay(16u);
  7148  0E21  3005               	movlw	5
  7149  0E22                     u2097:	
  7150  0E22  0B89               	decfsz	9,f
  7151  0E23  2E22               	goto	u2097
  7152  0E24  0000               	nop
  7153  0E25  308D               	movlw	141	;# 
  7154  0E26  0084               	movwf	4	;# 
  7155  0E27  3000               	movlw	0	;# 
  7156  0E28  0085               	movwf	5	;# 
  7157  0E29  300D               	movlw	13	;# 
  7158  0E2A  0086               	movwf	6	;# 
  7159  0E2B  3001               	movlw	1	;# 
  7160  0E2C  0087               	movwf	7	;# 
  7161  0E2D  301D               	movlw	29	;# 
  7162  0E2E  1680               	bsf	0,5	;# 
  7163  0E2F                     l2629:	
  7164                           
  7165                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 969:     _delay(0u);
  7166  0E2F  009D               	movwf	29	;# 
  7167  0E30                     l2631:	
  7168                           
  7169                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 975:     _delay(8u);
  7170  0E30  3200               	nop2	;2 cycle nop
  7171  0E31  3200               	nop2	;2 cycle nop
  7172  0E32  3200               	nop2	;2 cycle nop
  7173  0E33  3200               	nop2	;2 cycle nop
  7174  0E34  0021               	banksel	157	;# 
  7175  0E35  149D               	bsf	29,1	;# 
  7176  0E36                     l2633:	
  7177                           
  7178                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 982:     _delay(3u);
  7179  0E36  3200               	nop2	;2 cycle nop
  7180  0E37  0000               	nop
  7181  0E38  0022               	banksel	269	;# 
  7182  0E39  168D               	bsf	13,5	;# 
  7183  0E3A  1280               	bcf	0,5	;# 
  7184  0E3B                     l106:	
  7185  0E3B  0008               	return
  7186  0E3C                     __end_of_MTOUCH_CVD_ScanA_7:	
  7187                           
  7188                           	psect	text47
  7189  0DFC                     __ptext47:	
  7190 ;; *************** function _MTOUCH_CVD_ScanA_6 *****************
  7191 ;; Defined at:
  7192 ;;		line 812 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  7193 ;; Parameters:    Size  Location     Type
  7194 ;;		None
  7195 ;; Auto vars:     Size  Location     Type
  7196 ;;		None
  7197 ;; Return value:  Size  Location     Type
  7198 ;;                  1    wreg      void 
  7199 ;; Registers used:
  7200 ;;		wreg
  7201 ;; Tracked objects:
  7202 ;;		On entry : 0/0
  7203 ;;		On exit  : 0/0
  7204 ;;		Unchanged: 0/0
  7205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7206 ;;      Params:         0       0       0       0       0       0
  7207 ;;      Locals:         0       0       0       0       0       0
  7208 ;;      Temps:          0       0       0       0       0       0
  7209 ;;      Totals:         0       0       0       0       0       0
  7210 ;;Total ram usage:        0 bytes
  7211 ;; Hardware stack levels used:    1
  7212 ;; This function calls:
  7213 ;;		Nothing
  7214 ;; This function is called by:
  7215 ;;		_Sensor_Acq_ExecuteScan
  7216 ;; This function uses a non-reentrant model
  7217 ;;
  7218                           
  7219                           
  7220                           ;psect for function _MTOUCH_CVD_ScanA_6
  7221  0DFC                     _MTOUCH_CVD_ScanA_6:	
  7222  0DFC                     l2605:	
  7223                           ;incstack = 0
  7224                           ; Regs used in _MTOUCH_CVD_ScanA_6: [wreg]
  7225                           
  7226  0DFC  0022               	banksel	269	;# 
  7227  0DFD  158D               	bsf	13,3	;# 
  7228  0DFE  0021               	banksel	157	;# 
  7229  0DFF  3025               	movlw	37	;# 
  7230  0E00  009D               	movwf	29	;# 
  7231  0E01                     l2607:	
  7232                           
  7233                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 824:     _delay(16u);
  7234  0E01  3005               	movlw	5
  7235  0E02                     u2107:	
  7236  0E02  0B89               	decfsz	9,f
  7237  0E03  2E02               	goto	u2107
  7238  0E04  0000               	nop
  7239  0E05  308D               	movlw	141	;# 
  7240  0E06  0084               	movwf	4	;# 
  7241  0E07  3000               	movlw	0	;# 
  7242  0E08  0085               	movwf	5	;# 
  7243  0E09  300D               	movlw	13	;# 
  7244  0E0A  0086               	movwf	6	;# 
  7245  0E0B  3001               	movlw	1	;# 
  7246  0E0C  0087               	movwf	7	;# 
  7247  0E0D  3021               	movlw	33	;# 
  7248  0E0E  1600               	bsf	0,4	;# 
  7249  0E0F                     l2609:	
  7250                           
  7251                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 842:     _delay(0u);
  7252  0E0F  009D               	movwf	29	;# 
  7253  0E10                     l2611:	
  7254                           
  7255                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 848:     _delay(8u);
  7256  0E10  3200               	nop2	;2 cycle nop
  7257  0E11  3200               	nop2	;2 cycle nop
  7258  0E12  3200               	nop2	;2 cycle nop
  7259  0E13  3200               	nop2	;2 cycle nop
  7260  0E14  0021               	banksel	157	;# 
  7261  0E15  149D               	bsf	29,1	;# 
  7262  0E16                     l2613:	
  7263                           
  7264                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 855:     _delay(3u);
  7265  0E16  3200               	nop2	;2 cycle nop
  7266  0E17  0000               	nop
  7267  0E18  0022               	banksel	269	;# 
  7268  0E19  160D               	bsf	13,4	;# 
  7269  0E1A  1200               	bcf	0,4	;# 
  7270  0E1B                     l100:	
  7271  0E1B  0008               	return
  7272  0E1C                     __end_of_MTOUCH_CVD_ScanA_6:	
  7273                           
  7274                           	psect	text48
  7275  0DDC                     __ptext48:	
  7276 ;; *************** function _MTOUCH_CVD_ScanA_5 *****************
  7277 ;; Defined at:
  7278 ;;		line 685 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  7279 ;; Parameters:    Size  Location     Type
  7280 ;;		None
  7281 ;; Auto vars:     Size  Location     Type
  7282 ;;		None
  7283 ;; Return value:  Size  Location     Type
  7284 ;;                  1    wreg      void 
  7285 ;; Registers used:
  7286 ;;		wreg
  7287 ;; Tracked objects:
  7288 ;;		On entry : 0/0
  7289 ;;		On exit  : 0/0
  7290 ;;		Unchanged: 0/0
  7291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7292 ;;      Params:         0       0       0       0       0       0
  7293 ;;      Locals:         0       0       0       0       0       0
  7294 ;;      Temps:          0       0       0       0       0       0
  7295 ;;      Totals:         0       0       0       0       0       0
  7296 ;;Total ram usage:        0 bytes
  7297 ;; Hardware stack levels used:    1
  7298 ;; This function calls:
  7299 ;;		Nothing
  7300 ;; This function is called by:
  7301 ;;		_Sensor_Acq_ExecuteScan
  7302 ;; This function uses a non-reentrant model
  7303 ;;
  7304                           
  7305                           
  7306                           ;psect for function _MTOUCH_CVD_ScanA_5
  7307  0DDC                     _MTOUCH_CVD_ScanA_5:	
  7308  0DDC                     l2585:	
  7309                           ;incstack = 0
  7310                           ; Regs used in _MTOUCH_CVD_ScanA_5: [wreg]
  7311                           
  7312  0DDC  0022               	banksel	269	;# 
  7313  0DDD  148D               	bsf	13,1	;# 
  7314  0DDE  0021               	banksel	157	;# 
  7315  0DDF  302D               	movlw	45	;# 
  7316  0DE0  009D               	movwf	29	;# 
  7317  0DE1                     l2587:	
  7318                           
  7319                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 697:     _delay(16u);
  7320  0DE1  3005               	movlw	5
  7321  0DE2                     u2117:	
  7322  0DE2  0B89               	decfsz	9,f
  7323  0DE3  2DE2               	goto	u2117
  7324  0DE4  0000               	nop
  7325  0DE5  308D               	movlw	141	;# 
  7326  0DE6  0084               	movwf	4	;# 
  7327  0DE7  3000               	movlw	0	;# 
  7328  0DE8  0085               	movwf	5	;# 
  7329  0DE9  300D               	movlw	13	;# 
  7330  0DEA  0086               	movwf	6	;# 
  7331  0DEB  3001               	movlw	1	;# 
  7332  0DEC  0087               	movwf	7	;# 
  7333  0DED  3025               	movlw	37	;# 
  7334  0DEE  1580               	bsf	0,3	;# 
  7335  0DEF                     l2589:	
  7336                           
  7337                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 715:     _delay(0u);
  7338  0DEF  009D               	movwf	29	;# 
  7339  0DF0                     l2591:	
  7340                           
  7341                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 721:     _delay(8u);
  7342  0DF0  3200               	nop2	;2 cycle nop
  7343  0DF1  3200               	nop2	;2 cycle nop
  7344  0DF2  3200               	nop2	;2 cycle nop
  7345  0DF3  3200               	nop2	;2 cycle nop
  7346  0DF4  0021               	banksel	157	;# 
  7347  0DF5  149D               	bsf	29,1	;# 
  7348  0DF6                     l2593:	
  7349                           
  7350                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 728:     _delay(3u);
  7351  0DF6  3200               	nop2	;2 cycle nop
  7352  0DF7  0000               	nop
  7353  0DF8  0022               	banksel	269	;# 
  7354  0DF9  158D               	bsf	13,3	;# 
  7355  0DFA  1180               	bcf	0,3	;# 
  7356  0DFB                     l94:	
  7357  0DFB  0008               	return
  7358  0DFC                     __end_of_MTOUCH_CVD_ScanA_5:	
  7359                           
  7360                           	psect	text49
  7361  0DBC                     __ptext49:	
  7362 ;; *************** function _MTOUCH_CVD_ScanA_4 *****************
  7363 ;; Defined at:
  7364 ;;		line 558 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  7365 ;; Parameters:    Size  Location     Type
  7366 ;;		None
  7367 ;; Auto vars:     Size  Location     Type
  7368 ;;		None
  7369 ;; Return value:  Size  Location     Type
  7370 ;;                  1    wreg      void 
  7371 ;; Registers used:
  7372 ;;		wreg
  7373 ;; Tracked objects:
  7374 ;;		On entry : 0/0
  7375 ;;		On exit  : 0/0
  7376 ;;		Unchanged: 0/0
  7377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7378 ;;      Params:         0       0       0       0       0       0
  7379 ;;      Locals:         0       0       0       0       0       0
  7380 ;;      Temps:          0       0       0       0       0       0
  7381 ;;      Totals:         0       0       0       0       0       0
  7382 ;;Total ram usage:        0 bytes
  7383 ;; Hardware stack levels used:    1
  7384 ;; This function calls:
  7385 ;;		Nothing
  7386 ;; This function is called by:
  7387 ;;		_Sensor_Acq_ExecuteScan
  7388 ;; This function uses a non-reentrant model
  7389 ;;
  7390                           
  7391                           
  7392                           ;psect for function _MTOUCH_CVD_ScanA_4
  7393  0DBC                     _MTOUCH_CVD_ScanA_4:	
  7394  0DBC                     l2565:	
  7395                           ;incstack = 0
  7396                           ; Regs used in _MTOUCH_CVD_ScanA_4: [wreg]
  7397                           
  7398  0DBC  0022               	banksel	268	;# 
  7399  0DBD  160C               	bsf	12,4	;# 
  7400  0DBE  0021               	banksel	157	;# 
  7401  0DBF  3011               	movlw	17	;# 
  7402  0DC0  009D               	movwf	29	;# 
  7403  0DC1                     l2567:	
  7404                           
  7405                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 570:     _delay(16u);
  7406  0DC1  3005               	movlw	5
  7407  0DC2                     u2127:	
  7408  0DC2  0B89               	decfsz	9,f
  7409  0DC3  2DC2               	goto	u2127
  7410  0DC4  0000               	nop
  7411  0DC5  308D               	movlw	141	;# 
  7412  0DC6  0084               	movwf	4	;# 
  7413  0DC7  3000               	movlw	0	;# 
  7414  0DC8  0085               	movwf	5	;# 
  7415  0DC9  300D               	movlw	13	;# 
  7416  0DCA  0086               	movwf	6	;# 
  7417  0DCB  3001               	movlw	1	;# 
  7418  0DCC  0087               	movwf	7	;# 
  7419  0DCD  302D               	movlw	45	;# 
  7420  0DCE  1480               	bsf	0,1	;# 
  7421  0DCF                     l2569:	
  7422                           
  7423                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 588:     _delay(0u);
  7424  0DCF  009D               	movwf	29	;# 
  7425  0DD0                     l2571:	
  7426                           
  7427                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 594:     _delay(8u);
  7428  0DD0  3200               	nop2	;2 cycle nop
  7429  0DD1  3200               	nop2	;2 cycle nop
  7430  0DD2  3200               	nop2	;2 cycle nop
  7431  0DD3  3200               	nop2	;2 cycle nop
  7432  0DD4  0021               	banksel	157	;# 
  7433  0DD5  149D               	bsf	29,1	;# 
  7434  0DD6                     l2573:	
  7435                           
  7436                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 601:     _delay(3u);
  7437  0DD6  3200               	nop2	;2 cycle nop
  7438  0DD7  0000               	nop
  7439  0DD8  0022               	banksel	269	;# 
  7440  0DD9  148D               	bsf	13,1	;# 
  7441  0DDA  1080               	bcf	0,1	;# 
  7442  0DDB                     l88:	
  7443  0DDB  0008               	return
  7444  0DDC                     __end_of_MTOUCH_CVD_ScanA_4:	
  7445                           
  7446                           	psect	text50
  7447  0D9C                     __ptext50:	
  7448 ;; *************** function _MTOUCH_CVD_ScanA_3 *****************
  7449 ;; Defined at:
  7450 ;;		line 431 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  7451 ;; Parameters:    Size  Location     Type
  7452 ;;		None
  7453 ;; Auto vars:     Size  Location     Type
  7454 ;;		None
  7455 ;; Return value:  Size  Location     Type
  7456 ;;                  1    wreg      void 
  7457 ;; Registers used:
  7458 ;;		wreg
  7459 ;; Tracked objects:
  7460 ;;		On entry : 0/0
  7461 ;;		On exit  : 0/0
  7462 ;;		Unchanged: 0/0
  7463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7464 ;;      Params:         0       0       0       0       0       0
  7465 ;;      Locals:         0       0       0       0       0       0
  7466 ;;      Temps:          0       0       0       0       0       0
  7467 ;;      Totals:         0       0       0       0       0       0
  7468 ;;Total ram usage:        0 bytes
  7469 ;; Hardware stack levels used:    1
  7470 ;; This function calls:
  7471 ;;		Nothing
  7472 ;; This function is called by:
  7473 ;;		_Sensor_Acq_ExecuteScan
  7474 ;; This function uses a non-reentrant model
  7475 ;;
  7476                           
  7477                           
  7478                           ;psect for function _MTOUCH_CVD_ScanA_3
  7479  0D9C                     _MTOUCH_CVD_ScanA_3:	
  7480  0D9C                     l2545:	
  7481                           ;incstack = 0
  7482                           ; Regs used in _MTOUCH_CVD_ScanA_3: [wreg]
  7483                           
  7484  0D9C  0022               	banksel	268	;# 
  7485  0D9D  150C               	bsf	12,2	;# 
  7486  0D9E  0021               	banksel	157	;# 
  7487  0D9F  3009               	movlw	9	;# 
  7488  0DA0  009D               	movwf	29	;# 
  7489  0DA1                     l2547:	
  7490                           
  7491                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 443:     _delay(16u);
  7492  0DA1  3005               	movlw	5
  7493  0DA2                     u2137:	
  7494  0DA2  0B89               	decfsz	9,f
  7495  0DA3  2DA2               	goto	u2137
  7496  0DA4  0000               	nop
  7497  0DA5  308C               	movlw	140	;# 
  7498  0DA6  0084               	movwf	4	;# 
  7499  0DA7  3000               	movlw	0	;# 
  7500  0DA8  0085               	movwf	5	;# 
  7501  0DA9  300C               	movlw	12	;# 
  7502  0DAA  0086               	movwf	6	;# 
  7503  0DAB  3001               	movlw	1	;# 
  7504  0DAC  0087               	movwf	7	;# 
  7505  0DAD  3011               	movlw	17	;# 
  7506  0DAE  1600               	bsf	0,4	;# 
  7507  0DAF                     l2549:	
  7508                           
  7509                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 461:     _delay(0u);
  7510  0DAF  009D               	movwf	29	;# 
  7511  0DB0                     l2551:	
  7512                           
  7513                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 467:     _delay(8u);
  7514  0DB0  3200               	nop2	;2 cycle nop
  7515  0DB1  3200               	nop2	;2 cycle nop
  7516  0DB2  3200               	nop2	;2 cycle nop
  7517  0DB3  3200               	nop2	;2 cycle nop
  7518  0DB4  0021               	banksel	157	;# 
  7519  0DB5  149D               	bsf	29,1	;# 
  7520  0DB6                     l2553:	
  7521                           
  7522                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 474:     _delay(3u);
  7523  0DB6  3200               	nop2	;2 cycle nop
  7524  0DB7  0000               	nop
  7525  0DB8  0022               	banksel	268	;# 
  7526  0DB9  160C               	bsf	12,4	;# 
  7527  0DBA  1200               	bcf	0,4	;# 
  7528  0DBB                     l82:	
  7529  0DBB  0008               	return
  7530  0DBC                     __end_of_MTOUCH_CVD_ScanA_3:	
  7531                           
  7532                           	psect	text51
  7533  0D7C                     __ptext51:	
  7534 ;; *************** function _MTOUCH_CVD_ScanA_2 *****************
  7535 ;; Defined at:
  7536 ;;		line 304 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  7537 ;; Parameters:    Size  Location     Type
  7538 ;;		None
  7539 ;; Auto vars:     Size  Location     Type
  7540 ;;		None
  7541 ;; Return value:  Size  Location     Type
  7542 ;;                  1    wreg      void 
  7543 ;; Registers used:
  7544 ;;		wreg
  7545 ;; Tracked objects:
  7546 ;;		On entry : 0/0
  7547 ;;		On exit  : 0/0
  7548 ;;		Unchanged: 0/0
  7549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7550 ;;      Params:         0       0       0       0       0       0
  7551 ;;      Locals:         0       0       0       0       0       0
  7552 ;;      Temps:          0       0       0       0       0       0
  7553 ;;      Totals:         0       0       0       0       0       0
  7554 ;;Total ram usage:        0 bytes
  7555 ;; Hardware stack levels used:    1
  7556 ;; This function calls:
  7557 ;;		Nothing
  7558 ;; This function is called by:
  7559 ;;		_Sensor_Acq_ExecuteScan
  7560 ;; This function uses a non-reentrant model
  7561 ;;
  7562                           
  7563                           
  7564                           ;psect for function _MTOUCH_CVD_ScanA_2
  7565  0D7C                     _MTOUCH_CVD_ScanA_2:	
  7566  0D7C                     l2525:	
  7567                           ;incstack = 0
  7568                           ; Regs used in _MTOUCH_CVD_ScanA_2: [wreg]
  7569                           
  7570  0D7C  0022               	banksel	268	;# 
  7571  0D7D  148C               	bsf	12,1	;# 
  7572  0D7E  0021               	banksel	157	;# 
  7573  0D7F  3005               	movlw	5	;# 
  7574  0D80  009D               	movwf	29	;# 
  7575  0D81                     l2527:	
  7576                           
  7577                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 316:     _delay(16u);
  7578  0D81  3005               	movlw	5
  7579  0D82                     u2147:	
  7580  0D82  0B89               	decfsz	9,f
  7581  0D83  2D82               	goto	u2147
  7582  0D84  0000               	nop
  7583  0D85  308C               	movlw	140	;# 
  7584  0D86  0084               	movwf	4	;# 
  7585  0D87  3000               	movlw	0	;# 
  7586  0D88  0085               	movwf	5	;# 
  7587  0D89  300C               	movlw	12	;# 
  7588  0D8A  0086               	movwf	6	;# 
  7589  0D8B  3001               	movlw	1	;# 
  7590  0D8C  0087               	movwf	7	;# 
  7591  0D8D  3009               	movlw	9	;# 
  7592  0D8E  1500               	bsf	0,2	;# 
  7593  0D8F                     l2529:	
  7594                           
  7595                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 334:     _delay(0u);
  7596  0D8F  009D               	movwf	29	;# 
  7597  0D90                     l2531:	
  7598                           
  7599                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 340:     _delay(8u);
  7600  0D90  3200               	nop2	;2 cycle nop
  7601  0D91  3200               	nop2	;2 cycle nop
  7602  0D92  3200               	nop2	;2 cycle nop
  7603  0D93  3200               	nop2	;2 cycle nop
  7604  0D94  0021               	banksel	157	;# 
  7605  0D95  149D               	bsf	29,1	;# 
  7606  0D96                     l2533:	
  7607                           
  7608                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 347:     _delay(3u);
  7609  0D96  3200               	nop2	;2 cycle nop
  7610  0D97  0000               	nop
  7611  0D98  0022               	banksel	268	;# 
  7612  0D99  150C               	bsf	12,2	;# 
  7613  0D9A  1100               	bcf	0,2	;# 
  7614  0D9B                     l76:	
  7615  0D9B  0008               	return
  7616  0D9C                     __end_of_MTOUCH_CVD_ScanA_2:	
  7617                           
  7618                           	psect	text52
  7619  0D5C                     __ptext52:	
  7620 ;; *************** function _MTOUCH_CVD_ScanA_1 *****************
  7621 ;; Defined at:
  7622 ;;		line 177 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  7623 ;; Parameters:    Size  Location     Type
  7624 ;;		None
  7625 ;; Auto vars:     Size  Location     Type
  7626 ;;		None
  7627 ;; Return value:  Size  Location     Type
  7628 ;;                  1    wreg      void 
  7629 ;; Registers used:
  7630 ;;		wreg
  7631 ;; Tracked objects:
  7632 ;;		On entry : 0/0
  7633 ;;		On exit  : 0/0
  7634 ;;		Unchanged: 0/0
  7635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7636 ;;      Params:         0       0       0       0       0       0
  7637 ;;      Locals:         0       0       0       0       0       0
  7638 ;;      Temps:          0       0       0       0       0       0
  7639 ;;      Totals:         0       0       0       0       0       0
  7640 ;;Total ram usage:        0 bytes
  7641 ;; Hardware stack levels used:    1
  7642 ;; This function calls:
  7643 ;;		Nothing
  7644 ;; This function is called by:
  7645 ;;		_Sensor_Acq_ExecuteScan
  7646 ;; This function uses a non-reentrant model
  7647 ;;
  7648                           
  7649                           
  7650                           ;psect for function _MTOUCH_CVD_ScanA_1
  7651  0D5C                     _MTOUCH_CVD_ScanA_1:	
  7652  0D5C                     l2505:	
  7653                           ;incstack = 0
  7654                           ; Regs used in _MTOUCH_CVD_ScanA_1: [wreg]
  7655                           
  7656  0D5C  0022               	banksel	268	;# 
  7657  0D5D  140C               	bsf	12,0	;# 
  7658  0D5E  0021               	banksel	157	;# 
  7659  0D5F  3001               	movlw	1	;# 
  7660  0D60  009D               	movwf	29	;# 
  7661  0D61                     l2507:	
  7662                           
  7663                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 189:     _delay(16u);
  7664  0D61  3005               	movlw	5
  7665  0D62                     u2157:	
  7666  0D62  0B89               	decfsz	9,f
  7667  0D63  2D62               	goto	u2157
  7668  0D64  0000               	nop
  7669  0D65  308C               	movlw	140	;# 
  7670  0D66  0084               	movwf	4	;# 
  7671  0D67  3000               	movlw	0	;# 
  7672  0D68  0085               	movwf	5	;# 
  7673  0D69  300C               	movlw	12	;# 
  7674  0D6A  0086               	movwf	6	;# 
  7675  0D6B  3001               	movlw	1	;# 
  7676  0D6C  0087               	movwf	7	;# 
  7677  0D6D  3005               	movlw	5	;# 
  7678  0D6E  1480               	bsf	0,1	;# 
  7679  0D6F                     l2509:	
  7680                           
  7681                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 207:     _delay(0u);
  7682  0D6F  009D               	movwf	29	;# 
  7683  0D70                     l2511:	
  7684                           
  7685                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 213:     _delay(8u);
  7686  0D70  3200               	nop2	;2 cycle nop
  7687  0D71  3200               	nop2	;2 cycle nop
  7688  0D72  3200               	nop2	;2 cycle nop
  7689  0D73  3200               	nop2	;2 cycle nop
  7690  0D74  0021               	banksel	157	;# 
  7691  0D75  149D               	bsf	29,1	;# 
  7692  0D76                     l2513:	
  7693                           
  7694                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 220:     _delay(3u);
  7695  0D76  3200               	nop2	;2 cycle nop
  7696  0D77  0000               	nop
  7697  0D78  0022               	banksel	268	;# 
  7698  0D79  148C               	bsf	12,1	;# 
  7699  0D7A  1080               	bcf	0,1	;# 
  7700  0D7B                     l70:	
  7701  0D7B  0008               	return
  7702  0D7C                     __end_of_MTOUCH_CVD_ScanA_1:	
  7703                           
  7704                           	psect	text53
  7705  0D3C                     __ptext53:	
  7706 ;; *************** function _MTOUCH_CVD_ScanA_0 *****************
  7707 ;; Defined at:
  7708 ;;		line 50 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  7709 ;; Parameters:    Size  Location     Type
  7710 ;;		None
  7711 ;; Auto vars:     Size  Location     Type
  7712 ;;		None
  7713 ;; Return value:  Size  Location     Type
  7714 ;;                  1    wreg      void 
  7715 ;; Registers used:
  7716 ;;		wreg
  7717 ;; Tracked objects:
  7718 ;;		On entry : 0/0
  7719 ;;		On exit  : 0/0
  7720 ;;		Unchanged: 0/0
  7721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7722 ;;      Params:         0       0       0       0       0       0
  7723 ;;      Locals:         0       0       0       0       0       0
  7724 ;;      Temps:          0       0       0       0       0       0
  7725 ;;      Totals:         0       0       0       0       0       0
  7726 ;;Total ram usage:        0 bytes
  7727 ;; Hardware stack levels used:    1
  7728 ;; This function calls:
  7729 ;;		Nothing
  7730 ;; This function is called by:
  7731 ;;		_Sensor_Acq_ExecuteScan
  7732 ;; This function uses a non-reentrant model
  7733 ;;
  7734                           
  7735                           
  7736                           ;psect for function _MTOUCH_CVD_ScanA_0
  7737  0D3C                     _MTOUCH_CVD_ScanA_0:	
  7738  0D3C                     l2485:	
  7739                           ;incstack = 0
  7740                           ; Regs used in _MTOUCH_CVD_ScanA_0: [wreg]
  7741                           
  7742  0D3C  0022               	banksel	269	;# 
  7743  0D3D  178D               	bsf	13,7	;# 
  7744  0D3E  0021               	banksel	157	;# 
  7745  0D3F  3019               	movlw	25	;# 
  7746  0D40  009D               	movwf	29	;# 
  7747  0D41                     l2487:	
  7748                           
  7749                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 62:     _delay(16u);
  7750  0D41  3005               	movlw	5
  7751  0D42                     u2167:	
  7752  0D42  0B89               	decfsz	9,f
  7753  0D43  2D42               	goto	u2167
  7754  0D44  0000               	nop
  7755  0D45  308C               	movlw	140	;# 
  7756  0D46  0084               	movwf	4	;# 
  7757  0D47  3000               	movlw	0	;# 
  7758  0D48  0085               	movwf	5	;# 
  7759  0D49  300C               	movlw	12	;# 
  7760  0D4A  0086               	movwf	6	;# 
  7761  0D4B  3001               	movlw	1	;# 
  7762  0D4C  0087               	movwf	7	;# 
  7763  0D4D  3001               	movlw	1	;# 
  7764  0D4E  1400               	bsf	0,0	;# 
  7765  0D4F                     l2489:	
  7766                           
  7767                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 80:     _delay(0u);
  7768  0D4F  009D               	movwf	29	;# 
  7769  0D50                     l2491:	
  7770                           
  7771                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 86:     _delay(8u);
  7772  0D50  3200               	nop2	;2 cycle nop
  7773  0D51  3200               	nop2	;2 cycle nop
  7774  0D52  3200               	nop2	;2 cycle nop
  7775  0D53  3200               	nop2	;2 cycle nop
  7776  0D54  0021               	banksel	157	;# 
  7777  0D55  149D               	bsf	29,1	;# 
  7778  0D56                     l2493:	
  7779                           
  7780                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 93:     _delay(3u);
  7781  0D56  3200               	nop2	;2 cycle nop
  7782  0D57  0000               	nop
  7783  0D58  0022               	banksel	268	;# 
  7784  0D59  140C               	bsf	12,0	;# 
  7785  0D5A  1000               	bcf	0,0	;# 
  7786  0D5B                     l64:	
  7787  0D5B  0008               	return
  7788  0D5C                     __end_of_MTOUCH_CVD_ScanA_0:	
  7789                           
  7790                           	psect	text54
  7791  0D1C                     __ptext54:	
  7792 ;; *************** function _MTOUCH_CVD_ScanA_9 *****************
  7793 ;; Defined at:
  7794 ;;		line 1193 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  7795 ;; Parameters:    Size  Location     Type
  7796 ;;		None
  7797 ;; Auto vars:     Size  Location     Type
  7798 ;;		None
  7799 ;; Return value:  Size  Location     Type
  7800 ;;                  1    wreg      void 
  7801 ;; Registers used:
  7802 ;;		wreg
  7803 ;; Tracked objects:
  7804 ;;		On entry : 0/0
  7805 ;;		On exit  : 0/0
  7806 ;;		Unchanged: 0/0
  7807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7808 ;;      Params:         0       0       0       0       0       0
  7809 ;;      Locals:         0       0       0       0       0       0
  7810 ;;      Temps:          0       0       0       0       0       0
  7811 ;;      Totals:         0       0       0       0       0       0
  7812 ;;Total ram usage:        0 bytes
  7813 ;; Hardware stack levels used:    1
  7814 ;; This function calls:
  7815 ;;		Nothing
  7816 ;; This function is called by:
  7817 ;;		_Sensor_Acq_ExecuteScan
  7818 ;; This function uses a non-reentrant model
  7819 ;;
  7820                           
  7821                           
  7822                           ;psect for function _MTOUCH_CVD_ScanA_9
  7823  0D1C                     _MTOUCH_CVD_ScanA_9:	
  7824  0D1C                     l2665:	
  7825                           ;incstack = 0
  7826                           ; Regs used in _MTOUCH_CVD_ScanA_9: [wreg]
  7827                           
  7828  0D1C  0022               	banksel	269	;# 
  7829  0D1D  170D               	bsf	13,6	;# 
  7830  0D1E  0021               	banksel	157	;# 
  7831  0D1F  3015               	movlw	21	;# 
  7832  0D20  009D               	movwf	29	;# 
  7833  0D21                     l2667:	
  7834                           
  7835                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1205:     _delay(16u);
  7836  0D21  3005               	movlw	5
  7837  0D22                     u2177:	
  7838  0D22  0B89               	decfsz	9,f
  7839  0D23  2D22               	goto	u2177
  7840  0D24  0000               	nop
  7841  0D25  308D               	movlw	141	;# 
  7842  0D26  0084               	movwf	4	;# 
  7843  0D27  3000               	movlw	0	;# 
  7844  0D28  0085               	movwf	5	;# 
  7845  0D29  300D               	movlw	13	;# 
  7846  0D2A  0086               	movwf	6	;# 
  7847  0D2B  3001               	movlw	1	;# 
  7848  0D2C  0087               	movwf	7	;# 
  7849  0D2D  3019               	movlw	25	;# 
  7850  0D2E  1780               	bsf	0,7	;# 
  7851  0D2F                     l2669:	
  7852                           
  7853                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1223:     _delay(0u);
  7854  0D2F  009D               	movwf	29	;# 
  7855  0D30                     l2671:	
  7856                           
  7857                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1229:     _delay(8u);
  7858  0D30  3200               	nop2	;2 cycle nop
  7859  0D31  3200               	nop2	;2 cycle nop
  7860  0D32  3200               	nop2	;2 cycle nop
  7861  0D33  3200               	nop2	;2 cycle nop
  7862  0D34  0021               	banksel	157	;# 
  7863  0D35  149D               	bsf	29,1	;# 
  7864  0D36                     l2673:	
  7865                           
  7866                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1236:     _delay(3u);
  7867  0D36  3200               	nop2	;2 cycle nop
  7868  0D37  0000               	nop
  7869  0D38  0022               	banksel	269	;# 
  7870  0D39  178D               	bsf	13,7	;# 
  7871  0D3A  1380               	bcf	0,7	;# 
  7872  0D3B                     l118:	
  7873  0D3B  0008               	return
  7874  0D3C                     __end_of_MTOUCH_CVD_ScanA_9:	
  7875                           
  7876                           	psect	text55
  7877  0B6A                     __ptext55:	
  7878 ;; *************** function _MTOUCH_Sensor_Scan_Initialize *****************
  7879 ;; Defined at:
  7880 ;;		line 180 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  7881 ;; Parameters:    Size  Location     Type
  7882 ;;		None
  7883 ;; Auto vars:     Size  Location     Type
  7884 ;;		None
  7885 ;; Return value:  Size  Location     Type
  7886 ;;                  1    wreg      void 
  7887 ;; Registers used:
  7888 ;;		wreg, status,2
  7889 ;; Tracked objects:
  7890 ;;		On entry : 0/0
  7891 ;;		On exit  : 0/0
  7892 ;;		Unchanged: 0/0
  7893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7894 ;;      Params:         0       0       0       0       0       0
  7895 ;;      Locals:         0       0       0       0       0       0
  7896 ;;      Temps:          0       0       0       0       0       0
  7897 ;;      Totals:         0       0       0       0       0       0
  7898 ;;Total ram usage:        0 bytes
  7899 ;; Hardware stack levels used:    1
  7900 ;; This function calls:
  7901 ;;		Nothing
  7902 ;; This function is called by:
  7903 ;;		_MTOUCH_Initialize
  7904 ;;		_Sensor_Acq_ExecutePacket
  7905 ;; This function uses a non-reentrant model
  7906 ;;
  7907                           
  7908                           
  7909                           ;psect for function _MTOUCH_Sensor_Scan_Initialize
  7910  0B6A                     _MTOUCH_Sensor_Scan_Initialize:	
  7911  0B6A                     l2711:	
  7912                           ;incstack = 0
  7913                           ; Regs used in _MTOUCH_Sensor_Scan_Initialize: [wreg+status,2]
  7914                           
  7915                           
  7916                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 183:     ADCON0 = (uint8_t)0;
  7917  0B6A  0021               	movlb	1	; select bank1
  7918  0B6B  019D               	clrf	29	;volatile
  7919  0B6C                     l2713:	
  7920                           
  7921                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 184:     ADCON1 = (uint8_t)( 0x1<<7 | 0x2<<
      +                          4 | 0x0 );
  7922  0B6C  30A0               	movlw	160
  7923  0B6D  009E               	movwf	30	;volatile
  7924  0B6E                     l234:	
  7925  0B6E  0008               	return
  7926  0B6F                     __end_of_MTOUCH_Sensor_Scan_Initialize:	
  7927                           
  7928                           	psect	text56
  7929  0C60                     __ptext56:	
  7930 ;; *************** function _MTOUCH_Random *****************
  7931 ;; Defined at:
  7932 ;;		line 66 in file "mcc_generated_files/mtouch/mtouch_random.c"
  7933 ;; Parameters:    Size  Location     Type
  7934 ;;		None
  7935 ;; Auto vars:     Size  Location     Type
  7936 ;;		None
  7937 ;; Return value:  Size  Location     Type
  7938 ;;                  1    wreg      unsigned char 
  7939 ;; Registers used:
  7940 ;;		wreg, status,2, status,0
  7941 ;; Tracked objects:
  7942 ;;		On entry : 0/0
  7943 ;;		On exit  : 0/0
  7944 ;;		Unchanged: 0/0
  7945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7946 ;;      Params:         0       0       0       0       0       0
  7947 ;;      Locals:         0       0       0       0       0       0
  7948 ;;      Temps:          1       0       0       0       0       0
  7949 ;;      Totals:         1       0       0       0       0       0
  7950 ;;Total ram usage:        1 bytes
  7951 ;; Hardware stack levels used:    1
  7952 ;; This function calls:
  7953 ;;		Nothing
  7954 ;; This function is called by:
  7955 ;;		_Sensor_Acq_ExecutePacket
  7956 ;; This function uses a non-reentrant model
  7957 ;;
  7958                           
  7959                           
  7960                           ;psect for function _MTOUCH_Random
  7961  0C60                     _MTOUCH_Random:	
  7962  0C60                     l2699:	
  7963                           ;incstack = 0
  7964                           ; Regs used in _MTOUCH_Random: [wreg+status,2+status,0]
  7965                           
  7966                           
  7967                           ;mcc_generated_files/mtouch/mtouch_random.c: 68:     static MTOUCH_RANDOM_t seed = (MTOU
      +                          CH_RANDOM_t)0;;mcc_generated_files/mtouch/mtouch_random.c: 70:     if ((seed & (MTOUCH_R
      +                          ANDOM_t)1) != (MTOUCH_RANDOM_t)0)
  7968  0C60  0020               	movlb	0	; select bank0
  7969  0C61  1C4A               	btfss	MTOUCH_Random@seed,0
  7970  0C62  2C64               	goto	u1041
  7971  0C63  2C65               	goto	u1040
  7972  0C64                     u1041:	
  7973  0C64  2C6A               	goto	l2703
  7974  0C65                     u1040:	
  7975  0C65                     l2701:	
  7976                           
  7977                           ;mcc_generated_files/mtouch/mtouch_random.c: 71:     {;mcc_generated_files/mtouch/mtouch
      +                          _random.c: 73:         seed = seed >> (uint8_t)1;
  7978  0C65  364A               	lsrf	MTOUCH_Random@seed,w
  7979  0C66  00F0               	movwf	??_MTOUCH_Random
  7980  0C67  0870               	movf	??_MTOUCH_Random,w
  7981  0C68  00CA               	movwf	MTOUCH_Random@seed
  7982                           
  7983                           ;mcc_generated_files/mtouch/mtouch_random.c: 74:     }
  7984  0C69  2C73               	goto	l2707
  7985  0C6A                     l2703:	
  7986                           
  7987                           ;mcc_generated_files/mtouch/mtouch_random.c: 76:     {;mcc_generated_files/mtouch/mtouch
      +                          _random.c: 81:         seed = seed >> (uint8_t)1;
  7988  0C6A  364A               	lsrf	MTOUCH_Random@seed,w
  7989  0C6B  00F0               	movwf	??_MTOUCH_Random
  7990  0C6C  0870               	movf	??_MTOUCH_Random,w
  7991  0C6D  00CA               	movwf	MTOUCH_Random@seed
  7992  0C6E                     l2705:	
  7993                           
  7994                           ;mcc_generated_files/mtouch/mtouch_random.c: 82:         seed = seed ^ (MTOUCH_RANDOM_t)
      +                          0xB4;
  7995  0C6E  084A               	movf	MTOUCH_Random@seed,w
  7996  0C6F  3AB4               	xorlw	180
  7997  0C70  00F0               	movwf	??_MTOUCH_Random
  7998  0C71  0870               	movf	??_MTOUCH_Random,w
  7999  0C72  00CA               	movwf	MTOUCH_Random@seed
  8000  0C73                     l2707:	
  8001                           
  8002                           ;mcc_generated_files/mtouch/mtouch_random.c: 85:     return (uint8_t)seed & 0x0F;
  8003  0C73  084A               	movf	MTOUCH_Random@seed,w
  8004  0C74  390F               	andlw	15
  8005  0C75                     l7:	
  8006  0C75  0008               	return
  8007  0C76                     __end_of_MTOUCH_Random:	
  8008                           
  8009                           	psect	text57
  8010  0C39                     __ptext57:	
  8011 ;; *************** function _MTOUCH_Delay *****************
  8012 ;; Defined at:
  8013 ;;		line 371 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  8014 ;; Parameters:    Size  Location     Type
  8015 ;;		None
  8016 ;; Auto vars:     Size  Location     Type
  8017 ;;  i               1    1[COMMON] unsigned char 
  8018 ;; Return value:  Size  Location     Type
  8019 ;;                  1    wreg      void 
  8020 ;; Registers used:
  8021 ;;		wreg, status,2, status,0
  8022 ;; Tracked objects:
  8023 ;;		On entry : 0/0
  8024 ;;		On exit  : 0/0
  8025 ;;		Unchanged: 0/0
  8026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8027 ;;      Params:         0       0       0       0       0       0
  8028 ;;      Locals:         1       0       0       0       0       0
  8029 ;;      Temps:          1       0       0       0       0       0
  8030 ;;      Totals:         2       0       0       0       0       0
  8031 ;;Total ram usage:        2 bytes
  8032 ;; Hardware stack levels used:    1
  8033 ;; This function calls:
  8034 ;;		Nothing
  8035 ;; This function is called by:
  8036 ;;		_Sensor_Acq_ExecutePacket
  8037 ;; This function uses a non-reentrant model
  8038 ;;
  8039                           
  8040                           
  8041                           ;psect for function _MTOUCH_Delay
  8042  0C39                     _MTOUCH_Delay:	
  8043  0C39                     l2753:	
  8044                           ;incstack = 0
  8045                           ; Regs used in _MTOUCH_Delay: [wreg+status,2+status,0]
  8046                           
  8047                           
  8048                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 373:     for(uint8_t i = sample_delay;i>0;i
      +                          --)
  8049  0C39  0020               	movlb	0	; select bank0
  8050  0C3A  0845               	movf	_sample_delay,w
  8051  0C3B  00F0               	movwf	??_MTOUCH_Delay
  8052  0C3C  0870               	movf	??_MTOUCH_Delay,w
  8053  0C3D  00F1               	movwf	MTOUCH_Delay@i
  8054  0C3E                     l2755:	
  8055  0C3E  0871               	movf	MTOUCH_Delay@i,w
  8056  0C3F  1D03               	btfss	3,2
  8057  0C40  2C42               	goto	u1091
  8058  0C41  2C43               	goto	u1090
  8059  0C42                     u1091:	
  8060  0C42  2C44               	goto	l2759
  8061  0C43                     u1090:	
  8062  0C43  2C4B               	goto	l292
  8063  0C44                     l2759:	
  8064                           
  8065                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 374:     { }
  8066  0C44  3001               	movlw	1
  8067  0C45  02F1               	subwf	MTOUCH_Delay@i,f
  8068  0C46  0871               	movf	MTOUCH_Delay@i,w
  8069  0C47  1D03               	btfss	3,2
  8070  0C48  2C4A               	goto	u1101
  8071  0C49  2C4B               	goto	u1100
  8072  0C4A                     u1101:	
  8073  0C4A  2C44               	goto	l2759
  8074  0C4B                     u1100:	
  8075  0C4B                     l292:	
  8076  0C4B  0008               	return
  8077  0C4C                     __end_of_MTOUCH_Delay:	
  8078                           
  8079                           	psect	text58
  8080  0C27                     __ptext58:	
  8081 ;; *************** function _MTOUCH_Button_ServiceAll *****************
  8082 ;; Defined at:
  8083 ;;		line 266 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8084 ;; Parameters:    Size  Location     Type
  8085 ;;		None
  8086 ;; Auto vars:     Size  Location     Type
  8087 ;;  button          1   19[BANK0 ] enum E2696
  8088 ;; Return value:  Size  Location     Type
  8089 ;;                  1    wreg      void 
  8090 ;; Registers used:
  8091 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8092 ;; Tracked objects:
  8093 ;;		On entry : 0/0
  8094 ;;		On exit  : 0/0
  8095 ;;		Unchanged: 0/0
  8096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8097 ;;      Params:         0       0       0       0       0       0
  8098 ;;      Locals:         0       1       0       0       0       0
  8099 ;;      Temps:          1       0       0       0       0       0
  8100 ;;      Totals:         1       1       0       0       0       0
  8101 ;;Total ram usage:        2 bytes
  8102 ;; Hardware stack levels used:    1
  8103 ;; Hardware stack levels required when called:    5
  8104 ;; This function calls:
  8105 ;;		_Button_Service
  8106 ;; This function is called by:
  8107 ;;		_MTOUCH_Service_Mainloop
  8108 ;; This function uses a non-reentrant model
  8109 ;;
  8110                           
  8111                           
  8112                           ;psect for function _MTOUCH_Button_ServiceAll
  8113  0C27                     _MTOUCH_Button_ServiceAll:	
  8114  0C27                     l3153:	
  8115                           ;incstack = 0
  8116                           ; Regs used in _MTOUCH_Button_ServiceAll: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8117                           
  8118                           
  8119                           ;mcc_generated_files/mtouch/mtouch_button.c: 268:     enum mtouch_button_names button;;m
      +                          cc_generated_files/mtouch/mtouch_button.c: 271:     for (button = 0; button < 10u; butto
      +                          n++)
  8120  0C27  0020               	movlb	0	; select bank0
  8121  0C28  01B3               	clrf	MTOUCH_Button_ServiceAll@button
  8122  0C29                     l3159:	
  8123                           
  8124                           ;mcc_generated_files/mtouch/mtouch_button.c: 272:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 273:         Button_Service(button);
  8125  0C29  0833               	movf	MTOUCH_Button_ServiceAll@button,w
  8126  0C2A  3184  2435  318C   	fcall	_Button_Service
  8127  0C2D                     l3161:	
  8128                           
  8129                           ;mcc_generated_files/mtouch/mtouch_button.c: 274:     }
  8130  0C2D  3001               	movlw	1
  8131  0C2E  00FD               	movwf	??_MTOUCH_Button_ServiceAll
  8132  0C2F  087D               	movf	??_MTOUCH_Button_ServiceAll,w
  8133  0C30  0020               	movlb	0	; select bank0
  8134  0C31  07B3               	addwf	MTOUCH_Button_ServiceAll@button,f
  8135  0C32                     l3163:	
  8136  0C32  300A               	movlw	10
  8137  0C33  0233               	subwf	MTOUCH_Button_ServiceAll@button,w
  8138  0C34  1C03               	skipc
  8139  0C35  2C37               	goto	u1591
  8140  0C36  2C38               	goto	u1590
  8141  0C37                     u1591:	
  8142  0C37  2C29               	goto	l3159
  8143  0C38                     u1590:	
  8144  0C38                     l446:	
  8145  0C38  0008               	return
  8146  0C39                     __end_of_MTOUCH_Button_ServiceAll:	
  8147                           
  8148                           	psect	text59
  8149  0435                     __ptext59:	
  8150 ;; *************** function _Button_Service *****************
  8151 ;; Defined at:
  8152 ;;		line 277 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8153 ;; Parameters:    Size  Location     Type
  8154 ;;  name            1    wreg     enum E2696
  8155 ;; Auto vars:     Size  Location     Type
  8156 ;;  name            1   16[BANK0 ] enum E2696
  8157 ;;  button          2   17[BANK0 ] PTR struct .
  8158 ;;		 -> mtouch_button(170), 
  8159 ;; Return value:  Size  Location     Type
  8160 ;;                  1    wreg      void 
  8161 ;; Registers used:
  8162 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8163 ;; Tracked objects:
  8164 ;;		On entry : 0/0
  8165 ;;		On exit  : 0/0
  8166 ;;		Unchanged: 0/0
  8167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8168 ;;      Params:         0       0       0       0       0       0
  8169 ;;      Locals:         0       3       0       0       0       0
  8170 ;;      Temps:          0       4       0       0       0       0
  8171 ;;      Totals:         0       7       0       0       0       0
  8172 ;;Total ram usage:        7 bytes
  8173 ;; Hardware stack levels used:    1
  8174 ;; Hardware stack levels required when called:    4
  8175 ;; This function calls:
  8176 ;;		_Button_Deviation_Update
  8177 ;;		_Button_Reading_Update
  8178 ;;		_Button_State_Initializing
  8179 ;;		_Button_State_NotPressed
  8180 ;;		_Button_State_Pressed
  8181 ;;		_MTOUCH_Button_Initialize
  8182 ;;		_MTOUCH_Sensor_isCalibrated
  8183 ;;		_MTOUCH_Sensor_wasSampled
  8184 ;;		___wmul
  8185 ;; This function is called by:
  8186 ;;		_MTOUCH_Button_ServiceAll
  8187 ;; This function uses a non-reentrant model
  8188 ;;
  8189                           
  8190                           
  8191                           ;psect for function _Button_Service
  8192  0435                     _Button_Service:	
  8193                           
  8194                           ;incstack = 0
  8195                           ; Regs used in _Button_Service: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8196                           ;Button_Service@name stored from wreg
  8197  0435  0020               	movlb	0	; select bank0
  8198  0436  00B0               	movwf	Button_Service@name
  8199  0437                     l3105:	
  8200                           
  8201                           ;mcc_generated_files/mtouch/mtouch_button.c: 277: static void Button_Service(enum mtouch
      +                          _button_names name);mcc_generated_files/mtouch/mtouch_button.c: 278: {;mcc_generated_fil
      +                          es/mtouch/mtouch_button.c: 279:     mtouch_button_t* button = &mtouch_button[name];
  8202  0437  0830               	movf	Button_Service@name,w
  8203  0438  00AC               	movwf	??_Button_Service
  8204  0439  01AD               	clrf	??_Button_Service+1
  8205  043A  082C               	movf	??_Button_Service,w
  8206  043B  00F0               	movwf	___wmul@multiplier
  8207  043C  082D               	movf	??_Button_Service+1,w
  8208  043D  00F1               	movwf	___wmul@multiplier+1
  8209  043E  3011               	movlw	17
  8210  043F  00F2               	movwf	___wmul@multiplicand
  8211  0440  3000               	movlw	0
  8212  0441  00F3               	movwf	___wmul@multiplicand+1
  8213  0442  318C  24DE  3184   	fcall	___wmul
  8214  0445  30C6               	movlw	198
  8215  0446  0020               	movlb	0	; select bank0
  8216  0447  00AE               	movwf	??_Button_Service+2
  8217  0448  3020               	movlw	32
  8218  0449  00AF               	movwf	??_Button_Service+3
  8219  044A  0870               	movf	?___wmul,w
  8220  044B  072E               	addwf	??_Button_Service+2,w
  8221  044C  00B1               	movwf	Button_Service@button
  8222  044D  0871               	movf	?___wmul+1,w
  8223  044E  3D2F               	addwfc	??_Button_Service+3,w
  8224  044F  00B2               	movwf	Button_Service@button+1
  8225  0450                     l3107:	
  8226                           
  8227                           ;mcc_generated_files/mtouch/mtouch_button.c: 281:     if (MTOUCH_Sensor_wasSampled(butto
      +                          n->sensor) && MTOUCH_Sensor_isCalibrated(button->sensor))
  8228  0450  0831               	movf	Button_Service@button,w
  8229  0451  0086               	movwf	6
  8230  0452  0832               	movf	Button_Service@button+1,w
  8231  0453  0087               	movwf	7
  8232  0454  3141               	addfsr 1,1
  8233  0455  0801               	movf	1,w
  8234  0456  3180  2060  3184   	fcall	_MTOUCH_Sensor_wasSampled
  8235  0459  3A00               	xorlw	0
  8236  045A  1903               	skipnz
  8237  045B  2C5D               	goto	u1541
  8238  045C  2C5E               	goto	u1540
  8239  045D                     u1541:	
  8240  045D  2CA4               	goto	l451
  8241  045E                     u1540:	
  8242  045E                     l3109:	
  8243  045E  0020               	movlb	0	; select bank0
  8244  045F  0831               	movf	Button_Service@button,w
  8245  0460  0086               	movwf	6
  8246  0461  0832               	movf	Button_Service@button+1,w
  8247  0462  0087               	movwf	7
  8248  0463  3141               	addfsr 1,1
  8249  0464  0801               	movf	1,w
  8250  0465  318B  235E  3184   	fcall	_MTOUCH_Sensor_isCalibrated
  8251  0468  3A00               	xorlw	0
  8252  0469  1903               	skipnz
  8253  046A  2C6C               	goto	u1551
  8254  046B  2C6D               	goto	u1550
  8255  046C                     u1551:	
  8256  046C  2CA4               	goto	l451
  8257  046D                     u1550:	
  8258  046D                     l3111:	
  8259                           
  8260                           ;mcc_generated_files/mtouch/mtouch_button.c: 282:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 283:         Button_Reading_Update(button);
  8261  046D  0020               	movlb	0	; select bank0
  8262  046E  0832               	movf	Button_Service@button+1,w
  8263  046F  00A5               	movwf	Button_Reading_Update@button+1
  8264  0470  0831               	movf	Button_Service@button,w
  8265  0471  00A4               	movwf	Button_Reading_Update@button
  8266  0472  318C  2476  3184   	fcall	_Button_Reading_Update
  8267                           
  8268                           ;mcc_generated_files/mtouch/mtouch_button.c: 284:         Button_Deviation_Update(button
      +                          );
  8269  0475  0020               	movlb	0	; select bank0
  8270  0476  0832               	movf	Button_Service@button+1,w
  8271  0477  00F1               	movwf	Button_Deviation_Update@button+1
  8272  0478  0831               	movf	Button_Service@button,w
  8273  0479  00F0               	movwf	Button_Deviation_Update@button
  8274  047A  3185  25FE  3184   	fcall	_Button_Deviation_Update
  8275  047D                     l3113:	
  8276                           
  8277                           ;mcc_generated_files/mtouch/mtouch_button.c: 286:         if (button->state >= (uint8_t)
      +                          (sizeof(Button_StateMachine)/sizeof(button_statemachine_state_t)))
  8278  047D  0020               	movlb	0	; select bank0
  8279  047E  0831               	movf	Button_Service@button,w
  8280  047F  0086               	movwf	6
  8281  0480  0832               	movf	Button_Service@button+1,w
  8282  0481  0087               	movwf	7
  8283  0482  3142               	addfsr 1,2
  8284  0483  3003               	movlw	3
  8285  0484  0201               	subwf	1,w
  8286  0485  1C03               	skipc
  8287  0486  2C88               	goto	u1561
  8288  0487  2C89               	goto	u1560
  8289  0488                     u1561:	
  8290  0488  2C91               	goto	l3117
  8291  0489                     u1560:	
  8292  0489                     l3115:	
  8293                           
  8294                           ;mcc_generated_files/mtouch/mtouch_button.c: 287:         {;mcc_generated_files/mtouch/m
      +                          touch_button.c: 288:             MTOUCH_Button_Initialize(button->name);
  8295  0489  0831               	movf	Button_Service@button,w
  8296  048A  0086               	movwf	6
  8297  048B  0832               	movf	Button_Service@button+1,w
  8298  048C  0087               	movwf	7
  8299  048D  0801               	movf	1,w
  8300  048E  3181  21B0  3184   	fcall	_MTOUCH_Button_Initialize
  8301  0491                     l3117:	
  8302                           
  8303                           ;mcc_generated_files/mtouch/mtouch_button.c: 290:         Button_StateMachine[(uint8_t)b
      +                          utton->state](button);
  8304  0491  0020               	movlb	0	; select bank0
  8305  0492  0832               	movf	Button_Service@button+1,w
  8306  0493  00A7               	movwf	Button_State_Pressed@button+1
  8307  0494  0831               	movf	Button_Service@button,w
  8308  0495  00A6               	movwf	Button_State_Pressed@button
  8309  0496  0831               	movf	Button_Service@button,w
  8310  0497  0086               	movwf	6
  8311  0498  0832               	movf	Button_Service@button+1,w
  8312  0499  0087               	movwf	7
  8313  049A  3142               	addfsr 1,2
  8314  049B  3501               	lslf	1,w
  8315  049C  3E4B               	addlw	(low (_Button_StateMachine| 0))& (0+255)
  8316  049D  0086               	movwf	6
  8317  049E  0187               	clrf	7
  8318  049F  3F41               	moviw [1]fsr1
  8319  04A0  008A               	movwf	10
  8320  04A1  3F40               	moviw [0]fsr1
  8321  04A2  000A               	callw
  8322  04A3  3184               	pagesel	$
  8323  04A4                     l451:	
  8324  04A4  0008               	return
  8325  04A5                     __end_of_Button_Service:	
  8326                           
  8327                           	psect	text60
  8328  0060                     __ptext60:	
  8329 ;; *************** function _MTOUCH_Sensor_wasSampled *****************
  8330 ;; Defined at:
  8331 ;;		line 564 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  8332 ;; Parameters:    Size  Location     Type
  8333 ;;  sensor          1    wreg     enum E2470
  8334 ;; Auto vars:     Size  Location     Type
  8335 ;;  sensor          1   10[COMMON] enum E2470
  8336 ;; Return value:  Size  Location     Type
  8337 ;;                  1    wreg      _Bool 
  8338 ;; Registers used:
  8339 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8340 ;; Tracked objects:
  8341 ;;		On entry : 0/0
  8342 ;;		On exit  : 0/0
  8343 ;;		Unchanged: 0/0
  8344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8345 ;;      Params:         0       0       0       0       0       0
  8346 ;;      Locals:         1       0       0       0       0       0
  8347 ;;      Temps:          4       0       0       0       0       0
  8348 ;;      Totals:         5       0       0       0       0       0
  8349 ;;Total ram usage:        5 bytes
  8350 ;; Hardware stack levels used:    1
  8351 ;; Hardware stack levels required when called:    1
  8352 ;; This function calls:
  8353 ;;		___wmul
  8354 ;; This function is called by:
  8355 ;;		_Button_Service
  8356 ;; This function uses a non-reentrant model
  8357 ;;
  8358                           
  8359                           
  8360                           ;psect for function _MTOUCH_Sensor_wasSampled
  8361  0060                     _MTOUCH_Sensor_wasSampled:	
  8362                           
  8363                           ;incstack = 0
  8364                           ; Regs used in _MTOUCH_Sensor_wasSampled: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  8365                           ;MTOUCH_Sensor_wasSampled@sensor stored from wreg
  8366  0060  00FA               	movwf	MTOUCH_Sensor_wasSampled@sensor
  8367  0061                     l2921:	
  8368                           
  8369                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 564: _Bool MTOUCH_Sensor_wasSampled(enum mt
      +                          ouch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 565: {;mcc_generat
      +                          ed_files/mtouch/mtouch_sensor.c: 566:     if(sensor < 10u)
  8370  0061  300A               	movlw	10
  8371  0062  027A               	subwf	MTOUCH_Sensor_wasSampled@sensor,w
  8372  0063  1803               	skipnc
  8373  0064  2866               	goto	u1281
  8374  0065  2867               	goto	u1280
  8375  0066                     u1281:	
  8376  0066  2882               	goto	l2929
  8377  0067                     u1280:	
  8378  0067                     l2923:	
  8379                           
  8380                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 567:         return (_Bool)mtouch_sensor[se
      +                          nsor].sampled;
  8381  0067  087A               	movf	MTOUCH_Sensor_wasSampled@sensor,w
  8382  0068  00F6               	movwf	??_MTOUCH_Sensor_wasSampled
  8383  0069  01F7               	clrf	??_MTOUCH_Sensor_wasSampled+1
  8384  006A  0876               	movf	??_MTOUCH_Sensor_wasSampled,w
  8385  006B  00F0               	movwf	___wmul@multiplier
  8386  006C  0877               	movf	??_MTOUCH_Sensor_wasSampled+1,w
  8387  006D  00F1               	movwf	___wmul@multiplier+1
  8388  006E  3009               	movlw	9
  8389  006F  00F2               	movwf	___wmul@multiplicand
  8390  0070  3000               	movlw	0
  8391  0071  00F3               	movwf	___wmul@multiplicand+1
  8392  0072  318C  24DE  3180   	fcall	___wmul
  8393  0075  3074               	movlw	116
  8394  0076  00F8               	movwf	??_MTOUCH_Sensor_wasSampled+2
  8395  0077  3020               	movlw	32
  8396  0078  00F9               	movwf	??_MTOUCH_Sensor_wasSampled+3
  8397  0079  0870               	movf	?___wmul,w
  8398  007A  0778               	addwf	??_MTOUCH_Sensor_wasSampled+2,w
  8399  007B  0086               	movwf	6
  8400  007C  0871               	movf	?___wmul+1,w
  8401  007D  3D79               	addwfc	??_MTOUCH_Sensor_wasSampled+3,w
  8402  007E  0087               	movwf	7
  8403  007F  0C01               	rrf	1,w
  8404  0080  3901               	andlw	1
  8405  0081  2883               	goto	l367
  8406  0082                     l2929:	
  8407                           
  8408                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 569:         return 0;
  8409  0082  3000               	movlw	0
  8410  0083                     l367:	
  8411  0083  0008               	return
  8412  0084                     __end_of_MTOUCH_Sensor_wasSampled:	
  8413                           
  8414                           	psect	text61
  8415  0B5E                     __ptext61:	
  8416 ;; *************** function _MTOUCH_Sensor_isCalibrated *****************
  8417 ;; Defined at:
  8418 ;;		line 537 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  8419 ;; Parameters:    Size  Location     Type
  8420 ;;  sensor          1    wreg     enum E2470
  8421 ;; Auto vars:     Size  Location     Type
  8422 ;;  sensor          1    0[COMMON] enum E2470
  8423 ;; Return value:  Size  Location     Type
  8424 ;;                  1    wreg      _Bool 
  8425 ;; Registers used:
  8426 ;;		wreg
  8427 ;; Tracked objects:
  8428 ;;		On entry : 0/0
  8429 ;;		On exit  : 0/0
  8430 ;;		Unchanged: 0/0
  8431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8432 ;;      Params:         0       0       0       0       0       0
  8433 ;;      Locals:         0       0       0       0       0       0
  8434 ;;      Temps:          0       0       0       0       0       0
  8435 ;;      Totals:         0       0       0       0       0       0
  8436 ;;Total ram usage:        0 bytes
  8437 ;; Hardware stack levels used:    1
  8438 ;; This function calls:
  8439 ;;		Nothing
  8440 ;; This function is called by:
  8441 ;;		_Button_Service
  8442 ;; This function uses a non-reentrant model
  8443 ;;
  8444                           
  8445                           
  8446                           ;psect for function _MTOUCH_Sensor_isCalibrated
  8447  0B5E                     _MTOUCH_Sensor_isCalibrated:	
  8448  0B5E                     l2917:	
  8449                           ;incstack = 0
  8450                           ; Regs used in _MTOUCH_Sensor_isCalibrated: [wreg]
  8451                           
  8452                           
  8453                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 537: _Bool MTOUCH_Sensor_isCalibrated(enum 
      +                          mtouch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 538: {;mcc_gener
      +                          ated_files/mtouch/mtouch_sensor.c: 540:     return 1;
  8454  0B5E  3001               	movlw	1
  8455  0B5F                     l355:	
  8456  0B5F  0008               	return
  8457  0B60                     __end_of_MTOUCH_Sensor_isCalibrated:	
  8458                           
  8459                           	psect	text62
  8460  071B                     __ptext62:	
  8461 ;; *************** function _Button_State_NotPressed *****************
  8462 ;; Defined at:
  8463 ;;		line 314 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8464 ;; Parameters:    Size  Location     Type
  8465 ;;  button          2    6[BANK0 ] PTR struct .
  8466 ;;		 -> mtouch_button(170), 
  8467 ;; Auto vars:     Size  Location     Type
  8468 ;;		None
  8469 ;; Return value:  Size  Location     Type
  8470 ;;                  1    wreg      void 
  8471 ;; Registers used:
  8472 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8473 ;; Tracked objects:
  8474 ;;		On entry : 0/0
  8475 ;;		On exit  : 0/0
  8476 ;;		Unchanged: 0/0
  8477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8478 ;;      Params:         0       2       0       0       0       0
  8479 ;;      Locals:         0       0       0       0       0       0
  8480 ;;      Temps:          0       2       0       0       0       0
  8481 ;;      Totals:         0       4       0       0       0       0
  8482 ;;Total ram usage:        4 bytes
  8483 ;; Hardware stack levels used:    1
  8484 ;; Hardware stack levels required when called:    2
  8485 ;; This function calls:
  8486 ;;		_Button_Baseline_Update
  8487 ;;		_Button_DefaultCallback
  8488 ;;		_MTOUCH_Button_Initialize
  8489 ;; This function is called by:
  8490 ;;		_Button_Service
  8491 ;; This function uses a non-reentrant model
  8492 ;;
  8493                           
  8494                           
  8495                           ;psect for function _Button_State_NotPressed
  8496  071B                     _Button_State_NotPressed:	
  8497  071B                     l2981:	
  8498                           ;incstack = 0
  8499                           ; Regs used in _Button_State_NotPressed: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  8500                           
  8501                           
  8502                           ;mcc_generated_files/mtouch/mtouch_button.c: 314: static void Button_State_NotPressed(mt
      +                          ouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 315: {;mcc_generated_
      +                          files/mtouch/mtouch_button.c: 317:     if ((button->deviation) < (mtouch_button_deviatio
      +                          n_t)(-button->threshold))
  8503  071B  0020               	movlb	0	; select bank0
  8504  071C  0826               	movf	Button_State_NotPressed@button,w
  8505  071D  0086               	movwf	6
  8506  071E  0827               	movf	Button_State_NotPressed@button+1,w
  8507  071F  0087               	movwf	7
  8508  0720  3149               	addfsr 1,9
  8509  0721  0801               	movf	1,w
  8510  0722  3A80               	xorlw	128
  8511  0723  00A8               	movwf	??_Button_State_NotPressed
  8512  0724  0826               	movf	Button_State_NotPressed@button,w
  8513  0725  0086               	movwf	6
  8514  0726  0827               	movf	Button_State_NotPressed@button+1,w
  8515  0727  0087               	movwf	7
  8516  0728  314E               	addfsr 1,14
  8517  0729  0301               	decf	1,w
  8518  072A  3AFF               	xorlw	255
  8519  072B  3A80               	xorlw	128
  8520  072C  02A8               	subwf	??_Button_State_NotPressed,f
  8521  072D  1803               	skipnc
  8522  072E  2F30               	goto	u1381
  8523  072F  2F31               	goto	u1380
  8524  0730                     u1381:	
  8525  0730  2F5E               	goto	l2991
  8526  0731                     u1380:	
  8527  0731                     l2983:	
  8528                           
  8529                           ;mcc_generated_files/mtouch/mtouch_button.c: 318:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 319:         (button->counter)++;
  8530  0731  0826               	movf	Button_State_NotPressed@button,w
  8531  0732  0086               	movwf	6
  8532  0733  0827               	movf	Button_State_NotPressed@button+1,w
  8533  0734  0087               	movwf	7
  8534  0735  314A               	addfsr 1,10
  8535  0736  3001               	movlw	1
  8536  0737  0781               	addwf	1,f
  8537  0738  3141               	addfsr 1,1
  8538  0739  1803               	skipnc
  8539  073A  0A81               	incf	1,f
  8540  073B                     l2985:	
  8541                           
  8542                           ;mcc_generated_files/mtouch/mtouch_button.c: 320:         if ((button->counter) > (mtouc
      +                          h_button_statecounter_t)((mtouch_button_statecounter_t)64u))
  8543  073B  0826               	movf	Button_State_NotPressed@button,w
  8544  073C  0086               	movwf	6
  8545  073D  0827               	movf	Button_State_NotPressed@button+1,w
  8546  073E  0087               	movwf	7
  8547  073F  314A               	addfsr 1,10
  8548  0740  3F40               	moviw [0]fsr1
  8549  0741  00A8               	movwf	??_Button_State_NotPressed
  8550  0742  3F41               	moviw [1]fsr1
  8551  0743  00A9               	movwf	??_Button_State_NotPressed+1
  8552  0744  3000               	movlw	0
  8553  0745  0229               	subwf	??_Button_State_NotPressed+1,w
  8554  0746  3041               	movlw	65
  8555  0747  1903               	skipnz
  8556  0748  0228               	subwf	??_Button_State_NotPressed,w
  8557  0749  1C03               	skipc
  8558  074A  2F4C               	goto	u1391
  8559  074B  2F4D               	goto	u1390
  8560  074C                     u1391:	
  8561  074C  2FA2               	goto	l3001
  8562  074D                     u1390:	
  8563  074D                     l2987:	
  8564                           
  8565                           ;mcc_generated_files/mtouch/mtouch_button.c: 321:         {;mcc_generated_files/mtouch/m
      +                          touch_button.c: 322:             button->counter = (mtouch_button_statecounter_t)0;
  8566  074D  0826               	movf	Button_State_NotPressed@button,w
  8567  074E  0086               	movwf	6
  8568  074F  0827               	movf	Button_State_NotPressed@button+1,w
  8569  0750  0087               	movwf	7
  8570  0751  314A               	addfsr 1,10
  8571  0752  3000               	movlw	0
  8572  0753  3FC0               	movwi [0]fsr1
  8573  0754  3FC1               	movwi [1]fsr1
  8574  0755                     l2989:	
  8575                           
  8576                           ;mcc_generated_files/mtouch/mtouch_button.c: 323:             MTOUCH_Button_Initialize(b
      +                          utton->name);
  8577  0755  0826               	movf	Button_State_NotPressed@button,w
  8578  0756  0086               	movwf	6
  8579  0757  0827               	movf	Button_State_NotPressed@button+1,w
  8580  0758  0087               	movwf	7
  8581  0759  0801               	movf	1,w
  8582  075A  3181  21B0  3187   	fcall	_MTOUCH_Button_Initialize
  8583  075D  2FA2               	goto	l3001
  8584  075E                     l2991:	
  8585  075E  0826               	movf	Button_State_NotPressed@button,w
  8586  075F  0086               	movwf	6
  8587  0760  0827               	movf	Button_State_NotPressed@button+1,w
  8588  0761  0087               	movwf	7
  8589  0762  3149               	addfsr 1,9
  8590  0763  0801               	movf	1,w
  8591  0764  00A8               	movwf	??_Button_State_NotPressed
  8592  0765  01A9               	clrf	??_Button_State_NotPressed+1
  8593  0766  1BA8               	btfsc	??_Button_State_NotPressed,7
  8594  0767  03A9               	decf	??_Button_State_NotPressed+1,f
  8595  0768  0826               	movf	Button_State_NotPressed@button,w
  8596  0769  0086               	movwf	6
  8597  076A  0827               	movf	Button_State_NotPressed@button+1,w
  8598  076B  0087               	movwf	7
  8599  076C  314E               	addfsr 1,14
  8600  076D  0829               	movf	??_Button_State_NotPressed+1,w
  8601  076E  3A80               	xorlw	128
  8602  076F  3C80               	sublw	128
  8603  0770  1D03               	skipz
  8604  0771  2F74               	goto	u1405
  8605  0772  0828               	movf	??_Button_State_NotPressed,w
  8606  0773  0201               	subwf	1,w
  8607  0774                     u1405:	
  8608  0774  1803               	skipnc
  8609  0775  2F77               	goto	u1401
  8610  0776  2F78               	goto	u1400
  8611  0777                     u1401:	
  8612  0777  2F99               	goto	l2999
  8613  0778                     u1400:	
  8614  0778                     l2993:	
  8615                           
  8616                           ;mcc_generated_files/mtouch/mtouch_button.c: 328:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 330:         button->state = MTOUCH_BUTTON_STATE_pressed;
  8617  0778  0020               	movlb	0	; select bank0
  8618  0779  0826               	movf	Button_State_NotPressed@button,w
  8619  077A  3E02               	addlw	2
  8620  077B  00A8               	movwf	??_Button_State_NotPressed
  8621  077C  3000               	movlw	0
  8622  077D  3D27               	addwfc	Button_State_NotPressed@button+1,w
  8623  077E  00A9               	movwf	??_Button_State_NotPressed+1
  8624  077F  0828               	movf	??_Button_State_NotPressed,w
  8625  0780  0086               	movwf	6
  8626  0781  0829               	movf	??_Button_State_NotPressed+1,w
  8627  0782  0087               	movwf	7
  8628  0783  3002               	movlw	2
  8629  0784  0081               	movwf	1
  8630  0785                     l2995:	
  8631                           
  8632                           ;mcc_generated_files/mtouch/mtouch_button.c: 331:         button->counter = (mtouch_butt
      +                          on_statecounter_t)0;
  8633  0785  0826               	movf	Button_State_NotPressed@button,w
  8634  0786  0086               	movwf	6
  8635  0787  0827               	movf	Button_State_NotPressed@button+1,w
  8636  0788  0087               	movwf	7
  8637  0789  314A               	addfsr 1,10
  8638  078A  3000               	movlw	0
  8639  078B  3FC0               	movwi [0]fsr1
  8640  078C  3FC1               	movwi [1]fsr1
  8641  078D                     l2997:	
  8642                           
  8643                           ;mcc_generated_files/mtouch/mtouch_button.c: 332:         callback_pressed(button->name)
      +                          ;
  8644  078D  0826               	movf	Button_State_NotPressed@button,w
  8645  078E  0086               	movwf	6
  8646  078F  0827               	movf	Button_State_NotPressed@button+1,w
  8647  0790  0087               	movwf	7
  8648  0791  0801               	movf	1,w
  8649  0792  00A8               	movwf	??_Button_State_NotPressed
  8650  0793  0828               	movf	??_Button_State_NotPressed,w
  8651  0794  00F0               	movwf	Button_DefaultCallback@button
  8652  0795  318B  235C  3187   	fcall	_Button_DefaultCallback
  8653                           
  8654                           ;mcc_generated_files/mtouch/mtouch_button.c: 333:     }
  8655  0798  2FA2               	goto	l3001
  8656  0799                     l2999:	
  8657                           
  8658                           ;mcc_generated_files/mtouch/mtouch_button.c: 335:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 337:         button->counter = (mtouch_button_statecounter_t)0;
  8659  0799  0020               	movlb	0	; select bank0
  8660  079A  0826               	movf	Button_State_NotPressed@button,w
  8661  079B  0086               	movwf	6
  8662  079C  0827               	movf	Button_State_NotPressed@button+1,w
  8663  079D  0087               	movwf	7
  8664  079E  314A               	addfsr 1,10
  8665  079F  3000               	movlw	0
  8666  07A0  3FC0               	movwi [0]fsr1
  8667  07A1  3FC1               	movwi [1]fsr1
  8668  07A2                     l3001:	
  8669                           
  8670                           ;mcc_generated_files/mtouch/mtouch_button.c: 342:     (button->baseline_count)++;
  8671  07A2  0020               	movlb	0	; select bank0
  8672  07A3  0826               	movf	Button_State_NotPressed@button,w
  8673  07A4  0086               	movwf	6
  8674  07A5  0827               	movf	Button_State_NotPressed@button+1,w
  8675  07A6  0087               	movwf	7
  8676  07A7  314C               	addfsr 1,12
  8677  07A8  3001               	movlw	1
  8678  07A9  0781               	addwf	1,f
  8679  07AA  3141               	addfsr 1,1
  8680  07AB  1803               	skipnc
  8681  07AC  0A81               	incf	1,f
  8682  07AD                     l3003:	
  8683                           
  8684                           ;mcc_generated_files/mtouch/mtouch_button.c: 343:     if ((button->baseline_count) == ((
      +                          mtouch_button_baselinecounter_t)64u))
  8685  07AD  0826               	movf	Button_State_NotPressed@button,w
  8686  07AE  0086               	movwf	6
  8687  07AF  0827               	movf	Button_State_NotPressed@button+1,w
  8688  07B0  0087               	movwf	7
  8689  07B1  314C               	addfsr 1,12
  8690  07B2  0016               	moviw fsr1++
  8691  07B3  3A40               	xorlw	64
  8692  07B4  00A8               	movwf	??_Button_State_NotPressed
  8693  07B5  0016               	moviw fsr1++
  8694  07B6  04A8               	iorwf	??_Button_State_NotPressed,f
  8695  07B7  1D03               	btfss	3,2
  8696  07B8  2FBA               	goto	u1411
  8697  07B9  2FBB               	goto	u1410
  8698  07BA                     u1411:	
  8699  07BA  2FCA               	goto	l466
  8700  07BB                     u1410:	
  8701  07BB                     l3005:	
  8702                           
  8703                           ;mcc_generated_files/mtouch/mtouch_button.c: 344:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 345:         button->baseline_count = (mtouch_button_baselinecounter_t)0;
  8704  07BB  0826               	movf	Button_State_NotPressed@button,w
  8705  07BC  0086               	movwf	6
  8706  07BD  0827               	movf	Button_State_NotPressed@button+1,w
  8707  07BE  0087               	movwf	7
  8708  07BF  314C               	addfsr 1,12
  8709  07C0  3000               	movlw	0
  8710  07C1  3FC0               	movwi [0]fsr1
  8711  07C2  3FC1               	movwi [1]fsr1
  8712  07C3                     l3007:	
  8713                           
  8714                           ;mcc_generated_files/mtouch/mtouch_button.c: 346:         Button_Baseline_Update(button)
      +                          ;
  8715  07C3  0827               	movf	Button_State_NotPressed@button+1,w
  8716  07C4  00F1               	movwf	Button_Baseline_Update@button+1
  8717  07C5  0826               	movf	Button_State_NotPressed@button,w
  8718  07C6  00F0               	movwf	Button_Baseline_Update@button
  8719  07C7  3186  268B  3187   	fcall	_Button_Baseline_Update
  8720  07CA                     l466:	
  8721  07CA  0008               	return
  8722  07CB                     __end_of_Button_State_NotPressed:	
  8723                           
  8724                           	psect	text63
  8725  04A5                     __ptext63:	
  8726 ;; *************** function _Button_State_Initializing *****************
  8727 ;; Defined at:
  8728 ;;		line 294 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8729 ;; Parameters:    Size  Location     Type
  8730 ;;  button          2    6[BANK0 ] PTR struct .
  8731 ;;		 -> mtouch_button(170), 
  8732 ;; Auto vars:     Size  Location     Type
  8733 ;;		None
  8734 ;; Return value:  Size  Location     Type
  8735 ;;                  1    wreg      void 
  8736 ;; Registers used:
  8737 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8738 ;; Tracked objects:
  8739 ;;		On entry : 0/0
  8740 ;;		On exit  : 0/0
  8741 ;;		Unchanged: 0/0
  8742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8743 ;;      Params:         0       2       0       0       0       0
  8744 ;;      Locals:         0       0       0       0       0       0
  8745 ;;      Temps:          0       4       0       0       0       0
  8746 ;;      Totals:         0       6       0       0       0       0
  8747 ;;Total ram usage:        6 bytes
  8748 ;; Hardware stack levels used:    1
  8749 ;; Hardware stack levels required when called:    3
  8750 ;; This function calls:
  8751 ;;		_Button_Baseline_Initialize
  8752 ;;		_Button_Baseline_Update
  8753 ;; This function is called by:
  8754 ;;		_Button_Service
  8755 ;; This function uses a non-reentrant model
  8756 ;;
  8757                           
  8758                           
  8759                           ;psect for function _Button_State_Initializing
  8760  04A5                     _Button_State_Initializing:	
  8761  04A5                     l2967:	
  8762                           ;incstack = 0
  8763                           ; Regs used in _Button_State_Initializing: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  8764                           
  8765                           
  8766                           ;mcc_generated_files/mtouch/mtouch_button.c: 294: static void Button_State_Initializing(
      +                          mtouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 295: {;mcc_generate
      +                          d_files/mtouch/mtouch_button.c: 297:     if ((button->counter) <= (mtouch_button_stateco
      +                          unter_t)((mtouch_button_baselinecounter_t)16u)/2)
  8767  04A5  0020               	movlb	0	; select bank0
  8768  04A6  0826               	movf	Button_State_Initializing@button,w
  8769  04A7  0086               	movwf	6
  8770  04A8  0827               	movf	Button_State_Initializing@button+1,w
  8771  04A9  0087               	movwf	7
  8772  04AA  314A               	addfsr 1,10
  8773  04AB  3F40               	moviw [0]fsr1
  8774  04AC  00A8               	movwf	??_Button_State_Initializing
  8775  04AD  3F41               	moviw [1]fsr1
  8776  04AE  00A9               	movwf	??_Button_State_Initializing+1
  8777  04AF  3000               	movlw	0
  8778  04B0  0229               	subwf	??_Button_State_Initializing+1,w
  8779  04B1  3009               	movlw	9
  8780  04B2  1903               	skipnz
  8781  04B3  0228               	subwf	??_Button_State_Initializing,w
  8782  04B4  1803               	skipnc
  8783  04B5  2CB7               	goto	u1351
  8784  04B6  2CB8               	goto	u1350
  8785  04B7                     u1351:	
  8786  04B7  2CC0               	goto	l2971
  8787  04B8                     u1350:	
  8788  04B8                     l2969:	
  8789                           
  8790                           ;mcc_generated_files/mtouch/mtouch_button.c: 298:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 299:         Button_Baseline_Initialize(button);
  8791  04B8  0827               	movf	Button_State_Initializing@button+1,w
  8792  04B9  00A1               	movwf	Button_Baseline_Initialize@button+1
  8793  04BA  0826               	movf	Button_State_Initializing@button,w
  8794  04BB  00A0               	movwf	Button_Baseline_Initialize@button
  8795  04BC  3181  2181  3184   	fcall	_Button_Baseline_Initialize
  8796                           
  8797                           ;mcc_generated_files/mtouch/mtouch_button.c: 300:     } else {
  8798  04BF  2CC7               	goto	l2973
  8799  04C0                     l2971:	
  8800                           
  8801                           ;mcc_generated_files/mtouch/mtouch_button.c: 301:         Button_Baseline_Update(button)
      +                          ;
  8802  04C0  0827               	movf	Button_State_Initializing@button+1,w
  8803  04C1  00F1               	movwf	Button_Baseline_Update@button+1
  8804  04C2  0826               	movf	Button_State_Initializing@button,w
  8805  04C3  00F0               	movwf	Button_Baseline_Update@button
  8806  04C4  3186  268B  3184   	fcall	_Button_Baseline_Update
  8807  04C7                     l2973:	
  8808                           
  8809                           ;mcc_generated_files/mtouch/mtouch_button.c: 305:     (button->counter)++;
  8810  04C7  0020               	movlb	0	; select bank0
  8811  04C8  0826               	movf	Button_State_Initializing@button,w
  8812  04C9  0086               	movwf	6
  8813  04CA  0827               	movf	Button_State_Initializing@button+1,w
  8814  04CB  0087               	movwf	7
  8815  04CC  314A               	addfsr 1,10
  8816  04CD  3001               	movlw	1
  8817  04CE  0781               	addwf	1,f
  8818  04CF  3141               	addfsr 1,1
  8819  04D0  1803               	skipnc
  8820  04D1  0A81               	incf	1,f
  8821  04D2                     l2975:	
  8822                           
  8823                           ;mcc_generated_files/mtouch/mtouch_button.c: 306:     if ((button->counter) >= (mtouch_b
      +                          utton_statecounter_t)((mtouch_button_baselinecounter_t)16u))
  8824  04D2  0826               	movf	Button_State_Initializing@button,w
  8825  04D3  0086               	movwf	6
  8826  04D4  0827               	movf	Button_State_Initializing@button+1,w
  8827  04D5  0087               	movwf	7
  8828  04D6  314A               	addfsr 1,10
  8829  04D7  3F40               	moviw [0]fsr1
  8830  04D8  00A8               	movwf	??_Button_State_Initializing
  8831  04D9  3F41               	moviw [1]fsr1
  8832  04DA  00A9               	movwf	??_Button_State_Initializing+1
  8833  04DB  3000               	movlw	0
  8834  04DC  0229               	subwf	??_Button_State_Initializing+1,w
  8835  04DD  3010               	movlw	16
  8836  04DE  1903               	skipnz
  8837  04DF  0228               	subwf	??_Button_State_Initializing,w
  8838  04E0  1C03               	skipc
  8839  04E1  2CE3               	goto	u1361
  8840  04E2  2CE4               	goto	u1360
  8841  04E3                     u1361:	
  8842  04E3  2D15               	goto	l457
  8843  04E4                     u1360:	
  8844  04E4                     l2977:	
  8845                           
  8846                           ;mcc_generated_files/mtouch/mtouch_button.c: 307:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 308:         button->reading = (mtouch_button_reading_t)((button->baseline)>
      +                          >((uint8_t)4u));
  8847  04E4  0826               	movf	Button_State_Initializing@button,w
  8848  04E5  0086               	movwf	6
  8849  04E6  0827               	movf	Button_State_Initializing@button+1,w
  8850  04E7  0087               	movwf	7
  8851  04E8  3145               	addfsr 1,5
  8852  04E9  3F40               	moviw [0]fsr1
  8853  04EA  00A8               	movwf	??_Button_State_Initializing
  8854  04EB  3F41               	moviw [1]fsr1
  8855  04EC  00A9               	movwf	??_Button_State_Initializing+1
  8856  04ED  3F42               	moviw [2]fsr1
  8857  04EE  00AA               	movwf	??_Button_State_Initializing+2
  8858  04EF  3F43               	moviw [3]fsr1
  8859  04F0  00AB               	movwf	??_Button_State_Initializing+3
  8860  04F1  3004               	movlw	4
  8861  04F2                     u1375:	
  8862  04F2  36AB               	lsrf	??_Button_State_Initializing+3,f
  8863  04F3  0CAA               	rrf	??_Button_State_Initializing+2,f
  8864  04F4  0CA9               	rrf	??_Button_State_Initializing+1,f
  8865  04F5  0CA8               	rrf	??_Button_State_Initializing,f
  8866  04F6                     u1370:	
  8867  04F6  0B89               	decfsz	9,f
  8868  04F7  2CF2               	goto	u1375
  8869  04F8  0826               	movf	Button_State_Initializing@button,w
  8870  04F9  0086               	movwf	6
  8871  04FA  0827               	movf	Button_State_Initializing@button+1,w
  8872  04FB  0087               	movwf	7
  8873  04FC  3143               	addfsr 1,3
  8874  04FD  0828               	movf	??_Button_State_Initializing,w
  8875  04FE  3FC0               	movwi [0]fsr1
  8876  04FF  0829               	movf	??_Button_State_Initializing+1,w
  8877  0500  3FC1               	movwi [1]fsr1
  8878                           
  8879                           ;mcc_generated_files/mtouch/mtouch_button.c: 309:         button->state = MTOUCH_BUTTON_
      +                          STATE_notPressed;
  8880  0501  0826               	movf	Button_State_Initializing@button,w
  8881  0502  3E02               	addlw	2
  8882  0503  00A8               	movwf	??_Button_State_Initializing
  8883  0504  3000               	movlw	0
  8884  0505  3D27               	addwfc	Button_State_Initializing@button+1,w
  8885  0506  00A9               	movwf	??_Button_State_Initializing+1
  8886  0507  0828               	movf	??_Button_State_Initializing,w
  8887  0508  0086               	movwf	6
  8888  0509  0829               	movf	??_Button_State_Initializing+1,w
  8889  050A  0087               	movwf	7
  8890  050B  3001               	movlw	1
  8891  050C  0081               	movwf	1
  8892  050D                     l2979:	
  8893                           
  8894                           ;mcc_generated_files/mtouch/mtouch_button.c: 310:         button->counter = (mtouch_butt
      +                          on_statecounter_t)0;
  8895  050D  0826               	movf	Button_State_Initializing@button,w
  8896  050E  0086               	movwf	6
  8897  050F  0827               	movf	Button_State_Initializing@button+1,w
  8898  0510  0087               	movwf	7
  8899  0511  314A               	addfsr 1,10
  8900  0512  3000               	movlw	0
  8901  0513  3FC0               	movwi [0]fsr1
  8902  0514  3FC1               	movwi [1]fsr1
  8903  0515                     l457:	
  8904  0515  0008               	return
  8905  0516                     __end_of_Button_State_Initializing:	
  8906                           
  8907                           	psect	text64
  8908  0587                     __ptext64:	
  8909 ;; *************** function _Button_State_Pressed *****************
  8910 ;; Defined at:
  8911 ;;		line 350 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8912 ;; Parameters:    Size  Location     Type
  8913 ;;  button          2    6[BANK0 ] PTR struct .
  8914 ;;		 -> mtouch_button(170), 
  8915 ;; Auto vars:     Size  Location     Type
  8916 ;;		None
  8917 ;; Return value:  Size  Location     Type
  8918 ;;                  1    wreg      void 
  8919 ;; Registers used:
  8920 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8921 ;; Tracked objects:
  8922 ;;		On entry : 0/0
  8923 ;;		On exit  : 0/0
  8924 ;;		Unchanged: 0/0
  8925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8926 ;;      Params:         0       2       0       0       0       0
  8927 ;;      Locals:         0       0       0       0       0       0
  8928 ;;      Temps:          0       2       0       0       0       0
  8929 ;;      Totals:         0       4       0       0       0       0
  8930 ;;Total ram usage:        4 bytes
  8931 ;; Hardware stack levels used:    1
  8932 ;; Hardware stack levels required when called:    2
  8933 ;; This function calls:
  8934 ;;		_Button_DefaultCallback
  8935 ;;		_MTOUCH_Button_Initialize
  8936 ;; This function is called by:
  8937 ;;		_Button_Service
  8938 ;; This function uses a non-reentrant model
  8939 ;;
  8940                           
  8941                           
  8942                           ;psect for function _Button_State_Pressed
  8943  0587                     _Button_State_Pressed:	
  8944  0587                     l3009:	
  8945                           ;incstack = 0
  8946                           ; Regs used in _Button_State_Pressed: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8947                           
  8948                           
  8949                           ;mcc_generated_files/mtouch/mtouch_button.c: 350: static void Button_State_Pressed(mtouc
      +                          h_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 351: {;mcc_generated_fil
      +                          es/mtouch/mtouch_button.c: 353:     if ((button->counter) >= ((mtouch_button_statecounte
      +                          r_t)1000u))
  8950  0587  0020               	movlb	0	; select bank0
  8951  0588  0826               	movf	Button_State_Pressed@button,w
  8952  0589  0086               	movwf	6
  8953  058A  0827               	movf	Button_State_Pressed@button+1,w
  8954  058B  0087               	movwf	7
  8955  058C  314A               	addfsr 1,10
  8956  058D  3F40               	moviw [0]fsr1
  8957  058E  00A8               	movwf	??_Button_State_Pressed
  8958  058F  3F41               	moviw [1]fsr1
  8959  0590  00A9               	movwf	??_Button_State_Pressed+1
  8960  0591  3003               	movlw	3
  8961  0592  0229               	subwf	??_Button_State_Pressed+1,w
  8962  0593  30E8               	movlw	232
  8963  0594  1903               	skipnz
  8964  0595  0228               	subwf	??_Button_State_Pressed,w
  8965  0596  1C03               	skipc
  8966  0597  2D99               	goto	u1421
  8967  0598  2D9A               	goto	u1420
  8968  0599                     u1421:	
  8969  0599  2DAF               	goto	l3013
  8970  059A                     u1420:	
  8971  059A                     l3011:	
  8972                           
  8973                           ;mcc_generated_files/mtouch/mtouch_button.c: 354:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 355:         MTOUCH_Button_Initialize(button->name);
  8974  059A  0826               	movf	Button_State_Pressed@button,w
  8975  059B  0086               	movwf	6
  8976  059C  0827               	movf	Button_State_Pressed@button+1,w
  8977  059D  0087               	movwf	7
  8978  059E  0801               	movf	1,w
  8979  059F  3181  21B0  3185   	fcall	_MTOUCH_Button_Initialize
  8980                           
  8981                           ;mcc_generated_files/mtouch/mtouch_button.c: 356:         callback_notPressed(button->na
      +                          me);
  8982  05A2  0020               	movlb	0	; select bank0
  8983  05A3  0826               	movf	Button_State_Pressed@button,w
  8984  05A4  0086               	movwf	6
  8985  05A5  0827               	movf	Button_State_Pressed@button+1,w
  8986  05A6  0087               	movwf	7
  8987  05A7  0801               	movf	1,w
  8988  05A8  00A8               	movwf	??_Button_State_Pressed
  8989  05A9  0828               	movf	??_Button_State_Pressed,w
  8990  05AA  00F0               	movwf	Button_DefaultCallback@button
  8991  05AB  318B  235C  3185   	fcall	_Button_DefaultCallback
  8992                           
  8993                           ;mcc_generated_files/mtouch/mtouch_button.c: 357:     }
  8994  05AE  2DFD               	goto	l472
  8995  05AF                     l3013:	
  8996  05AF  0826               	movf	Button_State_Pressed@button,w
  8997  05B0  0086               	movwf	6
  8998  05B1  0827               	movf	Button_State_Pressed@button+1,w
  8999  05B2  0087               	movwf	7
  9000  05B3  3149               	addfsr 1,9
  9001  05B4  0801               	movf	1,w
  9002  05B5  3A80               	xorlw	128
  9003  05B6  00A8               	movwf	??_Button_State_Pressed
  9004  05B7  0826               	movf	Button_State_Pressed@button,w
  9005  05B8  0086               	movwf	6
  9006  05B9  0827               	movf	Button_State_Pressed@button+1,w
  9007  05BA  0087               	movwf	7
  9008  05BB  314E               	addfsr 1,14
  9009  05BC  0826               	movf	Button_State_Pressed@button,w
  9010  05BD  0084               	movwf	4
  9011  05BE  0827               	movf	Button_State_Pressed@button+1,w
  9012  05BF  0085               	movwf	5
  9013  05C0  310E               	addfsr 0,14
  9014  05C1  0800               	movf	0,w
  9015  05C2  00A9               	movwf	??_Button_State_Pressed+1
  9016  05C3  0826               	movf	Button_State_Pressed@button,w
  9017  05C4  0084               	movwf	4
  9018  05C5  0827               	movf	Button_State_Pressed@button+1,w
  9019  05C6  0085               	movwf	5
  9020  05C7  3110               	addfsr 0,16
  9021  05C8  0A00               	incf	0,w
  9022  05C9  2DCB               	goto	u1434
  9023  05CA                     u1435:	
  9024  05CA  36A9               	lsrf	??_Button_State_Pressed+1,f
  9025  05CB                     u1434:	
  9026  05CB  0B89               	decfsz	9,f
  9027  05CC  2DCA               	goto	u1435
  9028  05CD  0829               	movf	??_Button_State_Pressed+1,w
  9029  05CE  0201               	subwf	1,w
  9030  05CF  3A80               	xorlw	128
  9031  05D0  02A8               	subwf	??_Button_State_Pressed,f
  9032  05D1  1803               	skipnc
  9033  05D2  2DD4               	goto	u1441
  9034  05D3  2DD5               	goto	u1440
  9035  05D4                     u1441:	
  9036  05D4  2DFD               	goto	l472
  9037  05D5                     u1440:	
  9038  05D5                     l3015:	
  9039                           
  9040                           ;mcc_generated_files/mtouch/mtouch_button.c: 361:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 362:         button->state = MTOUCH_BUTTON_STATE_notPressed;
  9041  05D5  0826               	movf	Button_State_Pressed@button,w
  9042  05D6  3E02               	addlw	2
  9043  05D7  00A8               	movwf	??_Button_State_Pressed
  9044  05D8  3000               	movlw	0
  9045  05D9  3D27               	addwfc	Button_State_Pressed@button+1,w
  9046  05DA  00A9               	movwf	??_Button_State_Pressed+1
  9047  05DB  0828               	movf	??_Button_State_Pressed,w
  9048  05DC  0086               	movwf	6
  9049  05DD  0829               	movf	??_Button_State_Pressed+1,w
  9050  05DE  0087               	movwf	7
  9051  05DF  3001               	movlw	1
  9052  05E0  0081               	movwf	1
  9053  05E1                     l3017:	
  9054                           
  9055                           ;mcc_generated_files/mtouch/mtouch_button.c: 363:         button->counter = (mtouch_butt
      +                          on_statecounter_t)0;
  9056  05E1  0826               	movf	Button_State_Pressed@button,w
  9057  05E2  0086               	movwf	6
  9058  05E3  0827               	movf	Button_State_Pressed@button+1,w
  9059  05E4  0087               	movwf	7
  9060  05E5  314A               	addfsr 1,10
  9061  05E6  3000               	movlw	0
  9062  05E7  3FC0               	movwi [0]fsr1
  9063  05E8  3FC1               	movwi [1]fsr1
  9064  05E9                     l3019:	
  9065                           
  9066                           ;mcc_generated_files/mtouch/mtouch_button.c: 364:         button->baseline_count = (mtou
      +                          ch_button_baselinecounter_t)((0xffff))-((mtouch_button_baselinecounter_t)1024u);
  9067  05E9  0826               	movf	Button_State_Pressed@button,w
  9068  05EA  0086               	movwf	6
  9069  05EB  0827               	movf	Button_State_Pressed@button+1,w
  9070  05EC  0087               	movwf	7
  9071  05ED  314C               	addfsr 1,12
  9072  05EE  30FF               	movlw	255
  9073  05EF  3FC0               	movwi [0]fsr1
  9074  05F0  30FB               	movlw	251
  9075  05F1  3FC1               	movwi [1]fsr1
  9076  05F2                     l3021:	
  9077                           
  9078                           ;mcc_generated_files/mtouch/mtouch_button.c: 365:         callback_notPressed(button->na
      +                          me);
  9079  05F2  0826               	movf	Button_State_Pressed@button,w
  9080  05F3  0086               	movwf	6
  9081  05F4  0827               	movf	Button_State_Pressed@button+1,w
  9082  05F5  0087               	movwf	7
  9083  05F6  0801               	movf	1,w
  9084  05F7  00A8               	movwf	??_Button_State_Pressed
  9085  05F8  0828               	movf	??_Button_State_Pressed,w
  9086  05F9  00F0               	movwf	Button_DefaultCallback@button
  9087  05FA  318B  235C  3185   	fcall	_Button_DefaultCallback
  9088  05FD                     l472:	
  9089  05FD  0008               	return
  9090  05FE                     __end_of_Button_State_Pressed:	
  9091                           
  9092                           	psect	text65
  9093  01B0                     __ptext65:	
  9094 ;; *************** function _MTOUCH_Button_Initialize *****************
  9095 ;; Defined at:
  9096 ;;		line 236 in file "mcc_generated_files/mtouch/mtouch_button.c"
  9097 ;; Parameters:    Size  Location     Type
  9098 ;;  name            1    wreg     enum E2696
  9099 ;; Auto vars:     Size  Location     Type
  9100 ;;  name            1   10[COMMON] enum E2696
  9101 ;;  button          2   11[COMMON] PTR struct .
  9102 ;;		 -> mtouch_button(170), 
  9103 ;; Return value:  Size  Location     Type
  9104 ;;                  1    wreg      void 
  9105 ;; Registers used:
  9106 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9107 ;; Tracked objects:
  9108 ;;		On entry : 0/0
  9109 ;;		On exit  : 0/0
  9110 ;;		Unchanged: 0/0
  9111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9112 ;;      Params:         0       0       0       0       0       0
  9113 ;;      Locals:         3       0       0       0       0       0
  9114 ;;      Temps:          4       0       0       0       0       0
  9115 ;;      Totals:         7       0       0       0       0       0
  9116 ;;Total ram usage:        7 bytes
  9117 ;; Hardware stack levels used:    1
  9118 ;; Hardware stack levels required when called:    1
  9119 ;; This function calls:
  9120 ;;		_MTOUCH_Sensor_Calibrate
  9121 ;;		___wmul
  9122 ;; This function is called by:
  9123 ;;		_MTOUCH_Button_InitializeAll
  9124 ;;		_Button_Service
  9125 ;;		_Button_State_NotPressed
  9126 ;;		_Button_State_Pressed
  9127 ;; This function uses a non-reentrant model
  9128 ;;
  9129                           
  9130                           
  9131                           ;psect for function _MTOUCH_Button_Initialize
  9132  01B0                     _MTOUCH_Button_Initialize:	
  9133                           
  9134                           ;incstack = 0
  9135                           ; Regs used in _MTOUCH_Button_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  9136                           ;MTOUCH_Button_Initialize@name stored from wreg
  9137  01B0  00FA               	movwf	MTOUCH_Button_Initialize@name
  9138  01B1                     l2837:	
  9139                           
  9140                           ;mcc_generated_files/mtouch/mtouch_button.c: 236: void MTOUCH_Button_Initialize(enum mto
      +                          uch_button_names name);mcc_generated_files/mtouch/mtouch_button.c: 237: {;mcc_generated_
      +                          files/mtouch/mtouch_button.c: 238:     mtouch_button_t* button = &mtouch_button[name];
  9141  01B1  087A               	movf	MTOUCH_Button_Initialize@name,w
  9142  01B2  00F6               	movwf	??_MTOUCH_Button_Initialize
  9143  01B3  01F7               	clrf	??_MTOUCH_Button_Initialize+1
  9144  01B4  0876               	movf	??_MTOUCH_Button_Initialize,w
  9145  01B5  00F0               	movwf	___wmul@multiplier
  9146  01B6  0877               	movf	??_MTOUCH_Button_Initialize+1,w
  9147  01B7  00F1               	movwf	___wmul@multiplier+1
  9148  01B8  3011               	movlw	17
  9149  01B9  00F2               	movwf	___wmul@multiplicand
  9150  01BA  3000               	movlw	0
  9151  01BB  00F3               	movwf	___wmul@multiplicand+1
  9152  01BC  318C  24DE  3181   	fcall	___wmul
  9153  01BF  30C6               	movlw	198
  9154  01C0  00F8               	movwf	??_MTOUCH_Button_Initialize+2
  9155  01C1  3020               	movlw	32
  9156  01C2  00F9               	movwf	??_MTOUCH_Button_Initialize+3
  9157  01C3  0870               	movf	?___wmul,w
  9158  01C4  0778               	addwf	??_MTOUCH_Button_Initialize+2,w
  9159  01C5  00FB               	movwf	MTOUCH_Button_Initialize@button
  9160  01C6  0871               	movf	?___wmul+1,w
  9161  01C7  3D79               	addwfc	??_MTOUCH_Button_Initialize+3,w
  9162  01C8  00FC               	movwf	MTOUCH_Button_Initialize@button+1
  9163  01C9                     l2839:	
  9164                           
  9165                           ;mcc_generated_files/mtouch/mtouch_button.c: 240:     button->state = MTOUCH_BUTTON_STAT
      +                          E_initializing;
  9166  01C9  087B               	movf	MTOUCH_Button_Initialize@button,w
  9167  01CA  0086               	movwf	6
  9168  01CB  087C               	movf	MTOUCH_Button_Initialize@button+1,w
  9169  01CC  0087               	movwf	7
  9170  01CD  3142               	addfsr 1,2
  9171  01CE  0181               	clrf	1
  9172  01CF                     l2841:	
  9173                           
  9174                           ;mcc_generated_files/mtouch/mtouch_button.c: 241:     button->baseline = (mtouch_button_
      +                          baseline_t)0;
  9175  01CF  087B               	movf	MTOUCH_Button_Initialize@button,w
  9176  01D0  3E05               	addlw	5
  9177  01D1  00F6               	movwf	??_MTOUCH_Button_Initialize
  9178  01D2  3000               	movlw	0
  9179  01D3  3D7C               	addwfc	MTOUCH_Button_Initialize@button+1,w
  9180  01D4  00F7               	movwf	??_MTOUCH_Button_Initialize+1
  9181  01D5  0876               	movf	??_MTOUCH_Button_Initialize,w
  9182  01D6  0086               	movwf	6
  9183  01D7  0877               	movf	??_MTOUCH_Button_Initialize+1,w
  9184  01D8  0087               	movwf	7
  9185  01D9  3000               	movlw	0
  9186  01DA  3FC0               	movwi [0]fsr1
  9187  01DB  3FC1               	movwi [1]fsr1
  9188  01DC  3FC2               	movwi [2]fsr1
  9189  01DD  3FC3               	movwi [3]fsr1
  9190  01DE                     l2843:	
  9191                           
  9192                           ;mcc_generated_files/mtouch/mtouch_button.c: 242:     button->counter = (mtouch_button_s
      +                          tatecounter_t)0;
  9193  01DE  087B               	movf	MTOUCH_Button_Initialize@button,w
  9194  01DF  0086               	movwf	6
  9195  01E0  087C               	movf	MTOUCH_Button_Initialize@button+1,w
  9196  01E1  0087               	movwf	7
  9197  01E2  314A               	addfsr 1,10
  9198  01E3  3000               	movlw	0
  9199  01E4  3FC0               	movwi [0]fsr1
  9200  01E5  3FC1               	movwi [1]fsr1
  9201  01E6                     l2845:	
  9202                           
  9203                           ;mcc_generated_files/mtouch/mtouch_button.c: 243:     button->baseline_count = (mtouch_b
      +                          utton_baselinecounter_t)0;
  9204  01E6  087B               	movf	MTOUCH_Button_Initialize@button,w
  9205  01E7  0086               	movwf	6
  9206  01E8  087C               	movf	MTOUCH_Button_Initialize@button+1,w
  9207  01E9  0087               	movwf	7
  9208  01EA  314C               	addfsr 1,12
  9209  01EB  3000               	movlw	0
  9210  01EC  3FC0               	movwi [0]fsr1
  9211  01ED  3FC1               	movwi [1]fsr1
  9212  01EE                     l2847:	
  9213                           
  9214                           ;mcc_generated_files/mtouch/mtouch_button.c: 245:     MTOUCH_Sensor_Calibrate(button->se
      +                          nsor);
  9215  01EE  087B               	movf	MTOUCH_Button_Initialize@button,w
  9216  01EF  0086               	movwf	6
  9217  01F0  087C               	movf	MTOUCH_Button_Initialize@button+1,w
  9218  01F1  0087               	movwf	7
  9219  01F2  3141               	addfsr 1,1
  9220  01F3  0801               	movf	1,w
  9221  01F4  318B  235D  3181   	fcall	_MTOUCH_Sensor_Calibrate
  9222  01F7                     l436:	
  9223  01F7  0008               	return
  9224  01F8                     __end_of_MTOUCH_Button_Initialize:	
  9225                           
  9226                           	psect	text66
  9227  0B5D                     __ptext66:	
  9228 ;; *************** function _MTOUCH_Sensor_Calibrate *****************
  9229 ;; Defined at:
  9230 ;;		line 543 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  9231 ;; Parameters:    Size  Location     Type
  9232 ;;  sensor          1    wreg     enum E2470
  9233 ;; Auto vars:     Size  Location     Type
  9234 ;;  sensor          1    0[COMMON] enum E2470
  9235 ;; Return value:  Size  Location     Type
  9236 ;;                  1    wreg      void 
  9237 ;; Registers used:
  9238 ;;		wreg
  9239 ;; Tracked objects:
  9240 ;;		On entry : 0/0
  9241 ;;		On exit  : 0/0
  9242 ;;		Unchanged: 0/0
  9243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9244 ;;      Params:         0       0       0       0       0       0
  9245 ;;      Locals:         0       0       0       0       0       0
  9246 ;;      Temps:          0       0       0       0       0       0
  9247 ;;      Totals:         0       0       0       0       0       0
  9248 ;;Total ram usage:        0 bytes
  9249 ;; Hardware stack levels used:    1
  9250 ;; This function calls:
  9251 ;;		Nothing
  9252 ;; This function is called by:
  9253 ;;		_MTOUCH_Button_Initialize
  9254 ;; This function uses a non-reentrant model
  9255 ;;
  9256                           
  9257                           
  9258                           ;psect for function _MTOUCH_Sensor_Calibrate
  9259  0B5D                     _MTOUCH_Sensor_Calibrate:	
  9260  0B5D                     l358:	
  9261                           ;incstack = 0
  9262                           ; Regs used in _MTOUCH_Sensor_Calibrate: [wreg]
  9263                           
  9264  0B5D  0008               	return
  9265  0B5E                     __end_of_MTOUCH_Sensor_Calibrate:	
  9266                           
  9267                           	psect	text67
  9268  0B5C                     __ptext67:	
  9269 ;; *************** function _Button_DefaultCallback *****************
  9270 ;; Defined at:
  9271 ;;		line 604 in file "mcc_generated_files/mtouch/mtouch_button.c"
  9272 ;; Parameters:    Size  Location     Type
  9273 ;;  button          1    0[COMMON] enum E2696
  9274 ;; Auto vars:     Size  Location     Type
  9275 ;;		None
  9276 ;; Return value:  Size  Location     Type
  9277 ;;                  1    wreg      void 
  9278 ;; Registers used:
  9279 ;;		None
  9280 ;; Tracked objects:
  9281 ;;		On entry : 0/0
  9282 ;;		On exit  : 0/0
  9283 ;;		Unchanged: 0/0
  9284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9285 ;;      Params:         1       0       0       0       0       0
  9286 ;;      Locals:         0       0       0       0       0       0
  9287 ;;      Temps:          0       0       0       0       0       0
  9288 ;;      Totals:         1       0       0       0       0       0
  9289 ;;Total ram usage:        1 bytes
  9290 ;; Hardware stack levels used:    1
  9291 ;; This function calls:
  9292 ;;		Nothing
  9293 ;; This function is called by:
  9294 ;;		_Button_State_NotPressed
  9295 ;;		_Button_State_Pressed
  9296 ;; This function uses a non-reentrant model
  9297 ;;
  9298                           
  9299                           
  9300                           ;psect for function _Button_DefaultCallback
  9301  0B5C                     _Button_DefaultCallback:	
  9302  0B5C                     l576:	
  9303                           ;incstack = 0
  9304                           ; Regs used in _Button_DefaultCallback: []
  9305                           
  9306  0B5C  0008               	return
  9307  0B5D                     __end_of_Button_DefaultCallback:	
  9308                           
  9309                           	psect	text68
  9310  068B                     __ptext68:	
  9311 ;; *************** function _Button_Baseline_Update *****************
  9312 ;; Defined at:
  9313 ;;		line 558 in file "mcc_generated_files/mtouch/mtouch_button.c"
  9314 ;; Parameters:    Size  Location     Type
  9315 ;;  button          2    0[COMMON] PTR struct .
  9316 ;;		 -> mtouch_button(170), 
  9317 ;; Auto vars:     Size  Location     Type
  9318 ;;		None
  9319 ;; Return value:  Size  Location     Type
  9320 ;;                  1    wreg      void 
  9321 ;; Registers used:
  9322 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9323 ;; Tracked objects:
  9324 ;;		On entry : 0/0
  9325 ;;		On exit  : 0/0
  9326 ;;		Unchanged: 0/0
  9327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9328 ;;      Params:         2       0       0       0       0       0
  9329 ;;      Locals:         0       0       0       0       0       0
  9330 ;;      Temps:          6       0       0       0       0       0
  9331 ;;      Totals:         8       0       0       0       0       0
  9332 ;;Total ram usage:        8 bytes
  9333 ;; Hardware stack levels used:    1
  9334 ;; This function calls:
  9335 ;;		Nothing
  9336 ;; This function is called by:
  9337 ;;		_Button_State_Initializing
  9338 ;;		_Button_State_NotPressed
  9339 ;; This function uses a non-reentrant model
  9340 ;;
  9341                           
  9342                           
  9343                           ;psect for function _Button_Baseline_Update
  9344  068B                     _Button_Baseline_Update:	
  9345  068B                     l2853:	
  9346                           ;incstack = 0
  9347                           ; Regs used in _Button_Baseline_Update: [wreg+fsr1l+fsr1h+status,2+status,0]
  9348                           
  9349                           
  9350                           ;mcc_generated_files/mtouch/mtouch_button.c: 558: static void Button_Baseline_Update(mto
      +                          uch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 559: {;mcc_generated_f
      +                          iles/mtouch/mtouch_button.c: 560:     if (GIE == (uint8_t)1)
  9351  068B  1F8B               	btfss	11,7	;volatile
  9352  068C  2E8E               	goto	u1191
  9353  068D  2E8F               	goto	u1190
  9354  068E                     u1191:	
  9355  068E  2ED6               	goto	l2863
  9356  068F                     u1190:	
  9357  068F                     l2855:	
  9358                           
  9359                           ;mcc_generated_files/mtouch/mtouch_button.c: 561:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 562:         GIE = (uint8_t)0;
  9360  068F  138B               	bcf	11,7	;volatile
  9361  0690                     l2857:	
  9362                           
  9363                           ;mcc_generated_files/mtouch/mtouch_button.c: 563:         button->baseline -= (button->b
      +                          aseline) >> ((uint8_t)4u);
  9364  0690  0870               	movf	Button_Baseline_Update@button,w
  9365  0691  0086               	movwf	6
  9366  0692  0871               	movf	Button_Baseline_Update@button+1,w
  9367  0693  0087               	movwf	7
  9368  0694  3145               	addfsr 1,5
  9369  0695  3F40               	moviw [0]fsr1
  9370  0696  00F2               	movwf	??_Button_Baseline_Update
  9371  0697  3F41               	moviw [1]fsr1
  9372  0698  00F3               	movwf	??_Button_Baseline_Update+1
  9373  0699  3F42               	moviw [2]fsr1
  9374  069A  00F4               	movwf	??_Button_Baseline_Update+2
  9375  069B  3F43               	moviw [3]fsr1
  9376  069C  00F5               	movwf	??_Button_Baseline_Update+3
  9377  069D  3004               	movlw	4
  9378  069E                     u1205:	
  9379  069E  36F5               	lsrf	??_Button_Baseline_Update+3,f
  9380  069F  0CF4               	rrf	??_Button_Baseline_Update+2,f
  9381  06A0  0CF3               	rrf	??_Button_Baseline_Update+1,f
  9382  06A1  0CF2               	rrf	??_Button_Baseline_Update,f
  9383  06A2                     u1200:	
  9384  06A2  0B89               	decfsz	9,f
  9385  06A3  2E9E               	goto	u1205
  9386  06A4  0870               	movf	Button_Baseline_Update@button,w
  9387  06A5  0086               	movwf	6
  9388  06A6  0871               	movf	Button_Baseline_Update@button+1,w
  9389  06A7  0087               	movwf	7
  9390  06A8  3145               	addfsr 1,5
  9391  06A9  0872               	movf	??_Button_Baseline_Update,w
  9392  06AA  0281               	subwf	1,f
  9393  06AB  3141               	addfsr 1,1
  9394  06AC  0873               	movf	??_Button_Baseline_Update+1,w
  9395  06AD  3B81               	subwfb	1,f
  9396  06AE  3141               	addfsr 1,1
  9397  06AF  0874               	movf	??_Button_Baseline_Update+2,w
  9398  06B0  3B81               	subwfb	1,f
  9399  06B1  3141               	addfsr 1,1
  9400  06B2  0875               	movf	??_Button_Baseline_Update+3,w
  9401  06B3  3B81               	subwfb	1,f
  9402  06B4  317D               	addfsr 1,-3
  9403  06B5                     l2859:	
  9404                           
  9405                           ;mcc_generated_files/mtouch/mtouch_button.c: 564:         button->baseline += button->re
      +                          ading;
  9406  06B5  0870               	movf	Button_Baseline_Update@button,w
  9407  06B6  0086               	movwf	6
  9408  06B7  0871               	movf	Button_Baseline_Update@button+1,w
  9409  06B8  0087               	movwf	7
  9410  06B9  3143               	addfsr 1,3
  9411  06BA  3F40               	moviw [0]fsr1
  9412  06BB  00F2               	movwf	??_Button_Baseline_Update
  9413  06BC  3F41               	moviw [1]fsr1
  9414  06BD  00F3               	movwf	??_Button_Baseline_Update+1
  9415  06BE  0872               	movf	??_Button_Baseline_Update,w
  9416  06BF  00F4               	movwf	??_Button_Baseline_Update+2
  9417  06C0  0873               	movf	??_Button_Baseline_Update+1,w
  9418  06C1  00F5               	movwf	??_Button_Baseline_Update+3
  9419  06C2  01F6               	clrf	??_Button_Baseline_Update+4
  9420  06C3  01F7               	clrf	??_Button_Baseline_Update+5
  9421  06C4  0870               	movf	Button_Baseline_Update@button,w
  9422  06C5  0086               	movwf	6
  9423  06C6  0871               	movf	Button_Baseline_Update@button+1,w
  9424  06C7  0087               	movwf	7
  9425  06C8  3145               	addfsr 1,5
  9426  06C9  0874               	movf	??_Button_Baseline_Update+2,w
  9427  06CA  0781               	addwf	1,f
  9428  06CB  3141               	addfsr 1,1
  9429  06CC  0875               	movf	??_Button_Baseline_Update+3,w
  9430  06CD  3D81               	addwfc	1,f
  9431  06CE  3141               	addfsr 1,1
  9432  06CF  0876               	movf	??_Button_Baseline_Update+4,w
  9433  06D0  3D81               	addwfc	1,f
  9434  06D1  3141               	addfsr 1,1
  9435  06D2  0877               	movf	??_Button_Baseline_Update+5,w
  9436  06D3  3D81               	addwfc	1,f
  9437  06D4                     l2861:	
  9438                           
  9439                           ;mcc_generated_files/mtouch/mtouch_button.c: 565:         GIE = (uint8_t)1;
  9440  06D4  178B               	bsf	11,7	;volatile
  9441                           
  9442                           ;mcc_generated_files/mtouch/mtouch_button.c: 566:     }
  9443  06D5  2F1A               	goto	l560
  9444  06D6                     l2863:	
  9445                           
  9446                           ;mcc_generated_files/mtouch/mtouch_button.c: 568:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 569:         button->baseline -= (button->baseline) >> ((uint8_t)4u);
  9447  06D6  0870               	movf	Button_Baseline_Update@button,w
  9448  06D7  0086               	movwf	6
  9449  06D8  0871               	movf	Button_Baseline_Update@button+1,w
  9450  06D9  0087               	movwf	7
  9451  06DA  3145               	addfsr 1,5
  9452  06DB  3F40               	moviw [0]fsr1
  9453  06DC  00F2               	movwf	??_Button_Baseline_Update
  9454  06DD  3F41               	moviw [1]fsr1
  9455  06DE  00F3               	movwf	??_Button_Baseline_Update+1
  9456  06DF  3F42               	moviw [2]fsr1
  9457  06E0  00F4               	movwf	??_Button_Baseline_Update+2
  9458  06E1  3F43               	moviw [3]fsr1
  9459  06E2  00F5               	movwf	??_Button_Baseline_Update+3
  9460  06E3  3004               	movlw	4
  9461  06E4                     u1215:	
  9462  06E4  36F5               	lsrf	??_Button_Baseline_Update+3,f
  9463  06E5  0CF4               	rrf	??_Button_Baseline_Update+2,f
  9464  06E6  0CF3               	rrf	??_Button_Baseline_Update+1,f
  9465  06E7  0CF2               	rrf	??_Button_Baseline_Update,f
  9466  06E8                     u1210:	
  9467  06E8  0B89               	decfsz	9,f
  9468  06E9  2EE4               	goto	u1215
  9469  06EA  0870               	movf	Button_Baseline_Update@button,w
  9470  06EB  0086               	movwf	6
  9471  06EC  0871               	movf	Button_Baseline_Update@button+1,w
  9472  06ED  0087               	movwf	7
  9473  06EE  3145               	addfsr 1,5
  9474  06EF  0872               	movf	??_Button_Baseline_Update,w
  9475  06F0  0281               	subwf	1,f
  9476  06F1  3141               	addfsr 1,1
  9477  06F2  0873               	movf	??_Button_Baseline_Update+1,w
  9478  06F3  3B81               	subwfb	1,f
  9479  06F4  3141               	addfsr 1,1
  9480  06F5  0874               	movf	??_Button_Baseline_Update+2,w
  9481  06F6  3B81               	subwfb	1,f
  9482  06F7  3141               	addfsr 1,1
  9483  06F8  0875               	movf	??_Button_Baseline_Update+3,w
  9484  06F9  3B81               	subwfb	1,f
  9485  06FA  317D               	addfsr 1,-3
  9486  06FB                     l2865:	
  9487                           
  9488                           ;mcc_generated_files/mtouch/mtouch_button.c: 570:         button->baseline += button->re
      +                          ading;
  9489  06FB  0870               	movf	Button_Baseline_Update@button,w
  9490  06FC  0086               	movwf	6
  9491  06FD  0871               	movf	Button_Baseline_Update@button+1,w
  9492  06FE  0087               	movwf	7
  9493  06FF  3143               	addfsr 1,3
  9494  0700  3F40               	moviw [0]fsr1
  9495  0701  00F2               	movwf	??_Button_Baseline_Update
  9496  0702  3F41               	moviw [1]fsr1
  9497  0703  00F3               	movwf	??_Button_Baseline_Update+1
  9498  0704  0872               	movf	??_Button_Baseline_Update,w
  9499  0705  00F4               	movwf	??_Button_Baseline_Update+2
  9500  0706  0873               	movf	??_Button_Baseline_Update+1,w
  9501  0707  00F5               	movwf	??_Button_Baseline_Update+3
  9502  0708  01F6               	clrf	??_Button_Baseline_Update+4
  9503  0709  01F7               	clrf	??_Button_Baseline_Update+5
  9504  070A  0870               	movf	Button_Baseline_Update@button,w
  9505  070B  0086               	movwf	6
  9506  070C  0871               	movf	Button_Baseline_Update@button+1,w
  9507  070D  0087               	movwf	7
  9508  070E  3145               	addfsr 1,5
  9509  070F  0874               	movf	??_Button_Baseline_Update+2,w
  9510  0710  0781               	addwf	1,f
  9511  0711  3141               	addfsr 1,1
  9512  0712  0875               	movf	??_Button_Baseline_Update+3,w
  9513  0713  3D81               	addwfc	1,f
  9514  0714  3141               	addfsr 1,1
  9515  0715  0876               	movf	??_Button_Baseline_Update+4,w
  9516  0716  3D81               	addwfc	1,f
  9517  0717  3141               	addfsr 1,1
  9518  0718  0877               	movf	??_Button_Baseline_Update+5,w
  9519  0719  3D81               	addwfc	1,f
  9520  071A                     l560:	
  9521  071A  0008               	return
  9522  071B                     __end_of_Button_Baseline_Update:	
  9523                           
  9524                           	psect	text69
  9525  0181                     __ptext69:	
  9526 ;; *************** function _Button_Baseline_Initialize *****************
  9527 ;; Defined at:
  9528 ;;		line 552 in file "mcc_generated_files/mtouch/mtouch_button.c"
  9529 ;; Parameters:    Size  Location     Type
  9530 ;;  button          2    0[BANK0 ] PTR struct .
  9531 ;;		 -> mtouch_button(170), 
  9532 ;; Auto vars:     Size  Location     Type
  9533 ;;		None
  9534 ;; Return value:  Size  Location     Type
  9535 ;;                  1    wreg      void 
  9536 ;; Registers used:
  9537 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9538 ;; Tracked objects:
  9539 ;;		On entry : 0/0
  9540 ;;		On exit  : 0/0
  9541 ;;		Unchanged: 0/0
  9542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9543 ;;      Params:         0       2       0       0       0       0
  9544 ;;      Locals:         0       0       0       0       0       0
  9545 ;;      Temps:          0       4       0       0       0       0
  9546 ;;      Totals:         0       6       0       0       0       0
  9547 ;;Total ram usage:        6 bytes
  9548 ;; Hardware stack levels used:    1
  9549 ;; Hardware stack levels required when called:    2
  9550 ;; This function calls:
  9551 ;;		_MTOUCH_Sensor_RawSample_Get
  9552 ;; This function is called by:
  9553 ;;		_Button_State_Initializing
  9554 ;; This function uses a non-reentrant model
  9555 ;;
  9556                           
  9557                           
  9558                           ;psect for function _Button_Baseline_Initialize
  9559  0181                     _Button_Baseline_Initialize:	
  9560  0181                     l2849:	
  9561                           ;incstack = 0
  9562                           ; Regs used in _Button_Baseline_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  9563                           
  9564                           
  9565                           ;mcc_generated_files/mtouch/mtouch_button.c: 552: static void Button_Baseline_Initialize
      +                          (mtouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 553: {;mcc_generat
      +                          ed_files/mtouch/mtouch_button.c: 554:     button->baseline = MTOUCH_Sensor_RawSample_Get
      +                          (button->sensor);
  9566  0181  0020               	movlb	0	; select bank0
  9567  0182  0820               	movf	Button_Baseline_Initialize@button,w
  9568  0183  0086               	movwf	6
  9569  0184  0821               	movf	Button_Baseline_Initialize@button+1,w
  9570  0185  0087               	movwf	7
  9571  0186  3141               	addfsr 1,1
  9572  0187  0801               	movf	1,w
  9573  0188  3180  2084  3181   	fcall	_MTOUCH_Sensor_RawSample_Get
  9574  018B  0876               	movf	?_MTOUCH_Sensor_RawSample_Get,w
  9575  018C  0020               	movlb	0	; select bank0
  9576  018D  00A2               	movwf	??_Button_Baseline_Initialize
  9577  018E  0877               	movf	?_MTOUCH_Sensor_RawSample_Get+1,w
  9578  018F  00A3               	movwf	??_Button_Baseline_Initialize+1
  9579  0190  01A4               	clrf	??_Button_Baseline_Initialize+2
  9580  0191  01A5               	clrf	??_Button_Baseline_Initialize+3
  9581  0192  0820               	movf	Button_Baseline_Initialize@button,w
  9582  0193  0086               	movwf	6
  9583  0194  0821               	movf	Button_Baseline_Initialize@button+1,w
  9584  0195  0087               	movwf	7
  9585  0196  3145               	addfsr 1,5
  9586  0197  0822               	movf	??_Button_Baseline_Initialize,w
  9587  0198  3FC0               	movwi [0]fsr1
  9588  0199  0823               	movf	??_Button_Baseline_Initialize+1,w
  9589  019A  3FC1               	movwi [1]fsr1
  9590  019B  0824               	movf	??_Button_Baseline_Initialize+2,w
  9591  019C  3FC2               	movwi [2]fsr1
  9592  019D  0825               	movf	??_Button_Baseline_Initialize+3,w
  9593  019E  3FC3               	movwi [3]fsr1
  9594  019F                     l2851:	
  9595                           
  9596                           ;mcc_generated_files/mtouch/mtouch_button.c: 555:     button->baseline <<= ((uint8_t)4u)
      +                          ;
  9597  019F  0820               	movf	Button_Baseline_Initialize@button,w
  9598  01A0  0086               	movwf	6
  9599  01A1  0821               	movf	Button_Baseline_Initialize@button+1,w
  9600  01A2  0087               	movwf	7
  9601  01A3  3145               	addfsr 1,5
  9602  01A4  3004               	movlw	4
  9603  01A5                     u1185:	
  9604  01A5  3581               	lslf	1,f
  9605  01A6  3141               	addfsr 1,1
  9606  01A7  0D81               	rlf	1,f
  9607  01A8  3141               	addfsr 1,1
  9608  01A9  0D81               	rlf	1,f
  9609  01AA  3141               	addfsr 1,1
  9610  01AB  0D81               	rlf	1,f
  9611  01AC  317D               	addfsr 1,-3
  9612  01AD  0B89               	decfsz	9,f
  9613  01AE  29A5               	goto	u1185
  9614  01AF                     l555:	
  9615  01AF  0008               	return
  9616  01B0                     __end_of_Button_Baseline_Initialize:	
  9617                           
  9618                           	psect	text70
  9619  0C76                     __ptext70:	
  9620 ;; *************** function _Button_Reading_Update *****************
  9621 ;; Defined at:
  9622 ;;		line 525 in file "mcc_generated_files/mtouch/mtouch_button.c"
  9623 ;; Parameters:    Size  Location     Type
  9624 ;;  button          2    4[BANK0 ] PTR struct .
  9625 ;;		 -> mtouch_button(170), 
  9626 ;; Auto vars:     Size  Location     Type
  9627 ;;		None
  9628 ;; Return value:  Size  Location     Type
  9629 ;;                  1    wreg      void 
  9630 ;; Registers used:
  9631 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9632 ;; Tracked objects:
  9633 ;;		On entry : 0/0
  9634 ;;		On exit  : 0/0
  9635 ;;		Unchanged: 0/0
  9636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9637 ;;      Params:         0       2       0       0       0       0
  9638 ;;      Locals:         0       0       0       0       0       0
  9639 ;;      Temps:          0       0       0       0       0       0
  9640 ;;      Totals:         0       2       0       0       0       0
  9641 ;;Total ram usage:        2 bytes
  9642 ;; Hardware stack levels used:    1
  9643 ;; Hardware stack levels required when called:    3
  9644 ;; This function calls:
  9645 ;;		_Button_Reading_Update_Helper
  9646 ;; This function is called by:
  9647 ;;		_Button_Service
  9648 ;; This function uses a non-reentrant model
  9649 ;;
  9650                           
  9651                           
  9652                           ;psect for function _Button_Reading_Update
  9653  0C76                     _Button_Reading_Update:	
  9654  0C76                     l2945:	
  9655                           ;incstack = 0
  9656                           ; Regs used in _Button_Reading_Update: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  9657                           
  9658                           
  9659                           ;mcc_generated_files/mtouch/mtouch_button.c: 525: static void Button_Reading_Update(mtou
      +                          ch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 526: {;mcc_generated_fi
      +                          les/mtouch/mtouch_button.c: 527:     if (GIE == (uint8_t) 1)
  9660  0C76  1F8B               	btfss	11,7	;volatile
  9661  0C77  2C79               	goto	u1301
  9662  0C78  2C7A               	goto	u1300
  9663  0C79                     u1301:	
  9664  0C79  2C85               	goto	l2953
  9665  0C7A                     u1300:	
  9666  0C7A                     l2947:	
  9667                           
  9668                           ;mcc_generated_files/mtouch/mtouch_button.c: 528:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 529:         GIE = (uint8_t) 0;
  9669  0C7A  138B               	bcf	11,7	;volatile
  9670  0C7B                     l2949:	
  9671                           
  9672                           ;mcc_generated_files/mtouch/mtouch_button.c: 530:         Button_Reading_Update_Helper(b
      +                          utton);
  9673  0C7B  0020               	movlb	0	; select bank0
  9674  0C7C  0825               	movf	Button_Reading_Update@button+1,w
  9675  0C7D  00A1               	movwf	Button_Reading_Update_Helper@button+1
  9676  0C7E  0824               	movf	Button_Reading_Update@button,w
  9677  0C7F  00A0               	movwf	Button_Reading_Update_Helper@button
  9678  0C80  3181  21F8  318C   	fcall	_Button_Reading_Update_Helper
  9679  0C83                     l2951:	
  9680                           
  9681                           ;mcc_generated_files/mtouch/mtouch_button.c: 531:         GIE = (uint8_t) 1;
  9682  0C83  178B               	bsf	11,7	;volatile
  9683                           
  9684                           ;mcc_generated_files/mtouch/mtouch_button.c: 532:     }
  9685  0C84  2C8D               	goto	l547
  9686  0C85                     l2953:	
  9687                           
  9688                           ;mcc_generated_files/mtouch/mtouch_button.c: 534:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 535:         Button_Reading_Update_Helper(button);
  9689  0C85  0020               	movlb	0	; select bank0
  9690  0C86  0825               	movf	Button_Reading_Update@button+1,w
  9691  0C87  00A1               	movwf	Button_Reading_Update_Helper@button+1
  9692  0C88  0824               	movf	Button_Reading_Update@button,w
  9693  0C89  00A0               	movwf	Button_Reading_Update_Helper@button
  9694  0C8A  3181  21F8  318C   	fcall	_Button_Reading_Update_Helper
  9695  0C8D                     l547:	
  9696  0C8D  0008               	return
  9697  0C8E                     __end_of_Button_Reading_Update:	
  9698                           
  9699                           	psect	text71
  9700  01F8                     __ptext71:	
  9701 ;; *************** function _Button_Reading_Update_Helper *****************
  9702 ;; Defined at:
  9703 ;;		line 539 in file "mcc_generated_files/mtouch/mtouch_button.c"
  9704 ;; Parameters:    Size  Location     Type
  9705 ;;  button          2    0[BANK0 ] PTR struct .
  9706 ;;		 -> mtouch_button(170), 
  9707 ;; Auto vars:     Size  Location     Type
  9708 ;;		None
  9709 ;; Return value:  Size  Location     Type
  9710 ;;                  1    wreg      void 
  9711 ;; Registers used:
  9712 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9713 ;; Tracked objects:
  9714 ;;		On entry : 0/0
  9715 ;;		On exit  : 0/0
  9716 ;;		Unchanged: 0/0
  9717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9718 ;;      Params:         0       2       0       0       0       0
  9719 ;;      Locals:         0       0       0       0       0       0
  9720 ;;      Temps:          0       2       0       0       0       0
  9721 ;;      Totals:         0       4       0       0       0       0
  9722 ;;Total ram usage:        4 bytes
  9723 ;; Hardware stack levels used:    1
  9724 ;; Hardware stack levels required when called:    2
  9725 ;; This function calls:
  9726 ;;		_MTOUCH_Sensor_RawSample_Get
  9727 ;; This function is called by:
  9728 ;;		_Button_Reading_Update
  9729 ;; This function uses a non-reentrant model
  9730 ;;
  9731                           
  9732                           
  9733                           ;psect for function _Button_Reading_Update_Helper
  9734  01F8                     _Button_Reading_Update_Helper:	
  9735  01F8                     l2867:	
  9736                           ;incstack = 0
  9737                           ; Regs used in _Button_Reading_Update_Helper: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
  9738                           
  9739                           
  9740                           ;mcc_generated_files/mtouch/mtouch_button.c: 539: static void Button_Reading_Update_Help
      +                          er(mtouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 540: {;mcc_gener
      +                          ated_files/mtouch/mtouch_button.c: 541:     if (button->state != MTOUCH_BUTTON_STATE_ini
      +                          tializing)
  9741  01F8  0020               	movlb	0	; select bank0
  9742  01F9  0820               	movf	Button_Reading_Update_Helper@button,w
  9743  01FA  0086               	movwf	6
  9744  01FB  0821               	movf	Button_Reading_Update_Helper@button+1,w
  9745  01FC  0087               	movwf	7
  9746  01FD  3142               	addfsr 1,2
  9747  01FE  0801               	movf	1,w
  9748  01FF  1903               	btfsc	3,2
  9749  0200  2A02               	goto	u1221
  9750  0201  2A03               	goto	u1220
  9751  0202                     u1221:	
  9752  0202  2A39               	goto	l2873
  9753  0203                     u1220:	
  9754  0203                     l2869:	
  9755                           
  9756                           ;mcc_generated_files/mtouch/mtouch_button.c: 542:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 543:         button->reading -= button->reading>>((uint8_t)2u);
  9757  0203  0820               	movf	Button_Reading_Update_Helper@button,w
  9758  0204  0086               	movwf	6
  9759  0205  0821               	movf	Button_Reading_Update_Helper@button+1,w
  9760  0206  0087               	movwf	7
  9761  0207  3143               	addfsr 1,3
  9762  0208  3F40               	moviw [0]fsr1
  9763  0209  00A2               	movwf	??_Button_Reading_Update_Helper
  9764  020A  3F41               	moviw [1]fsr1
  9765  020B  00A3               	movwf	??_Button_Reading_Update_Helper+1
  9766  020C  36A3               	lsrf	??_Button_Reading_Update_Helper+1,f
  9767  020D  0CA2               	rrf	??_Button_Reading_Update_Helper,f
  9768  020E  36A3               	lsrf	??_Button_Reading_Update_Helper+1,f
  9769  020F  0CA2               	rrf	??_Button_Reading_Update_Helper,f
  9770  0210  0820               	movf	Button_Reading_Update_Helper@button,w
  9771  0211  0086               	movwf	6
  9772  0212  0821               	movf	Button_Reading_Update_Helper@button+1,w
  9773  0213  0087               	movwf	7
  9774  0214  3143               	addfsr 1,3
  9775  0215  0822               	movf	??_Button_Reading_Update_Helper,w
  9776  0216  0281               	subwf	1,f
  9777  0217  3141               	addfsr 1,1
  9778  0218  0823               	movf	??_Button_Reading_Update_Helper+1,w
  9779  0219  3B81               	subwfb	1,f
  9780  021A  317F               	addfsr 1,-1
  9781  021B                     l2871:	
  9782                           
  9783                           ;mcc_generated_files/mtouch/mtouch_button.c: 544:         button->reading += MTOUCH_Sens
      +                          or_RawSample_Get(button->sensor) >> ((uint8_t)2u);
  9784  021B  0820               	movf	Button_Reading_Update_Helper@button,w
  9785  021C  0086               	movwf	6
  9786  021D  0821               	movf	Button_Reading_Update_Helper@button+1,w
  9787  021E  0087               	movwf	7
  9788  021F  3141               	addfsr 1,1
  9789  0220  0801               	movf	1,w
  9790  0221  3180  2084  3181   	fcall	_MTOUCH_Sensor_RawSample_Get
  9791  0224  0876               	movf	?_MTOUCH_Sensor_RawSample_Get,w
  9792  0225  0020               	movlb	0	; select bank0
  9793  0226  00A2               	movwf	??_Button_Reading_Update_Helper
  9794  0227  0877               	movf	?_MTOUCH_Sensor_RawSample_Get+1,w
  9795  0228  00A3               	movwf	??_Button_Reading_Update_Helper+1
  9796  0229  36A3               	lsrf	??_Button_Reading_Update_Helper+1,f
  9797  022A  0CA2               	rrf	??_Button_Reading_Update_Helper,f
  9798  022B  36A3               	lsrf	??_Button_Reading_Update_Helper+1,f
  9799  022C  0CA2               	rrf	??_Button_Reading_Update_Helper,f
  9800  022D  0820               	movf	Button_Reading_Update_Helper@button,w
  9801  022E  0086               	movwf	6
  9802  022F  0821               	movf	Button_Reading_Update_Helper@button+1,w
  9803  0230  0087               	movwf	7
  9804  0231  3143               	addfsr 1,3
  9805  0232  0822               	movf	??_Button_Reading_Update_Helper,w
  9806  0233  0781               	addwf	1,f
  9807  0234  3141               	addfsr 1,1
  9808  0235  0823               	movf	??_Button_Reading_Update_Helper+1,w
  9809  0236  3D81               	addwfc	1,f
  9810  0237  317F               	addfsr 1,-1
  9811                           
  9812                           ;mcc_generated_files/mtouch/mtouch_button.c: 545:     }
  9813  0238  2A4C               	goto	l552
  9814  0239                     l2873:	
  9815                           
  9816                           ;mcc_generated_files/mtouch/mtouch_button.c: 547:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 548:         button->reading = MTOUCH_Sensor_RawSample_Get(button->sensor);
  9817  0239  0820               	movf	Button_Reading_Update_Helper@button,w
  9818  023A  0086               	movwf	6
  9819  023B  0821               	movf	Button_Reading_Update_Helper@button+1,w
  9820  023C  0087               	movwf	7
  9821  023D  3141               	addfsr 1,1
  9822  023E  0801               	movf	1,w
  9823  023F  3180  2084  3181   	fcall	_MTOUCH_Sensor_RawSample_Get
  9824  0242  0020               	movlb	0	; select bank0
  9825  0243  0820               	movf	Button_Reading_Update_Helper@button,w
  9826  0244  0086               	movwf	6
  9827  0245  0821               	movf	Button_Reading_Update_Helper@button+1,w
  9828  0246  0087               	movwf	7
  9829  0247  3143               	addfsr 1,3
  9830  0248  0876               	movf	?_MTOUCH_Sensor_RawSample_Get,w
  9831  0249  3FC0               	movwi [0]fsr1
  9832  024A  0877               	movf	?_MTOUCH_Sensor_RawSample_Get+1,w
  9833  024B  3FC1               	movwi [1]fsr1
  9834  024C                     l552:	
  9835  024C  0008               	return
  9836  024D                     __end_of_Button_Reading_Update_Helper:	
  9837                           
  9838                           	psect	text72
  9839  0084                     __ptext72:	
  9840 ;; *************** function _MTOUCH_Sensor_RawSample_Get *****************
  9841 ;; Defined at:
  9842 ;;		line 428 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  9843 ;; Parameters:    Size  Location     Type
  9844 ;;  name            1    wreg     enum E2470
  9845 ;; Auto vars:     Size  Location     Type
  9846 ;;  name            1   12[COMMON] enum E2470
  9847 ;; Return value:  Size  Location     Type
  9848 ;;                  2    6[COMMON] unsigned short 
  9849 ;; Registers used:
  9850 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9851 ;; Tracked objects:
  9852 ;;		On entry : 0/0
  9853 ;;		On exit  : 0/0
  9854 ;;		Unchanged: 0/0
  9855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9856 ;;      Params:         2       0       0       0       0       0
  9857 ;;      Locals:         1       0       0       0       0       0
  9858 ;;      Temps:          4       0       0       0       0       0
  9859 ;;      Totals:         7       0       0       0       0       0
  9860 ;;Total ram usage:        7 bytes
  9861 ;; Hardware stack levels used:    1
  9862 ;; Hardware stack levels required when called:    1
  9863 ;; This function calls:
  9864 ;;		___wmul
  9865 ;; This function is called by:
  9866 ;;		_Button_Reading_Update_Helper
  9867 ;;		_Button_Baseline_Initialize
  9868 ;; This function uses a non-reentrant model
  9869 ;;
  9870                           
  9871                           
  9872                           ;psect for function _MTOUCH_Sensor_RawSample_Get
  9873  0084                     _MTOUCH_Sensor_RawSample_Get:	
  9874                           
  9875                           ;incstack = 0
  9876                           ; Regs used in _MTOUCH_Sensor_RawSample_Get: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  9877                           ;MTOUCH_Sensor_RawSample_Get@name stored from wreg
  9878  0084  00FC               	movwf	MTOUCH_Sensor_RawSample_Get@name
  9879  0085                     l2761:	
  9880  0085  300A               	movlw	10
  9881  0086  027C               	subwf	MTOUCH_Sensor_RawSample_Get@name,w
  9882  0087  1803               	skipnc
  9883  0088  288A               	goto	u1111
  9884  0089  288B               	goto	u1110
  9885  008A                     u1111:	
  9886  008A  28A8               	goto	l2769
  9887  008B                     u1110:	
  9888  008B                     l2763:	
  9889  008B  087C               	movf	MTOUCH_Sensor_RawSample_Get@name,w
  9890  008C  00F8               	movwf	??_MTOUCH_Sensor_RawSample_Get
  9891  008D  01F9               	clrf	??_MTOUCH_Sensor_RawSample_Get+1
  9892  008E  0878               	movf	??_MTOUCH_Sensor_RawSample_Get,w
  9893  008F  00F0               	movwf	___wmul@multiplier
  9894  0090  0879               	movf	??_MTOUCH_Sensor_RawSample_Get+1,w
  9895  0091  00F1               	movwf	___wmul@multiplier+1
  9896  0092  3009               	movlw	9
  9897  0093  00F2               	movwf	___wmul@multiplicand
  9898  0094  3000               	movlw	0
  9899  0095  00F3               	movwf	___wmul@multiplicand+1
  9900  0096  318C  24DE  3180   	fcall	___wmul
  9901  0099  3072               	movlw	114
  9902  009A  00FA               	movwf	??_MTOUCH_Sensor_RawSample_Get+2
  9903  009B  3020               	movlw	32
  9904  009C  00FB               	movwf	??_MTOUCH_Sensor_RawSample_Get+3
  9905  009D  0870               	movf	?___wmul,w
  9906  009E  077A               	addwf	??_MTOUCH_Sensor_RawSample_Get+2,w
  9907  009F  0086               	movwf	6
  9908  00A0  0871               	movf	?___wmul+1,w
  9909  00A1  3D7B               	addwfc	??_MTOUCH_Sensor_RawSample_Get+3,w
  9910  00A2  0087               	movwf	7
  9911  00A3  3F40               	moviw [0]fsr1
  9912  00A4  00F6               	movwf	?_MTOUCH_Sensor_RawSample_Get
  9913  00A5  3F41               	moviw [1]fsr1
  9914  00A6  00F7               	movwf	?_MTOUCH_Sensor_RawSample_Get+1
  9915  00A7  28AA               	goto	l309
  9916  00A8                     l2769:	
  9917  00A8  01F6               	clrf	?_MTOUCH_Sensor_RawSample_Get
  9918  00A9  01F7               	clrf	?_MTOUCH_Sensor_RawSample_Get+1
  9919  00AA                     l309:	
  9920  00AA  0008               	return
  9921  00AB                     __end_of_MTOUCH_Sensor_RawSample_Get:	
  9922                           
  9923                           	psect	text73
  9924  05FE                     __ptext73:	
  9925 ;; *************** function _Button_Deviation_Update *****************
  9926 ;; Defined at:
  9927 ;;		line 476 in file "mcc_generated_files/mtouch/mtouch_button.c"
  9928 ;; Parameters:    Size  Location     Type
  9929 ;;  button          2    0[COMMON] PTR struct .
  9930 ;;		 -> mtouch_button(170), 
  9931 ;; Auto vars:     Size  Location     Type
  9932 ;;  deviation       4    0[BANK0 ] long 
  9933 ;; Return value:  Size  Location     Type
  9934 ;;                  1    wreg      void 
  9935 ;; Registers used:
  9936 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9937 ;; Tracked objects:
  9938 ;;		On entry : 0/0
  9939 ;;		On exit  : 0/0
  9940 ;;		Unchanged: 0/0
  9941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9942 ;;      Params:         2       0       0       0       0       0
  9943 ;;      Locals:         0       4       0       0       0       0
  9944 ;;      Temps:         10       0       0       0       0       0
  9945 ;;      Totals:        12       4       0       0       0       0
  9946 ;;Total ram usage:       16 bytes
  9947 ;; Hardware stack levels used:    1
  9948 ;; This function calls:
  9949 ;;		Nothing
  9950 ;; This function is called by:
  9951 ;;		_Button_Service
  9952 ;; This function uses a non-reentrant model
  9953 ;;
  9954                           
  9955                           
  9956                           ;psect for function _Button_Deviation_Update
  9957  05FE                     _Button_Deviation_Update:	
  9958  05FE                     l2955:	
  9959                           ;incstack = 0
  9960                           ; Regs used in _Button_Deviation_Update: [wreg+fsr1l+fsr1h+status,2+status,0]
  9961                           
  9962                           
  9963                           ;mcc_generated_files/mtouch/mtouch_button.c: 476: static void Button_Deviation_Update(mt
      +                          ouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 477: {;mcc_generated_
      +                          files/mtouch/mtouch_button.c: 478:     int32_t deviation;;mcc_generated_files/mtouch/mto
      +                          uch_button.c: 480:     deviation = (int32_t)((int32_t)(button->reading) - (int32_t)((but
      +                          ton->baseline)>>((uint8_t)4u)));
  9964  05FE  0870               	movf	Button_Deviation_Update@button,w
  9965  05FF  0086               	movwf	6
  9966  0600  0871               	movf	Button_Deviation_Update@button+1,w
  9967  0601  0087               	movwf	7
  9968  0602  3145               	addfsr 1,5
  9969  0603  3F40               	moviw [0]fsr1
  9970  0604  00F2               	movwf	??_Button_Deviation_Update
  9971  0605  3F41               	moviw [1]fsr1
  9972  0606  00F3               	movwf	??_Button_Deviation_Update+1
  9973  0607  3F42               	moviw [2]fsr1
  9974  0608  00F4               	movwf	??_Button_Deviation_Update+2
  9975  0609  3F43               	moviw [3]fsr1
  9976  060A  00F5               	movwf	??_Button_Deviation_Update+3
  9977  060B  3004               	movlw	4
  9978  060C                     u1315:	
  9979  060C  36F5               	lsrf	??_Button_Deviation_Update+3,f
  9980  060D  0CF4               	rrf	??_Button_Deviation_Update+2,f
  9981  060E  0CF3               	rrf	??_Button_Deviation_Update+1,f
  9982  060F  0CF2               	rrf	??_Button_Deviation_Update,f
  9983  0610                     u1310:	
  9984  0610  0B89               	decfsz	9,f
  9985  0611  2E0C               	goto	u1315
  9986  0612  0870               	movf	Button_Deviation_Update@button,w
  9987  0613  0086               	movwf	6
  9988  0614  0871               	movf	Button_Deviation_Update@button+1,w
  9989  0615  0087               	movwf	7
  9990  0616  3143               	addfsr 1,3
  9991  0617  3F40               	moviw [0]fsr1
  9992  0618  00F6               	movwf	??_Button_Deviation_Update+4
  9993  0619  3F41               	moviw [1]fsr1
  9994  061A  00F7               	movwf	??_Button_Deviation_Update+5
  9995  061B  0876               	movf	??_Button_Deviation_Update+4,w
  9996  061C  00F8               	movwf	??_Button_Deviation_Update+6
  9997  061D  0877               	movf	??_Button_Deviation_Update+5,w
  9998  061E  00F9               	movwf	??_Button_Deviation_Update+7
  9999  061F  01FA               	clrf	??_Button_Deviation_Update+8
 10000  0620  01FB               	clrf	??_Button_Deviation_Update+9
 10001  0621  0872               	movf	??_Button_Deviation_Update,w
 10002  0622  02F8               	subwf	??_Button_Deviation_Update+6,f
 10003  0623  0873               	movf	??_Button_Deviation_Update+1,w
 10004  0624  3BF9               	subwfb	??_Button_Deviation_Update+7,f
 10005  0625  0874               	movf	??_Button_Deviation_Update+2,w
 10006  0626  3BFA               	subwfb	??_Button_Deviation_Update+8,f
 10007  0627  0875               	movf	??_Button_Deviation_Update+3,w
 10008  0628  3BFB               	subwfb	??_Button_Deviation_Update+9,f
 10009  0629  087B               	movf	??_Button_Deviation_Update+9,w
 10010  062A  0020               	movlb	0	; select bank0
 10011  062B  00A3               	movwf	Button_Deviation_Update@deviation+3
 10012  062C  087A               	movf	??_Button_Deviation_Update+8,w
 10013  062D  00A2               	movwf	Button_Deviation_Update@deviation+2
 10014  062E  0879               	movf	??_Button_Deviation_Update+7,w
 10015  062F  00A1               	movwf	Button_Deviation_Update@deviation+1
 10016  0630  0878               	movf	??_Button_Deviation_Update+6,w
 10017  0631  00A0               	movwf	Button_Deviation_Update@deviation
 10018                           
 10019                           ;mcc_generated_files/mtouch/mtouch_button.c: 483:     deviation = deviation >> (button->
      +                          scaling);
 10020  0632  0820               	movf	Button_Deviation_Update@deviation,w
 10021  0633  00F2               	movwf	??_Button_Deviation_Update
 10022  0634  0821               	movf	Button_Deviation_Update@deviation+1,w
 10023  0635  00F3               	movwf	??_Button_Deviation_Update+1
 10024  0636  0822               	movf	Button_Deviation_Update@deviation+2,w
 10025  0637  00F4               	movwf	??_Button_Deviation_Update+2
 10026  0638  0823               	movf	Button_Deviation_Update@deviation+3,w
 10027  0639  00F5               	movwf	??_Button_Deviation_Update+3
 10028  063A  0870               	movf	Button_Deviation_Update@button,w
 10029  063B  0086               	movwf	6
 10030  063C  0871               	movf	Button_Deviation_Update@button+1,w
 10031  063D  0087               	movwf	7
 10032  063E  314F               	addfsr 1,15
 10033  063F  0A01               	incf	1,w
 10034  0640  2E45               	goto	u1320
 10035  0641                     u1325:	
 10036  0641  37F5               	asrf	??_Button_Deviation_Update+3,f
 10037  0642  0CF4               	rrf	??_Button_Deviation_Update+2,f
 10038  0643  0CF3               	rrf	??_Button_Deviation_Update+1,f
 10039  0644  0CF2               	rrf	??_Button_Deviation_Update,f
 10040  0645                     u1320:	
 10041  0645  0B89               	decfsz	9,f
 10042  0646  2E41               	goto	u1325
 10043  0647  0875               	movf	??_Button_Deviation_Update+3,w
 10044  0648  00A3               	movwf	Button_Deviation_Update@deviation+3
 10045  0649  0874               	movf	??_Button_Deviation_Update+2,w
 10046  064A  00A2               	movwf	Button_Deviation_Update@deviation+2
 10047  064B  0873               	movf	??_Button_Deviation_Update+1,w
 10048  064C  00A1               	movwf	Button_Deviation_Update@deviation+1
 10049  064D  0872               	movf	??_Button_Deviation_Update,w
 10050  064E  00A0               	movwf	Button_Deviation_Update@deviation
 10051  064F                     l2957:	
 10052                           
 10053                           ;mcc_generated_files/mtouch/mtouch_button.c: 486:     if (deviation > ((0x7f)))
 10054  064F  1BA3               	btfsc	Button_Deviation_Update@deviation+3,7
 10055  0650  2E5F               	goto	u1331
 10056  0651  0823               	movf	Button_Deviation_Update@deviation+3,w
 10057  0652  1D03               	btfss	3,2
 10058  0653  2E60               	goto	u1330
 10059  0654  0822               	movf	Button_Deviation_Update@deviation+2,w
 10060  0655  1D03               	btfss	3,2
 10061  0656  2E60               	goto	u1330
 10062  0657  0821               	movf	Button_Deviation_Update@deviation+1,w
 10063  0658  1D03               	btfss	3,2
 10064  0659  2E60               	goto	u1330
 10065  065A  3080               	movlw	128
 10066  065B  0220               	subwf	Button_Deviation_Update@deviation,w
 10067  065C  1C03               	btfss	3,0
 10068  065D  2E5F               	goto	u1331
 10069  065E  2E60               	goto	u1330
 10070  065F                     u1331:	
 10071  065F  2E68               	goto	l2961
 10072  0660                     u1330:	
 10073  0660                     l2959:	
 10074                           
 10075                           ;mcc_generated_files/mtouch/mtouch_button.c: 487:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 488:         deviation = ((0x7f));
 10076  0660  3000               	movlw	0
 10077  0661  00A3               	movwf	Button_Deviation_Update@deviation+3
 10078  0662  3000               	movlw	0
 10079  0663  00A2               	movwf	Button_Deviation_Update@deviation+2
 10080  0664  3000               	movlw	0
 10081  0665  00A1               	movwf	Button_Deviation_Update@deviation+1
 10082  0666  307F               	movlw	127
 10083  0667  00A0               	movwf	Button_Deviation_Update@deviation
 10084  0668                     l2961:	
 10085                           
 10086                           ;mcc_generated_files/mtouch/mtouch_button.c: 490:     if (deviation < ((-1-0x7f)))
 10087  0668  1FA3               	btfss	Button_Deviation_Update@deviation+3,7
 10088  0669  2E75               	goto	u1341
 10089  066A  3080               	movlw	128
 10090  066B  0220               	subwf	Button_Deviation_Update@deviation,w
 10091  066C  30FF               	movlw	255
 10092  066D  3B21               	subwfb	Button_Deviation_Update@deviation+1,w
 10093  066E  30FF               	movlw	255
 10094  066F  3B22               	subwfb	Button_Deviation_Update@deviation+2,w
 10095  0670  30FF               	movlw	255
 10096  0671  3B23               	subwfb	Button_Deviation_Update@deviation+3,w
 10097  0672  1803               	btfsc	3,0
 10098  0673  2E75               	goto	u1341
 10099  0674  2E76               	goto	u1340
 10100  0675                     u1341:	
 10101  0675  2E7E               	goto	l2965
 10102  0676                     u1340:	
 10103  0676                     l2963:	
 10104                           
 10105                           ;mcc_generated_files/mtouch/mtouch_button.c: 491:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 492:         deviation = ((-1-0x7f));
 10106  0676  30FF               	movlw	255
 10107  0677  00A3               	movwf	Button_Deviation_Update@deviation+3
 10108  0678  30FF               	movlw	255
 10109  0679  00A2               	movwf	Button_Deviation_Update@deviation+2
 10110  067A  30FF               	movlw	255
 10111  067B  00A1               	movwf	Button_Deviation_Update@deviation+1
 10112  067C  3080               	movlw	128
 10113  067D  00A0               	movwf	Button_Deviation_Update@deviation
 10114  067E                     l2965:	
 10115                           
 10116                           ;mcc_generated_files/mtouch/mtouch_button.c: 495:     button->deviation = (mtouch_button
      +                          _deviation_t)deviation;
 10117  067E  0870               	movf	Button_Deviation_Update@button,w
 10118  067F  3E09               	addlw	9
 10119  0680  00F2               	movwf	??_Button_Deviation_Update
 10120  0681  3000               	movlw	0
 10121  0682  3D71               	addwfc	Button_Deviation_Update@button+1,w
 10122  0683  00F3               	movwf	??_Button_Deviation_Update+1
 10123  0684  0872               	movf	??_Button_Deviation_Update,w
 10124  0685  0086               	movwf	6
 10125  0686  0873               	movf	??_Button_Deviation_Update+1,w
 10126  0687  0087               	movwf	7
 10127  0688  0820               	movf	Button_Deviation_Update@deviation,w
 10128  0689  0081               	movwf	1
 10129  068A                     l531:	
 10130  068A  0008               	return
 10131  068B                     __end_of_Button_Deviation_Update:	
 10132                           
 10133                           	psect	text74
 10134  00D4                     __ptext74:	
 10135 ;; *************** function _MTOUCH_Button_isPressed *****************
 10136 ;; Defined at:
 10137 ;;		line 451 in file "mcc_generated_files/mtouch/mtouch_button.c"
 10138 ;; Parameters:    Size  Location     Type
 10139 ;;  name            1    wreg     enum E2696
 10140 ;; Auto vars:     Size  Location     Type
 10141 ;;  name            1   10[COMMON] enum E2696
 10142 ;; Return value:  Size  Location     Type
 10143 ;;                  1    wreg      _Bool 
 10144 ;; Registers used:
 10145 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10146 ;; Tracked objects:
 10147 ;;		On entry : 0/0
 10148 ;;		On exit  : 0/0
 10149 ;;		Unchanged: 0/0
 10150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10151 ;;      Params:         0       0       0       0       0       0
 10152 ;;      Locals:         1       0       0       0       0       0
 10153 ;;      Temps:          4       0       0       0       0       0
 10154 ;;      Totals:         5       0       0       0       0       0
 10155 ;;Total ram usage:        5 bytes
 10156 ;; Hardware stack levels used:    1
 10157 ;; Hardware stack levels required when called:    1
 10158 ;; This function calls:
 10159 ;;		___wmul
 10160 ;; This function is called by:
 10161 ;;		_main
 10162 ;;		_touch_example
 10163 ;;		_MTOUCH_Button_Buttonmask_Get
 10164 ;; This function uses a non-reentrant model
 10165 ;;
 10166                           
 10167                           
 10168                           ;psect for function _MTOUCH_Button_isPressed
 10169  00D4                     _MTOUCH_Button_isPressed:	
 10170                           
 10171                           ;incstack = 0
 10172                           ; Regs used in _MTOUCH_Button_isPressed: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 10173                           ;MTOUCH_Button_isPressed@name stored from wreg
 10174  00D4  00FA               	movwf	MTOUCH_Button_isPressed@name
 10175  00D5                     l3229:	
 10176                           
 10177                           ;mcc_generated_files/mtouch/mtouch_button.c: 451: _Bool MTOUCH_Button_isPressed(enum mto
      +                          uch_button_names name);mcc_generated_files/mtouch/mtouch_button.c: 452: {;mcc_generated_
      +                          files/mtouch/mtouch_button.c: 453:     if(name < 10u)
 10178  00D5  300A               	movlw	10
 10179  00D6  027A               	subwf	MTOUCH_Button_isPressed@name,w
 10180  00D7  1803               	skipnc
 10181  00D8  28DA               	goto	u1621
 10182  00D9  28DB               	goto	u1620
 10183  00DA                     u1621:	
 10184  00DA  28FC               	goto	l3237
 10185  00DB                     u1620:	
 10186  00DB                     l3231:	
 10187                           
 10188                           ;mcc_generated_files/mtouch/mtouch_button.c: 454:         return (_Bool)((mtouch_button[
      +                          name].state == MTOUCH_BUTTON_STATE_pressed) ? 1 : 0);
 10189  00DB  087A               	movf	MTOUCH_Button_isPressed@name,w
 10190  00DC  00F6               	movwf	??_MTOUCH_Button_isPressed
 10191  00DD  01F7               	clrf	??_MTOUCH_Button_isPressed+1
 10192  00DE  0876               	movf	??_MTOUCH_Button_isPressed,w
 10193  00DF  00F0               	movwf	___wmul@multiplier
 10194  00E0  0877               	movf	??_MTOUCH_Button_isPressed+1,w
 10195  00E1  00F1               	movwf	___wmul@multiplier+1
 10196  00E2  3011               	movlw	17
 10197  00E3  00F2               	movwf	___wmul@multiplicand
 10198  00E4  3000               	movlw	0
 10199  00E5  00F3               	movwf	___wmul@multiplicand+1
 10200  00E6  318C  24DE  3180   	fcall	___wmul
 10201  00E9  30C8               	movlw	200
 10202  00EA  00F8               	movwf	??_MTOUCH_Button_isPressed+2
 10203  00EB  3020               	movlw	32
 10204  00EC  00F9               	movwf	??_MTOUCH_Button_isPressed+3
 10205  00ED  0870               	movf	?___wmul,w
 10206  00EE  0778               	addwf	??_MTOUCH_Button_isPressed+2,w
 10207  00EF  0086               	movwf	6
 10208  00F0  0871               	movf	?___wmul+1,w
 10209  00F1  3D79               	addwfc	??_MTOUCH_Button_isPressed+3,w
 10210  00F2  0087               	movwf	7
 10211  00F3  3002               	movlw	2
 10212  00F4  0601               	xorwf	1,w
 10213  00F5  1903               	btfsc	3,2
 10214  00F6  28F8               	goto	u1631
 10215  00F7  28FA               	goto	u1630
 10216  00F8                     u1631:	
 10217  00F8  3001               	movlw	1
 10218  00F9  28FB               	goto	u1640
 10219  00FA                     u1630:	
 10220  00FA  3000               	movlw	0
 10221  00FB                     u1640:	
 10222  00FB  28FD               	goto	l515
 10223  00FC                     l3237:	
 10224                           
 10225                           ;mcc_generated_files/mtouch/mtouch_button.c: 456:         return 0;
 10226  00FC  3000               	movlw	0
 10227  00FD                     l515:	
 10228  00FD  0008               	return
 10229  00FE                     __end_of_MTOUCH_Button_isPressed:	
 10230                           
 10231                           	psect	text75
 10232  0CDE                     __ptext75:	
 10233 ;; *************** function ___wmul *****************
 10234 ;; Defined at:
 10235 ;;		line 15 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/Umul16.c"
 10236 ;; Parameters:    Size  Location     Type
 10237 ;;  multiplier      2    0[COMMON] unsigned int 
 10238 ;;  multiplicand    2    2[COMMON] unsigned int 
 10239 ;; Auto vars:     Size  Location     Type
 10240 ;;  product         2    4[COMMON] unsigned int 
 10241 ;; Return value:  Size  Location     Type
 10242 ;;                  2    0[COMMON] unsigned int 
 10243 ;; Registers used:
 10244 ;;		wreg, status,2, status,0
 10245 ;; Tracked objects:
 10246 ;;		On entry : 0/0
 10247 ;;		On exit  : 0/0
 10248 ;;		Unchanged: 0/0
 10249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10250 ;;      Params:         4       0       0       0       0       0
 10251 ;;      Locals:         2       0       0       0       0       0
 10252 ;;      Temps:          0       0       0       0       0       0
 10253 ;;      Totals:         6       0       0       0       0       0
 10254 ;;Total ram usage:        6 bytes
 10255 ;; Hardware stack levels used:    1
 10256 ;; This function calls:
 10257 ;;		Nothing
 10258 ;; This function is called by:
 10259 ;;		_MTOUCH_Sensor_Initialize
 10260 ;;		_Sensor_Service
 10261 ;;		_Sensor_Acq_ExecuteScan
 10262 ;;		_MTOUCH_Sensor_RawSample_Get
 10263 ;;		_MTOUCH_Sensor_Enable
 10264 ;;		_MTOUCH_Sensor_wasSampled
 10265 ;;		_MTOUCH_Button_Initialize
 10266 ;;		_Button_Service
 10267 ;;		_MTOUCH_Button_Tick
 10268 ;;		_MTOUCH_Button_isPressed
 10269 ;;		_MTOUCH_Sensor_isAnySensorActive
 10270 ;;		_MTOUCH_Sensor_Disable
 10271 ;;		_MTOUCH_Sensor_Oversampling_Get
 10272 ;;		_MTOUCH_Sensor_Oversampling_Set
 10273 ;;		_MTOUCH_Button_Threshold_Set
 10274 ;;		_MTOUCH_Button_Scaling_Set
 10275 ;;		_MTOUCH_Button_Oversampling_Get
 10276 ;;		_MTOUCH_Button_Oversampling_Set
 10277 ;;		_Button_Baseline_Get_helper
 10278 ;; This function uses a non-reentrant model
 10279 ;;
 10280                           
 10281                           
 10282                           ;psect for function ___wmul
 10283  0CDE                     ___wmul:	
 10284  0CDE                     l2685:	
 10285                           ;incstack = 0
 10286                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 10287                           
 10288  0CDE  01F4               	clrf	___wmul@product
 10289  0CDF  01F5               	clrf	___wmul@product+1
 10290  0CE0                     l2687:	
 10291  0CE0  1C70               	btfss	___wmul@multiplier,0
 10292  0CE1  2CE3               	goto	u1001
 10293  0CE2  2CE4               	goto	u1000
 10294  0CE3                     u1001:	
 10295  0CE3  2CE8               	goto	l938
 10296  0CE4                     u1000:	
 10297  0CE4                     l2689:	
 10298  0CE4  0872               	movf	___wmul@multiplicand,w
 10299  0CE5  07F4               	addwf	___wmul@product,f
 10300  0CE6  0873               	movf	___wmul@multiplicand+1,w
 10301  0CE7  3DF5               	addwfc	___wmul@product+1,f
 10302  0CE8                     l938:	
 10303  0CE8  3001               	movlw	1
 10304  0CE9                     u1015:	
 10305  0CE9  35F2               	lslf	___wmul@multiplicand,f
 10306  0CEA  0DF3               	rlf	___wmul@multiplicand+1,f
 10307  0CEB  0B89               	decfsz	9,f
 10308  0CEC  2CE9               	goto	u1015
 10309  0CED                     l2691:	
 10310  0CED  3001               	movlw	1
 10311  0CEE                     u1025:	
 10312  0CEE  36F1               	lsrf	___wmul@multiplier+1,f
 10313  0CEF  0CF0               	rrf	___wmul@multiplier,f
 10314  0CF0  0B89               	decfsz	9,f
 10315  0CF1  2CEE               	goto	u1025
 10316  0CF2                     l2693:	
 10317  0CF2  0870               	movf	___wmul@multiplier,w
 10318  0CF3  0471               	iorwf	___wmul@multiplier+1,w
 10319  0CF4  1D03               	btfss	3,2
 10320  0CF5  2CF7               	goto	u1031
 10321  0CF6  2CF8               	goto	u1030
 10322  0CF7                     u1031:	
 10323  0CF7  2CE0               	goto	l2687
 10324  0CF8                     u1030:	
 10325  0CF8                     l2695:	
 10326  0CF8  0875               	movf	___wmul@product+1,w
 10327  0CF9  00F1               	movwf	?___wmul+1
 10328  0CFA  0874               	movf	___wmul@product,w
 10329  0CFB  00F0               	movwf	?___wmul
 10330  0CFC                     l940:	
 10331  0CFC  0008               	return
 10332  0CFD                     __end_of___wmul:	
 10333                           
 10334                           	psect	text76
 10335  0BD8                     __ptext76:	
 10336 ;; *************** function _EUSART_is_tx_ready *****************
 10337 ;; Defined at:
 10338 ;;		line 94 in file "mcc_generated_files/eusart.c"
 10339 ;; Parameters:    Size  Location     Type
 10340 ;;		None
 10341 ;; Auto vars:     Size  Location     Type
 10342 ;;		None
 10343 ;; Return value:  Size  Location     Type
 10344 ;;                  1    wreg      _Bool 
 10345 ;; Registers used:
 10346 ;;		wreg, status,2
 10347 ;; Tracked objects:
 10348 ;;		On entry : 0/0
 10349 ;;		On exit  : 0/0
 10350 ;;		Unchanged: 0/0
 10351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10352 ;;      Params:         0       0       0       0       0       0
 10353 ;;      Locals:         1       0       0       0       0       0
 10354 ;;      Temps:          0       0       0       0       0       0
 10355 ;;      Totals:         1       0       0       0       0       0
 10356 ;;Total ram usage:        1 bytes
 10357 ;; Hardware stack levels used:    1
 10358 ;; This function calls:
 10359 ;;		Nothing
 10360 ;; This function is called by:
 10361 ;;		_main
 10362 ;; This function uses a non-reentrant model
 10363 ;;
 10364                           
 10365                           
 10366                           ;psect for function _EUSART_is_tx_ready
 10367  0BD8                     _EUSART_is_tx_ready:	
 10368  0BD8                     l3257:	
 10369                           ;incstack = 0
 10370                           ; Regs used in _EUSART_is_tx_ready: [wreg+status,2]
 10371                           
 10372                           
 10373                           ;mcc_generated_files/eusart.c: 96:     return (_Bool)(PIR1bits.TXIF && TXSTAbits.TXEN);
 10374  0BD8  01F0               	clrf	_EUSART_is_tx_ready$1025
 10375  0BD9                     l3259:	
 10376  0BD9  0020               	movlb	0	; select bank0
 10377  0BDA  1E11               	btfss	17,4	;volatile
 10378  0BDB  2BDD               	goto	u1671
 10379  0BDC  2BDE               	goto	u1670
 10380  0BDD                     u1671:	
 10381  0BDD  2BE5               	goto	l3265
 10382  0BDE                     u1670:	
 10383  0BDE                     l3261:	
 10384  0BDE  0023               	movlb	3	; select bank3
 10385  0BDF  1E9E               	btfss	30,5	;volatile
 10386  0BE0  2BE2               	goto	u1681
 10387  0BE1  2BE3               	goto	u1680
 10388  0BE2                     u1681:	
 10389  0BE2  2BE5               	goto	l3265
 10390  0BE3                     u1680:	
 10391  0BE3                     l3263:	
 10392  0BE3  01F0               	clrf	_EUSART_is_tx_ready$1025
 10393  0BE4  0AF0               	incf	_EUSART_is_tx_ready$1025,f
 10394  0BE5                     l3265:	
 10395  0BE5  0870               	movf	_EUSART_is_tx_ready$1025,w
 10396  0BE6                     l630:	
 10397  0BE6  0008               	return
 10398  0BE7                     __end_of_EUSART_is_tx_ready:	
 10399                           
 10400                           	psect	text77
 10401  0B9D                     __ptext77:	
 10402 ;; *************** function _EUSART_Write *****************
 10403 ;; Defined at:
 10404 ;;		line 132 in file "mcc_generated_files/eusart.c"
 10405 ;; Parameters:    Size  Location     Type
 10406 ;;  txData          1    wreg     unsigned char 
 10407 ;; Auto vars:     Size  Location     Type
 10408 ;;  txData          1    0[COMMON] unsigned char 
 10409 ;; Return value:  Size  Location     Type
 10410 ;;                  1    wreg      void 
 10411 ;; Registers used:
 10412 ;;		wreg
 10413 ;; Tracked objects:
 10414 ;;		On entry : 0/0
 10415 ;;		On exit  : 0/0
 10416 ;;		Unchanged: 0/0
 10417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10418 ;;      Params:         0       0       0       0       0       0
 10419 ;;      Locals:         1       0       0       0       0       0
 10420 ;;      Temps:          0       0       0       0       0       0
 10421 ;;      Totals:         1       0       0       0       0       0
 10422 ;;Total ram usage:        1 bytes
 10423 ;; Hardware stack levels used:    1
 10424 ;; This function calls:
 10425 ;;		Nothing
 10426 ;; This function is called by:
 10427 ;;		_main
 10428 ;; This function uses a non-reentrant model
 10429 ;;
 10430                           
 10431                           
 10432                           ;psect for function _EUSART_Write
 10433  0B9D                     _EUSART_Write:	
 10434                           
 10435                           ;incstack = 0
 10436                           ; Regs used in _EUSART_Write: [wreg]
 10437                           ;EUSART_Write@txData stored from wreg
 10438  0B9D  00F0               	movwf	EUSART_Write@txData
 10439  0B9E                     l3269:	
 10440  0B9E                     l649:	
 10441                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
 10442                           
 10443                           
 10444                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
 10445  0B9E  0020               	movlb	0	; select bank0
 10446  0B9F  1E11               	btfss	17,4	;volatile
 10447  0BA0  2BA2               	goto	u1691
 10448  0BA1  2BA3               	goto	u1690
 10449  0BA2                     u1691:	
 10450  0BA2  2B9E               	goto	l649
 10451  0BA3                     u1690:	
 10452  0BA3                     l3271:	
 10453                           
 10454                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
 10455  0BA3  0870               	movf	EUSART_Write@txData,w
 10456  0BA4  0023               	movlb	3	; select bank3
 10457  0BA5  009A               	movwf	26	;volatile
 10458  0BA6                     l652:	
 10459  0BA6  0008               	return
 10460  0BA7                     __end_of_EUSART_Write:	
 10461                           
 10462                           	psect	text78
 10463  003C                     __ptext78:	
 10464 ;; *************** function _DELAY_microseconds *****************
 10465 ;; Defined at:
 10466 ;;		line 33 in file "mcc_generated_files/delay.c"
 10467 ;; Parameters:    Size  Location     Type
 10468 ;;  microseconds    2    0[COMMON] unsigned short 
 10469 ;; Auto vars:     Size  Location     Type
 10470 ;;		None
 10471 ;; Return value:  Size  Location     Type
 10472 ;;                  1    wreg      void 
 10473 ;; Registers used:
 10474 ;;		wreg, status,2, status,0
 10475 ;; Tracked objects:
 10476 ;;		On entry : 0/0
 10477 ;;		On exit  : 0/0
 10478 ;;		Unchanged: 0/0
 10479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10480 ;;      Params:         2       0       0       0       0       0
 10481 ;;      Locals:         0       0       0       0       0       0
 10482 ;;      Temps:          0       0       0       0       0       0
 10483 ;;      Totals:         2       0       0       0       0       0
 10484 ;;Total ram usage:        2 bytes
 10485 ;; Hardware stack levels used:    1
 10486 ;; This function calls:
 10487 ;;		Nothing
 10488 ;; This function is called by:
 10489 ;;		_main
 10490 ;; This function uses a non-reentrant model
 10491 ;;
 10492                           
 10493                           
 10494                           ;psect for function _DELAY_microseconds
 10495  003C                     _DELAY_microseconds:	
 10496  003C                     l3277:	
 10497                           ;incstack = 0
 10498                           ; Regs used in _DELAY_microseconds: [wreg+status,2+status,0]
 10499                           
 10500                           
 10501                           ;mcc_generated_files/delay.c: 34:     while( microseconds >= 32)
 10502  003C  2845               	goto	l782
 10503  003D                     l3279:	
 10504                           
 10505                           ;mcc_generated_files/delay.c: 35:     {;mcc_generated_files/delay.c: 36:         _delay(
      +                          (unsigned long)((32)*(32000000/4000000.0)));
 10506  003D  3055               	movlw	85
 10507  003E                     u2187:	
 10508  003E  0B89               	decfsz	9,f
 10509  003F  283E               	goto	u2187
 10510  0040  0000               	nop
 10511                           
 10512                           ;mcc_generated_files/delay.c: 37:         microseconds -= 32;
 10513  0041  3020               	movlw	32
 10514  0042  02F0               	subwf	DELAY_microseconds@microseconds,f
 10515  0043  3000               	movlw	0
 10516  0044  3BF1               	subwfb	DELAY_microseconds@microseconds+1,f
 10517  0045                     l782:	
 10518                           ;mcc_generated_files/delay.c: 38:     }
 10519                           
 10520                           
 10521                           ;mcc_generated_files/delay.c: 34:     while( microseconds >= 32)
 10522  0045  3000               	movlw	0
 10523  0046  0271               	subwf	DELAY_microseconds@microseconds+1,w
 10524  0047  3020               	movlw	32
 10525  0048  1903               	skipnz
 10526  0049  0270               	subwf	DELAY_microseconds@microseconds,w
 10527  004A  1803               	skipnc
 10528  004B  284D               	goto	u1701
 10529  004C  284E               	goto	u1700
 10530  004D                     u1701:	
 10531  004D  283D               	goto	l3279
 10532  004E                     u1700:	
 10533  004E  2853               	goto	l3281
 10534  004F                     l786:	
 10535                           
 10536                           ;mcc_generated_files/delay.c: 41:     {;mcc_generated_files/delay.c: 42:         _delay(
      +                          (unsigned long)((1)*(32000000/4000000.0)));
 10537  004F  3200               	nop2	;2 cycle nop
 10538  0050  3200               	nop2	;2 cycle nop
 10539  0051  3200               	nop2	;2 cycle nop
 10540  0052  3200               	nop2	;2 cycle nop
 10541  0053                     l3281:	
 10542                           
 10543                           ;mcc_generated_files/delay.c: 40:     while(microseconds--)
 10544  0053  3001               	movlw	1
 10545  0054  02F0               	subwf	DELAY_microseconds@microseconds,f
 10546  0055  3000               	movlw	0
 10547  0056  3BF1               	subwfb	DELAY_microseconds@microseconds+1,f
 10548  0057  0A70               	incf	DELAY_microseconds@microseconds,w
 10549  0058  1D03               	skipz
 10550  0059  285E               	goto	u1711
 10551  005A  0A71               	incf	DELAY_microseconds@microseconds+1,w
 10552  005B  1D03               	btfss	3,2
 10553  005C  285E               	goto	u1711
 10554  005D  285F               	goto	u1710
 10555  005E                     u1711:	
 10556  005E  284F               	goto	l786
 10557  005F                     u1710:	
 10558  005F                     l788:	
 10559  005F  0008               	return
 10560  0060                     __end_of_DELAY_microseconds:	
 10561  007E                     btemp	set	126	;btemp
 10562  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    170
    Data        106
    BSS         20
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     23      59
    BANK1            28      0       0
    BANK2             0      0       0
    BANK3             0      0       0
    BANK4             0      0       0

Pointer List with Targets:

    Button_Service$1990$0	PTR struct . size(2) Largest target is 170
		 -> mtouch_button(BIGRAM[170]), 

    Button_Service$1990	PTR FTN(PTR struct .,)void  size(2) Largest target is 1
		 -> Button_State_Pressed(), Button_State_NotPressed(), Button_State_Initializing(), 

    Button_StateMachine$0	PTR struct . size(2) Largest target is 170
		 -> mtouch_button(BIGRAM[170]), 

    memcpy@d1	PTR void  size(2) Largest target is 170
		 -> mtouch_button(BIGRAM[170]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 170
		 -> mtouch_button(BIGRAM[170]), 

    memcpy@s1	PTR const void  size(2) Largest target is 170
		 -> mtouch_button_init(CODE[170]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 170
		 -> mtouch_button_init(CODE[170]), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 

    Button_Baseline_Update@button	PTR struct . size(2) Largest target is 170
		 -> mtouch_button(BIGRAM[170]), 

    Button_Baseline_Initialize@button	PTR struct . size(2) Largest target is 170
		 -> mtouch_button(BIGRAM[170]), 

    Button_Reading_Update_Helper@button	PTR struct . size(2) Largest target is 170
		 -> mtouch_button(BIGRAM[170]), 

    Button_Reading_Update@button	PTR struct . size(2) Largest target is 170
		 -> mtouch_button(BIGRAM[170]), 

    Button_Deviation_Update@button	PTR struct . size(2) Largest target is 170
		 -> mtouch_button(BIGRAM[170]), 

    Button_Tick_helper@button	PTR struct . size(2) Largest target is 170
		 -> mtouch_button(BIGRAM[170]), 

    Button_State_Pressed@button	PTR struct . size(2) Largest target is 170
		 -> mtouch_button(BIGRAM[170]), 

    Button_State_NotPressed@button	PTR struct . size(2) Largest target is 170
		 -> mtouch_button(BIGRAM[170]), 

    Button_State_Initializing@button	PTR struct . size(2) Largest target is 170
		 -> mtouch_button(BIGRAM[170]), 

    Button_Service@button	PTR struct . size(2) Largest target is 170
		 -> mtouch_button(BIGRAM[170]), 

    sp__memcpy	PTR void  size(2) Largest target is 170
		 -> mtouch_button(BIGRAM[170]), 

    MTOUCH_Button_Initialize@button	PTR struct . size(2) Largest target is 170
		 -> mtouch_button(BIGRAM[170]), 

    Button_StateMachine	PTR FTN(PTR struct .,)void [3] size(2) Largest target is 1
		 -> Button_State_Pressed(), Button_State_NotPressed(), Button_State_Initializing(), 

    callback_notPressed	PTR FTN(enum E2696,)void  size(2) Largest target is 1
		 -> Button_DefaultCallback(), 

    callback_pressed	PTR FTN(enum E2696,)void  size(2) Largest target is 1
		 -> Button_DefaultCallback(), 

    Sensor_setSampled@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_9(), MTOUCH_CVD_ScanB_8(), MTOUCH_CVD_ScanB_7(), MTOUCH_CVD_ScanB_6(), 
		 -> MTOUCH_CVD_ScanB_5(), MTOUCH_CVD_ScanB_4(), MTOUCH_CVD_ScanB_3(), MTOUCH_CVD_ScanB_2(), 
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_setSampled@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_9(), MTOUCH_CVD_ScanA_8(), MTOUCH_CVD_ScanA_7(), MTOUCH_CVD_ScanA_6(), 
		 -> MTOUCH_CVD_ScanA_5(), MTOUCH_CVD_ScanA_4(), MTOUCH_CVD_ScanA_3(), MTOUCH_CVD_ScanA_2(), 
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_setSampled@sensor	PTR struct . size(2) Largest target is 90
		 -> mtouch_sensor(BIGRAM[90]), 

    Sensor_Sampled_Reset@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_9(), MTOUCH_CVD_ScanB_8(), MTOUCH_CVD_ScanB_7(), MTOUCH_CVD_ScanB_6(), 
		 -> MTOUCH_CVD_ScanB_5(), MTOUCH_CVD_ScanB_4(), MTOUCH_CVD_ScanB_3(), MTOUCH_CVD_ScanB_2(), 
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_Sampled_Reset@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_9(), MTOUCH_CVD_ScanA_8(), MTOUCH_CVD_ScanA_7(), MTOUCH_CVD_ScanA_6(), 
		 -> MTOUCH_CVD_ScanA_5(), MTOUCH_CVD_ScanA_4(), MTOUCH_CVD_ScanA_3(), MTOUCH_CVD_ScanA_2(), 
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_Sampled_Reset@sensor	PTR struct . size(2) Largest target is 90
		 -> mtouch_sensor(BIGRAM[90]), 

    MTOUCH_Sensor_Sampled_ResetAll@sensor	PTR struct . size(2) Largest target is 90
		 -> mtouch_sensor(BIGRAM[90]), 

    Sensor_setInactive@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_9(), MTOUCH_CVD_ScanB_8(), MTOUCH_CVD_ScanB_7(), MTOUCH_CVD_ScanB_6(), 
		 -> MTOUCH_CVD_ScanB_5(), MTOUCH_CVD_ScanB_4(), MTOUCH_CVD_ScanB_3(), MTOUCH_CVD_ScanB_2(), 
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_setInactive@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_9(), MTOUCH_CVD_ScanA_8(), MTOUCH_CVD_ScanA_7(), MTOUCH_CVD_ScanA_6(), 
		 -> MTOUCH_CVD_ScanA_5(), MTOUCH_CVD_ScanA_4(), MTOUCH_CVD_ScanA_3(), MTOUCH_CVD_ScanA_2(), 
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_setInactive@sensor	PTR struct . size(2) Largest target is 90
		 -> mtouch_sensor(BIGRAM[90]), 

    Sensor_setActive@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_9(), MTOUCH_CVD_ScanB_8(), MTOUCH_CVD_ScanB_7(), MTOUCH_CVD_ScanB_6(), 
		 -> MTOUCH_CVD_ScanB_5(), MTOUCH_CVD_ScanB_4(), MTOUCH_CVD_ScanB_3(), MTOUCH_CVD_ScanB_2(), 
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_setActive@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_9(), MTOUCH_CVD_ScanA_8(), MTOUCH_CVD_ScanA_7(), MTOUCH_CVD_ScanA_6(), 
		 -> MTOUCH_CVD_ScanA_5(), MTOUCH_CVD_ScanA_4(), MTOUCH_CVD_ScanA_3(), MTOUCH_CVD_ScanA_2(), 
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_setActive@sensor	PTR struct . size(2) Largest target is 90
		 -> mtouch_sensor(BIGRAM[90]), 

    Sensor_isEnabled@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_9(), MTOUCH_CVD_ScanB_8(), MTOUCH_CVD_ScanB_7(), MTOUCH_CVD_ScanB_6(), 
		 -> MTOUCH_CVD_ScanB_5(), MTOUCH_CVD_ScanB_4(), MTOUCH_CVD_ScanB_3(), MTOUCH_CVD_ScanB_2(), 
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_isEnabled@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_9(), MTOUCH_CVD_ScanA_8(), MTOUCH_CVD_ScanA_7(), MTOUCH_CVD_ScanA_6(), 
		 -> MTOUCH_CVD_ScanA_5(), MTOUCH_CVD_ScanA_4(), MTOUCH_CVD_ScanA_3(), MTOUCH_CVD_ScanA_2(), 
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_isEnabled@sensor	PTR struct . size(2) Largest target is 90
		 -> mtouch_sensor(BIGRAM[90]), 

    Sensor_setScanFunction@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_9(), MTOUCH_CVD_ScanB_8(), MTOUCH_CVD_ScanB_7(), MTOUCH_CVD_ScanB_6(), 
		 -> MTOUCH_CVD_ScanB_5(), MTOUCH_CVD_ScanB_4(), MTOUCH_CVD_ScanB_3(), MTOUCH_CVD_ScanB_2(), 
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_setScanFunction@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_9(), MTOUCH_CVD_ScanA_8(), MTOUCH_CVD_ScanA_7(), MTOUCH_CVD_ScanA_6(), 
		 -> MTOUCH_CVD_ScanA_5(), MTOUCH_CVD_ScanA_4(), MTOUCH_CVD_ScanA_3(), MTOUCH_CVD_ScanA_2(), 
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_setScanFunction@sensor	PTR struct . size(2) Largest target is 90
		 -> mtouch_sensor(BIGRAM[90]), 

    Sensor_RawSample_Update@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_9(), MTOUCH_CVD_ScanB_8(), MTOUCH_CVD_ScanB_7(), MTOUCH_CVD_ScanB_6(), 
		 -> MTOUCH_CVD_ScanB_5(), MTOUCH_CVD_ScanB_4(), MTOUCH_CVD_ScanB_3(), MTOUCH_CVD_ScanB_2(), 
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_RawSample_Update@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_9(), MTOUCH_CVD_ScanA_8(), MTOUCH_CVD_ScanA_7(), MTOUCH_CVD_ScanA_6(), 
		 -> MTOUCH_CVD_ScanA_5(), MTOUCH_CVD_ScanA_4(), MTOUCH_CVD_ScanA_3(), MTOUCH_CVD_ScanA_2(), 
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_RawSample_Update@sensor	PTR struct . size(2) Largest target is 90
		 -> mtouch_sensor(BIGRAM[90]), 

    Sensor_Acq_ExecutePacket@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_9(), MTOUCH_CVD_ScanB_8(), MTOUCH_CVD_ScanB_7(), MTOUCH_CVD_ScanB_6(), 
		 -> MTOUCH_CVD_ScanB_5(), MTOUCH_CVD_ScanB_4(), MTOUCH_CVD_ScanB_3(), MTOUCH_CVD_ScanB_2(), 
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_Acq_ExecutePacket@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_9(), MTOUCH_CVD_ScanA_8(), MTOUCH_CVD_ScanA_7(), MTOUCH_CVD_ScanA_6(), 
		 -> MTOUCH_CVD_ScanA_5(), MTOUCH_CVD_ScanA_4(), MTOUCH_CVD_ScanA_3(), MTOUCH_CVD_ScanA_2(), 
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_Acq_ExecutePacket@sensor	PTR struct . size(2) Largest target is 90
		 -> mtouch_sensor(BIGRAM[90]), 

    Sensor_Acquisition@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_9(), MTOUCH_CVD_ScanB_8(), MTOUCH_CVD_ScanB_7(), MTOUCH_CVD_ScanB_6(), 
		 -> MTOUCH_CVD_ScanB_5(), MTOUCH_CVD_ScanB_4(), MTOUCH_CVD_ScanB_3(), MTOUCH_CVD_ScanB_2(), 
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_Acquisition@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_9(), MTOUCH_CVD_ScanA_8(), MTOUCH_CVD_ScanA_7(), MTOUCH_CVD_ScanA_6(), 
		 -> MTOUCH_CVD_ScanA_5(), MTOUCH_CVD_ScanA_4(), MTOUCH_CVD_ScanA_3(), MTOUCH_CVD_ScanA_2(), 
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_Acquisition@sensor	PTR struct . size(2) Largest target is 90
		 -> mtouch_sensor(BIGRAM[90]), 

    Sensor_Service@sensor	PTR struct . size(2) Largest target is 90
		 -> mtouch_sensor(BIGRAM[90]), 

    S144$scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_9(), MTOUCH_CVD_ScanB_8(), MTOUCH_CVD_ScanB_7(), MTOUCH_CVD_ScanB_6(), 
		 -> MTOUCH_CVD_ScanB_5(), MTOUCH_CVD_ScanB_4(), MTOUCH_CVD_ScanB_3(), MTOUCH_CVD_ScanB_2(), 
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    mtouch_sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_9(), MTOUCH_CVD_ScanB_8(), MTOUCH_CVD_ScanB_7(), MTOUCH_CVD_ScanB_6(), 
		 -> MTOUCH_CVD_ScanB_5(), MTOUCH_CVD_ScanB_4(), MTOUCH_CVD_ScanB_3(), MTOUCH_CVD_ScanB_2(), 
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    S144$scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_9(), MTOUCH_CVD_ScanA_8(), MTOUCH_CVD_ScanA_7(), MTOUCH_CVD_ScanA_6(), 
		 -> MTOUCH_CVD_ScanA_5(), MTOUCH_CVD_ScanA_4(), MTOUCH_CVD_ScanA_3(), MTOUCH_CVD_ScanA_2(), 
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    mtouch_sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_9(), MTOUCH_CVD_ScanA_8(), MTOUCH_CVD_ScanA_7(), MTOUCH_CVD_ScanA_6(), 
		 -> MTOUCH_CVD_ScanA_5(), MTOUCH_CVD_ScanA_4(), MTOUCH_CVD_ScanA_3(), MTOUCH_CVD_ScanA_2(), 
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_scanB	PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_9(), MTOUCH_CVD_ScanB_8(), MTOUCH_CVD_ScanB_7(), MTOUCH_CVD_ScanB_6(), 
		 -> MTOUCH_CVD_ScanB_5(), MTOUCH_CVD_ScanB_4(), MTOUCH_CVD_ScanB_3(), MTOUCH_CVD_ScanB_2(), 
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_scanA	PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_9(), MTOUCH_CVD_ScanA_8(), MTOUCH_CVD_ScanA_7(), MTOUCH_CVD_ScanA_6(), 
		 -> MTOUCH_CVD_ScanA_5(), MTOUCH_CVD_ScanA_4(), MTOUCH_CVD_ScanA_3(), MTOUCH_CVD_ScanA_2(), 
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    callback_sampled	PTR FTN(enum E2470,)void  size(2) Largest target is 1
		 -> Sensor_DefaultCallback(), 


Critical Paths under _main in COMMON

    _MTOUCH_Initialize->_MTOUCH_Button_InitializeAll
    _MTOUCH_Initialize->_MTOUCH_Sensor_InitializeAll
    _MTOUCH_Sensor_InitializeAll->_MTOUCH_Sensor_Initialize
    _MTOUCH_Sensor_Initialize->_MTOUCH_Sensor_Enable
    _MTOUCH_Sensor_Enable->___wmul
    _MTOUCH_Button_InitializeAll->_MTOUCH_Button_Initialize
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _MTOUCH_Service_Mainloop->_MTOUCH_Button_ServiceAll
    _MTOUCH_Tick->_MTOUCH_Button_Tick
    _MTOUCH_Button_Tick->_Button_Tick_helper
    _Button_Tick_helper->___wmul
    _MTOUCH_Sensor_Sampled_ResetAll->_Sensor_Sampled_Reset
    _Sensor_Sampled_Reset->___wmul
    _Sensor_Acquisition->_Sensor_Acq_ExecutePacket
    _Sensor_Acq_ExecutePacket->_Sensor_Acq_ExecuteScan
    _Sensor_Acq_ExecuteScan->___wmul
    _Button_Service->_MTOUCH_Button_Initialize
    _MTOUCH_Sensor_wasSampled->___wmul
    _Button_State_Pressed->_MTOUCH_Button_Initialize
    _Button_State_NotPressed->_MTOUCH_Button_Initialize
    _MTOUCH_Button_Initialize->___wmul
    _Button_Baseline_Initialize->_MTOUCH_Sensor_RawSample_Get
    _Button_Reading_Update_Helper->_MTOUCH_Sensor_RawSample_Get
    _MTOUCH_Sensor_RawSample_Get->___wmul
    _MTOUCH_Button_isPressed->___wmul

Critical Paths under _main in BANK0

    _main->_MTOUCH_Service_Mainloop
    _MTOUCH_Sensor_InitializeAll->_MTOUCH_Sensor_Initialize
    _MTOUCH_Service_Mainloop->_MTOUCH_Button_ServiceAll
    _MTOUCH_Tick->_MTOUCH_Button_Tick
    _MTOUCH_Sensor_SampleAll->_Sensor_Service
    _Sensor_Service->_Sensor_Acquisition
    _Sensor_Acquisition->_Sensor_Acq_ExecutePacket
    _MTOUCH_Button_ServiceAll->_Button_Service
    _Button_Service->_Button_State_Initializing
    _Button_State_Initializing->_Button_Baseline_Initialize
    _Button_Reading_Update->_Button_Reading_Update_Helper

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   64835
                                             21 BANK0      2     2      0
                 _DELAY_microseconds
                       _EUSART_Write
                 _EUSART_is_tx_ready
            _MTOUCH_Button_isPressed
            _MTOUCH_Service_Mainloop
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0   13702
                  _EUSART_Initialize
                  _MTOUCH_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Initialize                                    0     0      0   13408
        _MTOUCH_Button_InitializeAll
        _MTOUCH_Sensor_InitializeAll
     _MTOUCH_Sensor_Sampled_ResetAll
      _MTOUCH_Sensor_Scan_Initialize
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Sensor_InitializeAll                          2     2      0    8506
                                             12 COMMON     2     2      0
           _MTOUCH_Sensor_Initialize
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Sensor_Initialize                             5     5      0    8438
                                             11 COMMON     1     1      0
                                              0 BANK0      4     4      0
               _MTOUCH_Sensor_Enable
               _Sensor_Sampled_Reset
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Sensor_Enable                                 5     5      0    4132
                                              6 COMMON     5     5      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Button_InitializeAll                          2     2      0    4660
                                             13 COMMON     1     1      0
                                              0 BANK0      1     1      0
           _MTOUCH_Button_Initialize
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              12     6      6     371
                                              0 COMMON    12     6      6
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _MTOUCH_Service_Mainloop                              1     1      0   46744
                                             20 BANK0      1     1      0
           _MTOUCH_Button_ServiceAll
            _MTOUCH_Sensor_SampleAll
     _MTOUCH_Sensor_Sampled_ResetAll
                        _MTOUCH_Tick
                 _MTOUCH_needReburst
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_needReburst                                   1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Tick                                          0     0      0    4320
                 _MTOUCH_Button_Tick
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Button_Tick                                   5     5      0    4320
                                             10 COMMON     4     4      0
                                              0 BANK0      1     1      0
                 _Button_Tick_helper
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _Button_Tick_helper                                   4     2      2     164
                                              6 COMMON     4     2      2
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Sensor_Sampled_ResetAll                       4     4      0     242
                                              8 COMMON     4     4      0
               _Sensor_Sampled_Reset
 ---------------------------------------------------------------------------------
 (4) _Sensor_Sampled_Reset                                 2     0      2     174
                                              6 COMMON     2     0      2
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Sensor_SampleAll                              2     2      0   10102
                                             17 BANK0      2     2      0
                     _Sensor_Service
 ---------------------------------------------------------------------------------
 (3) _Sensor_Service                                       8     8      0   10034
                                              9 BANK0      8     8      0
                 _Sensor_Acquisition
             _Sensor_DefaultCallback
            _Sensor_RawSample_Update
                   _Sensor_isEnabled
                  _Sensor_setSampled
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _Sensor_setSampled                                    2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _Sensor_RawSample_Update                              2     0      2     120
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _Sensor_DefaultCallback                               1     0      1      53
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (4) _Sensor_Acquisition                                   4     2      2    5301
                                              5 BANK0      4     2      2
           _Sensor_Acq_ExecutePacket
                   _Sensor_isEnabled
                   _Sensor_setActive
                 _Sensor_setInactive
                                _abs
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (5) _Sensor_setInactive                                   2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) _Sensor_setActive                                     2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _Sensor_isEnabled                                     2     0      2     196
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) _Sensor_Acq_ExecutePacket                             7     5      2    4557
                                             12 COMMON     2     0      2
                                              0 BANK0      5     5      0
                       _MTOUCH_Delay
                      _MTOUCH_Random
      _MTOUCH_Sensor_Scan_Initialize
             _Sensor_Acq_ExecuteScan
             _Sensor_setScanFunction
 ---------------------------------------------------------------------------------
 (6) _Sensor_setScanFunction                               2     0      2     120
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _Sensor_Acq_ExecuteScan                               6     6      0    4156
                                              6 COMMON     6     6      0
                 _MTOUCH_CVD_ScanA_0 *
                 _MTOUCH_CVD_ScanA_1 *
                 _MTOUCH_CVD_ScanA_2 *
                 _MTOUCH_CVD_ScanA_3 *
                 _MTOUCH_CVD_ScanA_4 *
                 _MTOUCH_CVD_ScanA_5 *
                 _MTOUCH_CVD_ScanA_6 *
                 _MTOUCH_CVD_ScanA_7 *
                 _MTOUCH_CVD_ScanA_8 *
                 _MTOUCH_CVD_ScanA_9 *
                 _MTOUCH_CVD_ScanB_0 *
                 _MTOUCH_CVD_ScanB_1 *
                 _MTOUCH_CVD_ScanB_2 *
                 _MTOUCH_CVD_ScanB_3 *
                 _MTOUCH_CVD_ScanB_4 *
                 _MTOUCH_CVD_ScanB_5 *
                 _MTOUCH_CVD_ScanB_6 *
                 _MTOUCH_CVD_ScanB_7 *
                 _MTOUCH_CVD_ScanB_8 *
                 _MTOUCH_CVD_ScanB_9 *
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanB_9                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanB_8                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanB_7                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanB_6                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanB_5                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanB_4                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanB_3                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanB_2                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanB_1                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanB_0                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanA_9                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanA_8                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanA_7                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanA_6                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanA_5                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanA_4                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanA_3                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanA_2                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanA_1                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanA_0                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Sensor_Scan_Initialize                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _MTOUCH_Random                                        1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _MTOUCH_Delay                                         2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Button_ServiceAll                             2     2      0   32057
                                             13 COMMON     1     1      0
                                             19 BANK0      1     1      0
                     _Button_Service
 ---------------------------------------------------------------------------------
 (3) _Button_Service                                       7     7      0   31989
                                             12 BANK0      7     7      0
            _Button_Deviation_Update
              _Button_Reading_Update
          _Button_State_Initializing *
            _Button_State_NotPressed *
               _Button_State_Pressed *
           _MTOUCH_Button_Initialize
         _MTOUCH_Sensor_isCalibrated
           _MTOUCH_Sensor_wasSampled
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Sensor_wasSampled                             5     5      0    4132
                                              6 COMMON     5     5      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Sensor_isCalibrated                           1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _Button_State_Pressed                                 4     2      2    4675
                                              6 BANK0      4     2      2
             _Button_DefaultCallback
           _MTOUCH_Button_Initialize
 ---------------------------------------------------------------------------------
 (4) _Button_State_NotPressed                              4     2      2    5060
                                              6 BANK0      4     2      2
             _Button_Baseline_Update
             _Button_DefaultCallback
           _MTOUCH_Button_Initialize
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Button_Initialize                             7     7      0    4221
                                              6 COMMON     7     7      0
            _MTOUCH_Sensor_Calibrate
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Sensor_Calibrate                              1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _Button_DefaultCallback                               1     0      1     159
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (4) _Button_State_Initializing                            6     4      2    4800
                                              6 BANK0      6     4      2
         _Button_Baseline_Initialize
             _Button_Baseline_Update
 ---------------------------------------------------------------------------------
 (5) _Button_Baseline_Update                               8     6      2     328
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (5) _Button_Baseline_Initialize                           6     4      2    4274
                                              0 BANK0      6     4      2
        _MTOUCH_Sensor_RawSample_Get
 ---------------------------------------------------------------------------------
 (4) _Button_Reading_Update                                2     0      2    4558
                                              4 BANK0      2     0      2
       _Button_Reading_Update_Helper
 ---------------------------------------------------------------------------------
 (5) _Button_Reading_Update_Helper                         4     2      2    4438
                                              0 BANK0      4     2      2
        _MTOUCH_Sensor_RawSample_Get
 ---------------------------------------------------------------------------------
 (6) _MTOUCH_Sensor_RawSample_Get                          7     5      2    4132
                                              6 COMMON     7     5      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _Button_Deviation_Update                             16    14      2     256
                                              0 COMMON    12    10      2
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _MTOUCH_Button_isPressed                              5     5      0    4132
                                              6 COMMON     5     5      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    4088
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _EUSART_is_tx_ready                                   1     1      0      24
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DELAY_microseconds                                   2     0      2     121
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DELAY_microseconds
   _EUSART_Write
   _EUSART_is_tx_ready
   _MTOUCH_Button_isPressed
     ___wmul
   _MTOUCH_Service_Mainloop
     _MTOUCH_Button_ServiceAll
       _Button_Service
         _Button_Deviation_Update
         _Button_Reading_Update
           _Button_Reading_Update_Helper
             _MTOUCH_Sensor_RawSample_Get
               ___wmul
         _Button_State_Initializing *
           _Button_Baseline_Initialize
             _MTOUCH_Sensor_RawSample_Get
               ___wmul
           _Button_Baseline_Update
         _Button_State_NotPressed *
           _Button_Baseline_Update
           _Button_DefaultCallback
           _MTOUCH_Button_Initialize
             _MTOUCH_Sensor_Calibrate
             ___wmul
         _Button_State_Pressed *
           _Button_DefaultCallback
           _MTOUCH_Button_Initialize
             _MTOUCH_Sensor_Calibrate
             ___wmul
         _MTOUCH_Button_Initialize *
           _MTOUCH_Sensor_Calibrate
           ___wmul
         _MTOUCH_Sensor_isCalibrated *
         _MTOUCH_Sensor_wasSampled *
           ___wmul
         ___wmul *
     _MTOUCH_Sensor_SampleAll
       _Sensor_Service
         _Sensor_Acquisition
           _Sensor_Acq_ExecutePacket
             _MTOUCH_Delay
             _MTOUCH_Random
             _MTOUCH_Sensor_Scan_Initialize
             _Sensor_Acq_ExecuteScan
               _MTOUCH_CVD_ScanA_0 *
               _MTOUCH_CVD_ScanA_1 *
               _MTOUCH_CVD_ScanA_2 *
               _MTOUCH_CVD_ScanA_3 *
               _MTOUCH_CVD_ScanA_4 *
               _MTOUCH_CVD_ScanA_5 *
               _MTOUCH_CVD_ScanA_6 *
               _MTOUCH_CVD_ScanA_7 *
               _MTOUCH_CVD_ScanA_8 *
               _MTOUCH_CVD_ScanA_9 *
               _MTOUCH_CVD_ScanB_0 *
               _MTOUCH_CVD_ScanB_1 *
               _MTOUCH_CVD_ScanB_2 *
               _MTOUCH_CVD_ScanB_3 *
               _MTOUCH_CVD_ScanB_4 *
               _MTOUCH_CVD_ScanB_5 *
               _MTOUCH_CVD_ScanB_6 *
               _MTOUCH_CVD_ScanB_7 *
               _MTOUCH_CVD_ScanB_8 *
               _MTOUCH_CVD_ScanB_9 *
               ___wmul *
             _Sensor_setScanFunction
           _Sensor_isEnabled
           _Sensor_setActive
           _Sensor_setInactive
           _abs
         _Sensor_DefaultCallback
         _Sensor_RawSample_Update
         _Sensor_isEnabled
         _Sensor_setSampled
         ___wmul
     _MTOUCH_Sensor_Sampled_ResetAll
       _Sensor_Sampled_Reset
         ___wmul (ARG)
     _MTOUCH_Tick
       _MTOUCH_Button_Tick
         _Button_Tick_helper
           ___wmul (ARG)
         ___wmul
     _MTOUCH_needReburst
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _MTOUCH_Initialize
       _MTOUCH_Button_InitializeAll
         _MTOUCH_Button_Initialize
           _MTOUCH_Sensor_Calibrate
           ___wmul
         _memcpy
       _MTOUCH_Sensor_InitializeAll
         _MTOUCH_Sensor_Initialize
           _MTOUCH_Sensor_Enable
             ___wmul
           _Sensor_Sampled_Reset
             ___wmul (ARG)
           ___wmul
       _MTOUCH_Sensor_Sampled_ResetAll
         _Sensor_Sampled_Reset
           ___wmul (ARG)
       _MTOUCH_Sensor_Scan_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      49       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     17      3B       6       73.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               1C      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK2                0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK3                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK4                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      49      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue May 12 19:47:02 2020

                 ?_MTOUCH_Sensor_RawSample_Get 0076                                              l7 0C75  
                                  __CFG_CP$OFF 0000                         _Sensor_setScanFunction 0C4C  
                                           l52 0D1B                                             l70 0D7B  
                                           l47 0BD7                                             l64 0D5B  
                                           l56 0B65                                             l73 0EBB  
                                           l82 0DBB                                             l67 0E9B  
                                           l91 0F1B                                             l59 0B61  
                                           l76 0D9B                                             l85 0EFB  
                                           l94 0DFB                                             l79 0EDB  
                                           l88 0DDB                                             l97 0F3B  
              __size_of_Sensor_Acq_ExecuteScan 0069                     __end_of_Sensor_setInactive 0B8F  
                          ___wmul@multiplicand 0072                                            LATA 010C  
                                  __CFG_LVP$ON 0000                                            LATB 010D  
                                          l100 0E1B                                            l103 0F5B  
                                          l112 0E5B                                            l121 0E7B  
                                          l106 0E3B                                            l115 0F9B  
                                          l109 0F7B                                            l118 0D3B  
                                          l231 0C06                                            l240 0CC1  
                                          l234 0B6E                                            l226 003B  
                                          l315 0CDD                                            l324 0C5F  
                                          l332 0FDD                                            l309 00AA  
                                          l341 0BF6                                            l318 0004  
                                          l272 02A1                                            l264 0586  
                                          l345 0B87                                            l441 0FBC  
                                          l282 0345                                            l258 0556  
                                          l515 00FD                                            l531 068A  
                                          l355 0B5F                                            l451 04A4  
                                          l371 0B9C                                            l363 0180  
                                          l436 01F7                                            l292 0C4B  
                                          l284 034A                                            l348 0B8E  
                                          l700 0BAD                                            l630 0BE6  
                                          l358 0B5D                                            l446 0C38  
                                          l286 035F                                            l374 0B95  
                                          l367 0083                                            l287 0360  
                                          l703 0BB2                                            l552 024C  
                                          l560 071A                                            l472 05FD  
                                          l296 03C9                                            l457 0515  
                                          l625 0FFF                                            l466 07CA  
                                          l482 0127                                            l706 0B69  
                                          l547 0C8D                                            l555 01AF  
                                          l731 0018                                            l652 0BA6  
                                          l477 00D3                                            l670 0B74  
                                          l576 0B5C                                            l664 0B7A  
                                          l649 0B9E                                            l667 0B80  
                                          l940 0CFC                                            l764 040C  
                                          l757 03CD                                            l782 0045  
                                          l767 041B                                            l697 0C16  
                                          l786 004F                                            l938 0CE8  
                                          l788 005F                                            _GIE 005F  
                                 __CFG_CPD$OFF 0000                                            _abs 0C8E  
                                          _led 003F                 ?_EUSART_SetFramingErrorHandler 0070  
                                 __CFG_BORV$LO 0000                                            wreg 0009  
                                 __CFG_IESO$ON 0000               ??_MTOUCH_Sensor_Sampled_ResetAll 0078  
              ?_MTOUCH_Sensor_Sampled_ResetAll 0070               __size_of_MTOUCH_Sensor_SampleAll 001A  
            __size_of_MTOUCH_Sensor_Initialize 0023                      ?_MTOUCH_Sensor_Initialize 0070  
                                         INDF0 0000                                           FSR0H 0005  
                                         FSR1H 0007                                           FSR0L 0004  
                                         FSR1L 0006                             _MTOUCH_CVD_ScanA_0 0D3C  
                           _MTOUCH_CVD_ScanA_1 0D5C                             _MTOUCH_CVD_ScanA_2 0D7C  
                           _MTOUCH_CVD_ScanA_3 0D9C                             _MTOUCH_CVD_ScanB_0 0E7C  
                           _MTOUCH_CVD_ScanA_4 0DBC                             _MTOUCH_CVD_ScanB_1 0E9C  
                           _MTOUCH_CVD_ScanA_5 0DDC                             _MTOUCH_CVD_ScanB_2 0EBC  
                           _MTOUCH_CVD_ScanA_6 0DFC                             _MTOUCH_CVD_ScanB_3 0EDC  
                           _MTOUCH_CVD_ScanA_7 0E1C                             _MTOUCH_CVD_ScanB_4 0EFC  
                           _MTOUCH_CVD_ScanA_8 0E3C                             _MTOUCH_CVD_ScanB_5 0F1C  
                           _MTOUCH_CVD_ScanA_9 0D1C                             _MTOUCH_CVD_ScanB_6 0F3C  
                           _MTOUCH_CVD_ScanB_7 0F5C                             _MTOUCH_CVD_ScanB_8 0F7C  
                           _MTOUCH_CVD_ScanB_9 0E5C                                           ?_abs 0070  
                                         l3001 07A2                                           l1401 0153  
                                         l3011 059A                                           l3003 07AD  
                                         l3021 05F2                                           l3013 05AF  
                                         l3005 07BB                                           l3015 05D5  
                                         l3007 07C3                                           l3111 046D  
                                         l3023 00FE                                           l3017 05E1  
                                         l3009 0587                                           l3113 047D  
                                         l3105 0437                                           l3025 0109  
                                         l3201 0CFD                                           l3121 0B7B  
                                         l3041 0F9C                                           l3019 05E9  
                                         l3115 0489                                           l3107 0450  
                                         l3027 011E                                           l3211 0D0A  
                                         l3203 0D00                                           l3123 0B6F  
                                         l3051 0FB1                                           l3043 0FAB  
                                         l3035 0BF8                                           l3131 0BD4  
                                         l3117 0491                                           l3109 045E  
                                         l2501 0E90                                           l3141 0CB3  
                                         l3133 0CA8                                           l3061 016E  
                                         l3213 0D0D                                           l3205 0D00  
                                         l3053 0FB6                                           l3037 0BFC  
                                         l3029 0BF7                                           l3125 0BCB  
                                         l3231 00DB                                           l2511 0D70  
                                         l2503 0E96                                           l3063 0172  
                                         l3055 0154                                           l3071 00AD  
                                         l3215 0D14                                           l3207 0D08  
                                         l3119 0B75                                           l3039 0C00  
                                         l3127 0BCE                                           l1392 0CA7  
                                         l3161 0C2D                                           l3153 0C27  
                                         l2513 0D76                                           l2505 0D5C  
                                         l2521 0EB0                                           l2601 0F30  
                                         l3081 053D                                           l3145 0CB5  
                                         l3073 00C8                                           l3065 00AB  
                                         l3217 0D17                                           l3049 0FAD  
                                         l3129 0BD1                                           l3401 03F8  
                                         l3163 0C32                                           l2507 0D61  
                                         l2531 0D90                                           l2611 0E10  
                                         l2523 0EB6                                           l2515 0E9C  
                                         l2603 0F36                                           l1395 0CA7  
                                         l3083 0549                                           l3091 0567  
                                         l3147 0CBA                                           l3139 0CAA  
                                         l3059 0167                                           l3075 00CD  
                                         l3171 0B62                                           l3219 0D1A  
                                         l3403 03FE                                           l3261 0BDE  
                                         l3237 00FC                                           l3229 00D5  
                                         l2701 0C65                                           l2509 0D6F  
                                         l2533 0D96                                           l2525 0D7C  
                                         l2613 0E16                                           l2605 0DFC  
                                         l2517 0EA1                                           l2541 0ED0  
                                         l2621 0F50                                           l3085 054F  
                                         l3093 0584                                           l3077 0518  
                                         l3149 0CC0                                           l3165 0B60  
                                         l3181 0FF6                                           l3173 0FDE  
                                         l3421 0429                                           l3413 040E  
                                         l3405 0405                                           l3271 0BA3  
                                         l3263 0BE3                                           l3159 0C29  
                                         l2703 0C6A                                           l2711 0B6A  
                                         l2527 0D81                                           l2551 0DB0  
                                         l2607 0E01                                           l2631 0E30  
                                         l2519 0EAF                                           l2543 0ED6  
                                         l2535 0EBC                                           l2623 0F56  
                                         l2615 0F3C                                           l3087 055E  
                                         l3079 0531                                           l3167 0B60  
                                         l3183 0FFD                                           l3175 0FE7  
                                         l3191 0013                                           l3415 0418  
                                         l3407 040A                                           l3281 0053  
                                         l3265 0BE5                                           l3257 0BD8  
                                         l2705 0C6E                                           l2713 0B6C  
                                         l2529 0D8F                                           l2553 0DB6  
                                         l2545 0D9C                                           l2609 0E0F  
                                         l2633 0E36                                           l2625 0E1C  
                                         l2537 0EC1                                           l2561 0EF0  
                                         l2617 0F41                                           l2641 0F70  
                                         l2801 0312                                           l3177 0FE8  
                                         l3193 0BA7                                           l3185 0005  
                                         l3273 0C07                                           l3417 041D  
                                         l3259 0BD9                                           l2707 0C73  
                                         l2491 0D50                                           l2547 0DA1  
                                         l2571 0DD0                                           l2627 0E21  
                                         l2651 0E50                                           l2539 0ECF  
                                         l2563 0EF6                                           l2555 0EDC  
                                         l2619 0F4F                                           l2643 0F76  
                                         l2635 0F5C                                           l2723 036C  
                                         l2715 0C4C                                           l2811 0337  
                                         l2803 032B                                           l3179 0FEF  
                                         l3195 0BAA                                           l3187 0008  
                                         l3275 0C13                                           l3419 0424  
                                         l3277 003C                                           l3269 0B9E  
                                         l2493 0D56                                           l2485 0D3C  
                                         l2549 0DAF                                           l2573 0DD6  
                                         l2565 0DBC                                           l2629 0E2F  
                                         l2653 0E56                                           l2645 0E3C  
                                         l2557 0EE1                                           l2581 0F10  
                                         l2637 0F61                                           l2661 0F90  
                                         l2741 03BD                                           l2733 037E  
                                         l2717 0361                                           l2821 034F  
                                         l2813 0338                                           l2805 032D  
                                         l3197 0BAB                                           l3189 000B  
                                         l3279 003D                                           l2671 0D30  
                                         l2487 0D41                                           l2567 0DC1  
                                         l2591 0DF0                                           l2647 0E41  
                                         l2495 0E7C                                           l2559 0EEF  
                                         l2583 0F16                                           l2575 0EFC  
                                         l2639 0F6F                                           l2663 0F96  
                                         l2655 0F7C                                           l2743 03C1  
                                         l2735 038F                                           l2727 0372  
                                         l2719 0366                                           l2823 0356  
                                         l2815 0339                                           l2807 032E  
                                         l2831 0C9B                                           l2911 0CD1  
                                         l3199 0B66                                           l3391 03D7  
                                         l3383 03CA                                           l2761 0085  
                                         l2841 01CF                                           l2921 0061  
                                         l2753 0C39                                           l2673 0D36  
                                         l2665 0D1C                                           l2489 0D4F  
                                         l2569 0DCF                                           l2593 0DF6  
                                         l2585 0DDC                                           l2649 0E4F  
                                         l2681 0E70                                           l2497 0E81  
                                         l2577 0F01                                           l2657 0F81  
                                         l2737 03AF                                           l2729 0378  
                                         l2745 03C4                                           l2825 035B  
                                         l2817 033C                                           l2809 0335  
                                         l2833 0B81                                           l2913 0CD3  
                                         l2905 0CC2                                           l3393 03E0  
                                         l3385 03D5                                           l2691 0CED  
                                         l2763 008B                                           l2851 019F  
                                         l2843 01DE                                           l2923 0067  
                                         l2755 0C3E                                           l2667 0D21  
                                         l2587 0DE1                                           l2683 0E76  
                                         l2675 0E5C                                           l2499 0E8F  
                                         l2579 0F0F                                           l2595 0F1C  
                                         l2659 0F8F                                           l2747 03C8  
                                         l2739 03B3                                           l2819 0342  
                                         l2835 0B88                                           l2907 0CC6  
                                         l2915 0B8F                                           l3483 0574  
                                         l3395 03E5                                           l2693 0CF2  
                                         l2685 0CDE                                           l2861 06D4  
                                         l2853 068B                                           l2845 01E6  
                                         l2837 01B1                                           l2917 0B5E  
                                         l2669 0D2F                                           l2589 0DEF  
                                         l2677 0E61                                           l2597 0F21  
                                         l2781 0BED                                           l2829 0C8E  
                                         l2909 0CC7                                           l3485 0579  
                                         l2941 0143                                           l2933 0128  
                                         l2773 0FBE                                           l3397 03ED  
                                         l2695 0CF8                                           l2687 0CE0  
                                         l2871 021B                                           l2951 0C83  
                                         l2855 068F                                           l2863 06D6  
                                         l2847 01EE                                           l2839 01C9  
                                         l2759 0C44                                           l2679 0E6F  
                                         l2599 0F2F                                           l3487 0387  
                                         l2791 02FC                                           l2935 0131  
                                         l2943 0147                                           l2775 0FC4  
                                         l3399 03F3                                           l2689 0CE4  
                                         l2961 0668                                           l2769 00A8  
                                         l2873 0239                                           l2953 0C85  
                                         l2945 0C76                                           l2849 0181  
                                         l2865 06FB                                           l2857 0690  
                                         l2929 0082                                           l2793 02FE  
                                         l2881 0252                                           l2777 0B96  
                                         l2937 0139                                           l2963 0676  
                                         l2955 05FE                                           l2867 01F8  
                                         l2947 0C7A                                           l2859 06B5  
                                         l2971 04C0                                           l2699 0C60  
                                         l2795 0304                                           l2787 0BF5  
                                         l2779 0BE7                                           l2883 025E  
                                         l2939 013D                                           l2875 001A  
                                         l2965 067E                                           l2957 064F  
                                         l2869 0203                                           l2949 0C7B  
                                         l2973 04C7                                           l2981 071B  
                                         l2797 030A                                           l2893 026A  
                                         l2959 0660                                           l2975 04D2  
                                         l2967 04A5                                           l2983 0731  
                                         l2991 075E                                           l2799 030D  
                                         l2895 0277                                           l2887 0260  
                                         l2879 024D                                           l2977 04E4  
                                         l2969 04B8                                           l2993 0778  
                                         l2985 073B                                           l2897 028F  
                                         l2889 0268                                           l2979 050D  
                                         l2995 0785                                           l2987 074D  
                                         l2899 0298                                           TRISA 008C  
                                         TRISB 008D                                           l2997 078D  
                                         l2989 0755                                           l2999 0799  
                ?_Button_Reading_Update_Helper 0020                                           u1000 0CE4  
                                         u1001 0CE3                                           u1100 0C4B  
                                         u1101 0C4A                                           u1030 0CF8  
                                         u1110 008B                                           u1031 0CF7  
                                         u1015 0CE9                                           u1111 008A  
                                         u1200 06A2                                           u1040 0C65  
                                         u1120 0FC4                                           u1025 0CEE  
                                         u1041 0C64                                           u1121 0FC3  
                                         u1210 06E8                                           u1050 036B  
                                         u1130 0BED                                           u1051 036A  
                                         u1131 0BEC                                           u1220 0203  
                                         u1300 0C7A                                           u1060 0371  
                                         u1140 034A                                           u1221 0202  
                                         u1301 0C79                                           u1205 069E  
                                         u1061 0370                                           u1141 0349  
                                         u1310 0610                                           u1070 03AF  
                                         u1150 034F                                           u1230 025E  
                                         u1215 06E4                                           u2007 0F42  
                                         u1071 03AE                                           u1151 034E  
                                         u1231 025D                                           u1320 0645  
                                         u1400 0778                                           u1080 03B3  
                                         u1160 035B                                           u1240 0268  
                                         u1401 0777                                           u2017 0F22  
                                         u1081 03B2                                           u1161 035A  
                                         u1241 0267                                           u1330 0660  
                                         u1410 07BB                                           u1090 0C43  
                                         u1170 0C9B                                           u1250 0277  
                                         u1331 065F                                           u1315 060C  
                                         u1411 07BA                                           u1091 0C42  
                                         u2107 0E02                                           u2027 0F02  
                                         u1171 0C9A                                           u1251 0276  
                                         u1340 0676                                           u1420 059A  
                                         u1260 028F                                           u1500 0180  
                                         u1341 0675                                           u1325 0641  
                                         u1421 0599                                           u1405 0774  
                                         u2117 0DE2                                           u2037 0EE2  
                                         u1261 028E                                           u1501 017F  
                                         _LATA 010C                                           u1190 068F  
                                         u1350 04B8                                           u1270 0CC6  
                                         u1510 00D3                                           _LATB 010D  
                                         u1191 068E                                           u1351 04B7  
                                         u2127 0DC2                                           u2047 0EC2  
                                         u1175 0C97                                           u1271 0CC5  
                                         u1511 00D2                                           u1440 05D5  
                                         u1360 04E4                                           u1280 0067  
                                         u1520 0549                                           u1600 0BB2  
                                         u1185 01A5                                           u1441 05D4  
                                         u1361 04E3                                           u1281 0066  
                                         u2137 0DA2                                           u2057 0EA2  
                                         u1521 0548                                           u1505 017C  
                                         u1601 0BB1                                           u1434 05CB  
                                         u1370 04F6                                           u1530 054F  
                                         u1450 0109                                           u1610 0D08  
                                         u1290 0153                                           u1435 05CA  
                                         u2147 0D82                                           u2067 0E82  
                                         u1531 054E                                           u1451 0108  
                                         u1611 0D07                                           u1291 0152  
                                         u1700 004E                                           u1620 00DB  
                                         u1380 0731                                           u1540 045E  
                                         u1460 011E                                           u1701 004D  
                                         u1621 00DA                                           u1381 0730  
                                         u1541 045D                                           u2157 0D62  
                                         u2077 0E62                                           u1461 011D  
                                         u1710 005F                                           u1630 00FA  
                                         u1390 074D                                           u1550 046D  
                                         u1470 0C06                                           u1711 005E  
                                         u1631 00F8                                           u1375 04F2  
                                         u1391 074C                                           u1551 046C  
                                         u2167 0D42                                           u2087 0E42  
                                         u1471 0C05                                           u1640 00FB  
                                         u1560 0489                                           u1480 0FBC  
                                         u1561 0488                                           u2177 0D22  
                                         u2097 0E22                                           u1481 0FBB  
                                         u1570 0CB3                                           u1490 0166  
                                         u2187 003E                                           u1571 0CB2  
                                         u1491 0165                                           u1580 0CC0  
                                         u1581 0CBF                                           u1670 0BDE  
                                         u1590 0C38                                           u1910 03D5  
                                         u1671 0BDD                                           u1591 0C37  
                                         u1495 0162                                           u1911 03D4  
                                         u1680 0BE3                                           u1920 03E0  
                                         u1681 0BE2                                           u1921 03DF  
                                         u1690 0BA3                                           u1930 03ED  
                                         u1691 0BA2                                           u1931 03EC  
                                         u1940 03FE                                           u1941 03FD  
                                         u1950 0405                                           u1951 0404  
                                         u1960 0418                                           u1961 0417  
                                         u1970 0432                                           u1971 0431  
                                         u1965 0414                                           u1987 0F82  
                                         u1997 0F62                                           _PLLR 04D6  
                   Button_State_Pressed@button 0026                                           _WPUA 020C  
                                         _WPUB 020D              __size_of_Sensor_Acq_ExecutePacket 0065  
                    ?_Sensor_Acq_ExecutePacket 007C                                   __CFG_WRT$OFF 0000  
                                __CFG_FCMEN$ON 0000                             _MTOUCH_needReburst 0B60  
                                         abs@a 0070                                           _main 03CA  
         __size_of_MTOUCH_Button_InitializeAll 0021                                           _duty 0041  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
         __size_of_MTOUCH_Sensor_InitializeAll 0010                                           btemp 007E  
                          ?_MTOUCH_CVD_ScanA_0 0070                            ?_MTOUCH_CVD_ScanA_1 0070  
                          ?_MTOUCH_CVD_ScanA_2 0070                            ?_MTOUCH_CVD_ScanA_3 0070  
                          ?_MTOUCH_CVD_ScanA_4 0070                            ?_MTOUCH_CVD_ScanB_0 0070  
                          ?_MTOUCH_CVD_ScanA_5 0070                            ?_MTOUCH_CVD_ScanB_1 0070  
                          ?_MTOUCH_CVD_ScanA_6 0070                            ?_MTOUCH_CVD_ScanB_2 0070  
                          ?_MTOUCH_CVD_ScanA_7 0070                            ?_MTOUCH_CVD_ScanB_3 0070  
                          ?_MTOUCH_CVD_ScanA_8 0070                            ?_MTOUCH_CVD_ScanB_4 0070  
                          ?_MTOUCH_CVD_ScanA_9 0070                            ?_MTOUCH_CVD_ScanB_5 0070  
                          ?_MTOUCH_CVD_ScanB_6 0070                            ?_MTOUCH_CVD_ScanB_7 0070  
                          ?_MTOUCH_CVD_ScanB_8 0070                            ?_MTOUCH_CVD_ScanB_9 0070  
                                         start 0002                                  __CFG_MCLRE$ON 0000  
                          ?_MTOUCH_needReburst 0070                                          ADCON0 009D  
                     ?_MTOUCH_Service_Mainloop 0070               __size_of_MTOUCH_Button_isPressed 002A  
                __size_of_Button_State_Pressed 0077                                          ??_abs 0072  
                  ?_Button_Baseline_Initialize 0020                  ??_MTOUCH_Sensor_RawSample_Get 0078  
                Sensor_RawSample_Update@sensor 0070                                  __CFG_PLLEN$ON 0000  
                    __size_of_Sensor_isEnabled 0010                                  ?_EUSART_Write 0070  
               __size_of_OSCILLATOR_Initialize 000C                  __end_of_OSCILLATOR_Initialize 0BB3  
                                        ?_main 0070                                          _ADRES 009B  
                                __CFG_WDTE$OFF 0000                           ??_MTOUCH_CVD_ScanA_0 0070  
                         ??_MTOUCH_CVD_ScanA_1 0070                           ??_MTOUCH_CVD_ScanA_2 0070  
                         ??_MTOUCH_CVD_ScanA_3 0070                           ??_MTOUCH_CVD_ScanA_4 0070  
                         ??_MTOUCH_CVD_ScanB_0 0070                           ??_MTOUCH_CVD_ScanA_5 0070  
                         ??_MTOUCH_CVD_ScanB_1 0070                           ??_MTOUCH_CVD_ScanA_6 0070  
                         ??_MTOUCH_CVD_ScanB_2 0070                           ??_MTOUCH_CVD_ScanA_7 0070  
                         ??_MTOUCH_CVD_ScanB_3 0070                           ??_MTOUCH_CVD_ScanA_8 0070  
                         ??_MTOUCH_CVD_ScanB_4 0070                           ??_MTOUCH_CVD_ScanA_9 0070  
                         ??_MTOUCH_CVD_ScanB_5 0070                           ??_MTOUCH_CVD_ScanB_6 0070  
                         ??_MTOUCH_CVD_ScanB_7 0070                           ??_MTOUCH_CVD_ScanB_8 0070  
                         ??_MTOUCH_CVD_ScanB_9 0070                        __size_of_Button_Service 0070  
                                        _RCREG 0199                                          _RCSTA 019D  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TXREG 019A                                          _TXSTA 019E  
              __size_of_Button_DefaultCallback 0001                           ??_MTOUCH_needReburst 0070  
              __size_of_Sensor_DefaultCallback 0001                        __size_of_Sensor_Service 0071  
        __end_of_MTOUCH_Sensor_Scan_Initialize 0B6F         __size_of_MTOUCH_Sensor_Scan_Initialize 0005  
                _MTOUCH_Sensor_Scan_Initialize 0B6A                                 _WDT_Initialize 0B66  
                      Sensor_setSampled@sensor 0070                         _Sensor_Acq_ExecuteScan 0361  
                                        main@i 0036               __size_of_Button_State_NotPressed 00B0  
                                        pclath 000A                           _Sensor_Sampled_Reset 0B96  
                                        status 0003                                          wtemp0 007E  
                    __size_of_Sensor_setActive 0007                         Sensor_isEnabled@sensor 0070  
                              __initialization 07CB                                   __end_of_main 0435  
                        __end_of_MTOUCH_Random 0C76                        _EUSART_is_tx_ready$1025 0070  
                               ??_EUSART_Write 0070               __end_of_MTOUCH_Button_Initialize 01F8  
                                       ??_main 0035                        _MTOUCH_Sensor_Calibrate 0B5D  
                      ??_Button_Reading_Update 007D           MTOUCH_Sensor_Sampled_ResetAll@sensor 007A  
                     ?_Button_Deviation_Update 0070                         __end_of_WDT_Initialize 0B6A  
                                 ?_MTOUCH_Tick 0070                   Button_Baseline_Update@button 0070  
            _EUSART_DefaultFramingErrorHandler 0000                                         _ADCON0 009D  
                                       _ADCON1 009E                     _EUSART_OverrunErrorHandler 0039  
         __size_of_MTOUCH_Sensor_RawSample_Get 0027                                         _ANSELA 018C  
                                       _ANSELB 018D                                         _BORCON 0116  
                        ?_Sensor_Sampled_Reset 0076                     __end_of_EUSART_is_tx_ready 0BE7  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _WDTCON 0097  
            MTOUCH_Button_InitializeAll@button 0020                 ??_Button_Reading_Update_Helper 0022  
                       _Button_DefaultCallback 0B5C                __end_of_MTOUCH_Service_Mainloop 0D1C  
                               __CFG_PWRTE$OFF 0000                         _Sensor_DefaultCallback 0004  
                                _packet_sample 003D                                         ___wmul 0CDE  
                 Sensor_DefaultCallback@sensor 0070                                 __CFG_STVREN$ON 0000  
                                       _memcpy 0128               __end_of_MTOUCH_Button_ServiceAll 0C39  
                                 __pdataBIGRAM 206C                        _MTOUCH_Sensor_SampleAll 0CA8  
                 Button_DefaultCallback@button 0070                                ?_WDT_Initialize 0070  
                     ?_Sensor_RawSample_Update 0070                     __end_of_Sensor_Acquisition 02A2  
                      ?_Button_Baseline_Update 0070                MTOUCH_Sensor_RawSample_Get@name 007C  
                            _SYSTEM_Initialize 0C07                        __end_of__initialization 07FD  
          __size_of_Button_Baseline_Initialize 002F                 ?_MTOUCH_Sensor_Scan_Initialize 0070  
                           ?_SYSTEM_Initialize 0070                            _Button_StateMachine 004B  
                   __end_of_Button_Tick_helper 0128                  MTOUCH_Sensor_Calibrate@sensor 0070  
                      ?_Sensor_setScanFunction 0070                                 __pcstackCOMMON 0070  
                      _MTOUCH_Button_isPressed 00D4                                   __pidataBANK0 0C17  
                          ??_SYSTEM_Initialize 007E                     __end_of_MTOUCH_Button_Tick 00D4  
             __end_of_MTOUCH_Sensor_Initialize 003C                             _DELAY_microseconds 003C  
                    ??_MTOUCH_Sensor_Calibrate 0070                               _Sensor_isEnabled 0BE7  
              __end_of_Button_Deviation_Update 068B                       Sensor_setInactive@sensor 0070  
                               _Button_Service 0435               __end_of_Sensor_Acq_ExecutePacket 0361  
                   ?_Button_State_Initializing 0026                           Button_Service@button 0031  
                               _OPTION_REGbits 0095                            ?_DELAY_microseconds 0070  
               __end_of_Button_Baseline_Update 071B                           Sensor_Service@sensor 002F  
                     _MTOUCH_Button_Initialize 01B0                ??_EUSART_SetOverrunErrorHandler 0072  
                               _Sensor_Service 0516                        _Button_State_NotPressed 071B  
                __size_of_MTOUCH_Sensor_Enable 0021                             _Sensor_setInactive 0B88  
                    __end_of_SYSTEM_Initialize 0C17                              _lowpowerActivated 0044  
             MTOUCH_Sensor_isCalibrated@sensor 0070                         ??_Sensor_Sampled_Reset 0078  
                                   __pbssBANK0 0037                           __end_of_EUSART_Write 0BA7  
                          ?_Sensor_setInactive 0070                               _Sensor_setActive 0B81  
                           Sensor_Service@name 002D                     __end_of_mtouch_button_init 08AA  
               __end_of_Sensor_setScanFunction 0C60                           ??_DELAY_microseconds 0072  
                                   __pmaintext 03CA                                  ?_MTOUCH_Delay 0070  
                                      ?___wmul 0070                 MTOUCH_Sensor_wasSampled@sensor 007A  
                       __end_of_Button_Service 04A5                                        ?_memcpy 0070  
                                      _BAUDCON 019F            __end_of_MTOUCH_Button_InitializeAll 0FBD  
                  _MTOUCH_Button_InitializeAll 0F9C                                        _APFCON0 011D  
                                      _APFCON1 011E            __end_of_MTOUCH_Sensor_InitializeAll 0C07  
                  _MTOUCH_Sensor_InitializeAll 0BF7                      ??_MTOUCH_Sensor_SampleAll 0031  
              __end_of_Sensor_RawSample_Update 0CDE                           ??_Sensor_setInactive 0072  
            __size_of_MTOUCH_Sensor_wasSampled 0024                      ?_MTOUCH_Sensor_wasSampled 0070  
            __end_of_Button_State_Initializing 0516                         __end_of_Sensor_Service 0587  
                     _MTOUCH_Button_ServiceAll 0C27                        ?_Sensor_Acq_ExecuteScan 0070  
                MTOUCH_Sensor_SampleAll@sensor 0032                                        _OSCTUNE 0098  
             __size_of_MTOUCH_Service_Mainloop 001F                   __end_of_Button_State_Pressed 05FE  
                     ??_EUSART_SetErrorHandler 0072               Button_Baseline_Initialize@button 0020  
                         __size_of_MTOUCH_Tick 0004                      ??_MTOUCH_Button_isPressed 0076  
                               ??_MTOUCH_Delay 0070                                 _packet_counter 0046  
                      Sensor_Acquisition@retry 0028                 MTOUCH_Button_Initialize@button 007B  
                              __size_of___wmul 001F                                ?_Button_Service 0070  
                              __size_of_memcpy 002C                                        __ptext1 0C07  
                                      __ptext2 0B66                                        __ptext3 0005  
                                      __ptext4 0BA7                                        __ptext5 0BCB  
                                      __ptext6 0BF7                                        __ptext7 0019  
                                      __ptext8 0FBD                                        __ptext9 0F9C  
                  Button_Reading_Update@button 0024                    __size_of_MTOUCH_CVD_ScanA_0 0020  
                  __size_of_MTOUCH_CVD_ScanA_1 0020                    __size_of_MTOUCH_CVD_ScanA_2 0020  
                  __size_of_MTOUCH_CVD_ScanA_3 0020                    __size_of_MTOUCH_CVD_ScanA_4 0020  
                  __size_of_MTOUCH_CVD_ScanB_0 0020                    __size_of_MTOUCH_CVD_ScanA_5 0020  
                  __size_of_MTOUCH_CVD_ScanB_1 0020                    __size_of_MTOUCH_CVD_ScanA_6 0020  
                  __size_of_MTOUCH_CVD_ScanB_2 0020                    __size_of_MTOUCH_CVD_ScanA_7 0020  
                  __size_of_MTOUCH_CVD_ScanB_3 0020                    __size_of_MTOUCH_CVD_ScanA_8 0020  
                  __size_of_MTOUCH_CVD_ScanB_4 0020                    __size_of_MTOUCH_CVD_ScanA_9 0020  
                  __size_of_MTOUCH_CVD_ScanB_5 0020                    __size_of_MTOUCH_CVD_ScanB_6 0020  
                  __size_of_MTOUCH_CVD_ScanB_7 0020                    __size_of_MTOUCH_CVD_ScanB_8 0020  
                  __size_of_MTOUCH_CVD_ScanB_9 0020                       _MTOUCH_Sensor_Initialize 0019  
               __end_of_Sensor_Acq_ExecuteScan 03CA                          _OSCILLATOR_Initialize 0BA7  
                                 __size_of_abs 001A                      ??_Button_State_NotPressed 0028  
                              ?_Sensor_Service 0070                       ??_PIN_MANAGER_Initialize 0070  
               __size_of_Button_Reading_Update 0018                    __size_of_MTOUCH_needReburst 0002  
                __end_of_Button_Reading_Update 0C8E              MTOUCH_Sensor_InitializeAll@sensor 007D  
                     _Sensor_Acq_ExecutePacket 02FC                               _callback_sampled 0059  
                   __size_of_SYSTEM_Initialize 0010                                        clrloop0 0BB4  
                             _callback_pressed 0053                 MTOUCH_Sensor_Initialize@sensor 007B  
                         end_of_initialization 07FD                        ?_Button_DefaultCallback 0070  
        __end_of_EUSART_SetOverrunErrorHandler 0B81         __size_of_EUSART_SetOverrunErrorHandler 0006  
                _EUSART_SetOverrunErrorHandler 0B7B                                        memcpy@d 0077  
                                      memcpy@n 0074                                        memcpy@s 0079  
                                      init_ram 0BBF                                        initloop 0BC0  
                      ?_Sensor_DefaultCallback 0070               __size_of_Button_Deviation_Update 008D  
                            _EUSART_Initialize 0FDE                   ??_MTOUCH_Sensor_isCalibrated 0070  
                           ?_EUSART_Initialize 0070            __end_of_MTOUCH_Sensor_RawSample_Get 00AB  
                  _MTOUCH_Sensor_RawSample_Get 0084                                      _RCSTAbits 019D  
                           _EUSART_is_tx_ready 0BD8                                  MTOUCH_Delay@i 0071  
                          ??_EUSART_Initialize 0072                               ??_WDT_Initialize 0070  
                       Sensor_setActive@sensor 0070                            ?_EUSART_is_tx_ready 0070  
                             __CFG_FOSC$INTOSC 0000                  Button_Deviation_Update@button 0070  
                        __size_of_EUSART_Write 000A                     MTOUCH_Sensor_Enable@sensor 007A  
                          _callback_notPressed 0051            __size_of_MTOUCH_Sensor_isCalibrated 0002  
               __end_of_Button_DefaultCallback 0B5D                __size_of_EUSART_SetErrorHandler 0006  
                           _sensor_globalFlags 0048                         __size_of_MTOUCH_Random 0016  
                     __end_of_Sensor_isEnabled 0BF7                 __end_of_Sensor_DefaultCallback 0005  
                    __end_of_EUSART_Initialize 1000                   Sensor_Acq_ExecuteScan@result 007A  
                         ??_EUSART_is_tx_ready 0070                                      _TXSTAbits 019E  
             __size_of_Sensor_RawSample_Update 001C                             _Sensor_Acquisition 024D  
                         _Button_State_Pressed 0587                     _EUSART_DefaultErrorHandler 0000  
                          ?_Sensor_Acquisition 0025                                  __pidataBIGRAM 02A2  
                               __end_of___wmul 0CFD                     ??_MTOUCH_Button_Initialize 0076  
              ??_MTOUCH_Sensor_Scan_Initialize 0070                                   _EUSART_Write 0B9D  
                Sensor_Acq_ExecutePacket@error 0024                             _Button_Tick_helper 00FE  
                               __end_of_memcpy 0154                         ?_OSCILLATOR_Initialize 0070  
                          MTOUCH_Button_Tick@i 0020                       __end_of_Sensor_setActive 0B88  
                  ??_Button_State_Initializing 0028                            start_initialization 07CB  
                      _MTOUCH_Service_Mainloop 0CFD                __size_of_PIN_MANAGER_Initialize 0014  
                         __end_of_MTOUCH_Delay 0C4C                             _MTOUCH_Button_Tick 00AB  
                          ?_Button_Tick_helper 0076                                    __end_of_abs 0CA8  
                         ??_Sensor_Acquisition 0027                            ?_MTOUCH_Button_Tick 0070  
              Button_State_Initializing@button 0026                 ?_EUSART_SetOverrunErrorHandler 0070  
             __end_of_MTOUCH_Sensor_wasSampled 0084                           ??_Button_Tick_helper 0078  
                 __end_of_MTOUCH_Sensor_Enable 0FDE                     _EUSART_FramingErrorHandler 003B  
                        ?_Button_State_Pressed 0026                                       ??___wmul 0074  
                       _EUSART_SetErrorHandler 0B6F                     ??_MTOUCH_Button_ServiceAll 007D  
                                  __pdataBANK0 004B                                  _MTOUCH_Random 0C60  
                                     ??_memcpy 0076                   ??_Button_Baseline_Initialize 0022  
                         ??_MTOUCH_Button_Tick 007A                             _mtouch_button_init 0800  
                   Sensor_Sampled_Reset@sensor 0076                                    __pbssBIGRAM 20C6  
                                    ___latbits 0001                                  __pcstackBANK0 0020  
               MTOUCH_Button_ServiceAll@button 0033                            Sensor_Service@error 002E  
                __size_of_Sensor_Sampled_Reset 0007                     __size_of_EUSART_Initialize 0022  
                      _Button_Deviation_Update 05FE                      _Button_State_Initializing 04A5  
           __end_of_MTOUCH_Sensor_isCalibrated 0B60                     _MTOUCH_Sensor_isCalibrated 0B5E  
                            _Sensor_setSampled 0B8F                    __size_of_DELAY_microseconds 0024  
                       _PIN_MANAGER_Initialize 0005                               ??_Button_Service 002C  
                     ?_MTOUCH_Sensor_Calibrate 0070                             ?_Sensor_setSampled 0070  
           Button_Reading_Update_Helper@button 0020                     ??_MTOUCH_Sensor_Initialize 0020  
                               ?_MTOUCH_Random 0070                               ??_Sensor_Service 0029  
                   ??_Sensor_Acq_ExecutePacket 0020                            ??_Sensor_setSampled 0072  
                    ??_MTOUCH_Service_Mainloop 0034                    __size_of_Sensor_setInactive 0007  
               DELAY_microseconds@microseconds 0070                 Sensor_Acq_ExecutePacket@sensor 007C  
                                ??_MTOUCH_Tick 007E                      __end_of_Sensor_setSampled 0B96  
                               ___wmul@product 0074                                       _LATAbits 010C  
       EUSART_SetErrorHandler@interruptHandler 0070                             _currentScannSensor 0047  
                      _Sensor_RawSample_Update 0CC2                                      clear_ram0 0BB3  
                            _eusartRxLastError 0043                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0072                         ??_Button_State_Pressed 0028  
       __end_of_MTOUCH_Sensor_Sampled_ResetAll 0181        __size_of_MTOUCH_Sensor_Sampled_ResetAll 002D  
               _MTOUCH_Sensor_Sampled_ResetAll 0154                       ?_MTOUCH_Sensor_SampleAll 0070  
            _EUSART_DefaultOverrunErrorHandler 0000                       _MTOUCH_Sensor_wasSampled 0060  
                           _mtouch_time_toScan 0049                     __end_of_MTOUCH_CVD_ScanA_0 0D5C  
                   __end_of_MTOUCH_CVD_ScanA_1 0D7C                     __end_of_MTOUCH_CVD_ScanA_2 0D9C  
                   __end_of_MTOUCH_CVD_ScanA_3 0DBC                     __end_of_MTOUCH_CVD_ScanA_4 0DDC  
                   __end_of_MTOUCH_CVD_ScanB_0 0E9C                     __end_of_MTOUCH_CVD_ScanA_5 0DFC  
                   __end_of_MTOUCH_CVD_ScanB_1 0EBC                     __end_of_MTOUCH_CVD_ScanA_6 0E1C  
                   __end_of_MTOUCH_CVD_ScanB_2 0EDC                     __end_of_MTOUCH_CVD_ScanA_7 0E3C  
                   __end_of_MTOUCH_CVD_ScanB_3 0EFC                     __end_of_MTOUCH_CVD_ScanA_8 0E5C  
                   __end_of_MTOUCH_CVD_ScanB_4 0F1C                     __end_of_MTOUCH_CVD_ScanA_9 0D3C  
                   __end_of_MTOUCH_CVD_ScanB_5 0F3C                     __end_of_MTOUCH_CVD_ScanB_6 0F5C  
                   __end_of_MTOUCH_CVD_ScanB_7 0F7C                     __end_of_MTOUCH_CVD_ScanB_8 0F9C  
                   __end_of_MTOUCH_CVD_ScanB_9 0E7C                       ??_Button_Baseline_Update 0072  
                                   _ADCON0bits 009D                          __size_of_MTOUCH_Delay 0013  
                            ___wmul@multiplier 0070                     __end_of_MTOUCH_needReburst 0B62  
                         _MTOUCH_Sensor_Enable 0FBD                       Button_Tick_helper@button 0076  
                    ??_Button_Deviation_Update 0072                          _Button_Reading_Update 0C76  
                     ??_Sensor_setScanFunction 0072                       ?_MTOUCH_Button_isPressed 0070  
                            ?_Sensor_isEnabled 0070                            __end_of_MTOUCH_Tick 0B66  
                            _MTOUCH_Initialize 0BCB                __end_of_MTOUCH_Sensor_Calibrate 0B5E  
                           ??_Sensor_isEnabled 0072                             ?_MTOUCH_Initialize 0070  
                                    memcpy@tmp 007B                                ??_MTOUCH_Random 0070  
                                 _MTOUCH_Delay 0C39                                   _sample_delay 0045  
                      ??_OSCILLATOR_Initialize 0070             __end_of_Button_Baseline_Initialize 01B0  
                   _Button_Baseline_Initialize 0181                       Sensor_Acquisition@sensor 0025  
                          _EUSART_ErrorHandler 0037                            ??_MTOUCH_Initialize 007E  
                     ?_Button_State_NotPressed 0026                             Button_Service@name 0030  
                            ?_Sensor_setActive 0070                                   _Sensor_scanA 0057  
                                 _Sensor_scanB 0055                             ??_Sensor_setActive 0072  
                        ?_MTOUCH_Sensor_Enable 0070                                       __ptext10 0128  
                                     __ptext11 0FDE                                       __ptext20 0154  
                                     __ptext12 0B7B                                       __ptext21 0B96  
                                     __ptext13 0B75                                       __ptext30 0B81  
                                     __ptext22 0CA8                                       __ptext14 0B6F  
                                     __ptext31 0BE7                                       __ptext23 0516  
                                     __ptext15 0CFD                                       __ptext40 0EDC  
                                     __ptext32 02FC                                       __ptext24 0B8F  
                                     __ptext16 0B60                                       __ptext41 0EBC  
                                     __ptext33 0C4C                                       __ptext25 0CC2  
                                     __ptext17 0B62                                       __ptext50 0D9C  
                                     __ptext42 0E9C                                       __ptext34 0361  
                                     __ptext26 0004                                       __ptext18 00AB  
                                     __ptext51 0D7C                                       __ptext43 0E7C  
                                     __ptext35 0F7C                                       __ptext27 024D  
                                     __ptext19 00FE                                       __ptext60 0060  
                                     __ptext52 0D5C                                       __ptext44 0E5C  
                                     __ptext36 0F5C                                       __ptext28 0C8E  
                                     __ptext61 0B5E                                       __ptext53 0D3C  
                                     __ptext45 0E3C                                       __ptext37 0F3C  
                                     __ptext29 0B88                                       __ptext70 0C76  
                                     __ptext62 071B                                       __ptext54 0D1C  
                                     __ptext46 0E1C                                       __ptext38 0F1C  
                                     __ptext71 01F8                                       __ptext63 04A5  
                                     __ptext55 0B6A                                       __ptext47 0DFC  
                                     __ptext39 0EFC                                       __ptext72 0084  
                                     __ptext64 0587                                       __ptext56 0C60  
                                     __ptext48 0DDC                                       __ptext73 05FE  
                                     __ptext65 01B0                                       __ptext57 0C39  
                                     __ptext49 0DBC                                       __ptext74 00D4  
                                     __ptext66 0B5D                                       __ptext58 0C27  
                                     __ptext75 0CDE                                       __ptext67 0B5C  
                                     __ptext59 0435                                       __ptext76 0BD8  
                                     __ptext68 068B                                       __ptext77 0B9D  
                                     __ptext69 0181                                       __ptext78 003C  
                    __end_of_MTOUCH_Initialize 0BD8                      ??_Sensor_RawSample_Update 0072  
          Sensor_Acq_ExecutePacket@ADCON0_temp 0021            Sensor_Acq_ExecutePacket@ADCON1_temp 0022  
                   __size_of_Sensor_setSampled 0007                                  __size_of_main 006B  
                  __size_of_EUSART_is_tx_ready 000F                __end_of_MTOUCH_Sensor_SampleAll 0CC2  
                      ?_EUSART_SetErrorHandler 0070  EUSART_SetOverrunErrorHandler@interruptHandler 0070  
                 Sensor_setScanFunction@sensor 0070                       ??_Sensor_Acq_ExecuteScan 0076  
           __size_of_Button_State_Initializing 0071              Sensor_Acq_ExecutePacket@GIE_state 0023  
        __end_of_EUSART_SetFramingErrorHandler 0B7B         __size_of_EUSART_SetFramingErrorHandler 0006  
                _EUSART_SetFramingErrorHandler 0B75                __size_of_Button_Baseline_Update 0090  
                 ?_MTOUCH_Button_InitializeAll 0070                   ?_MTOUCH_Sensor_InitializeAll 0070  
                                _mtouch_button 20C6                                     _INTCONbits 000B  
                                _mtouch_sensor 206C                                       memcpy@d1 0070  
                                     memcpy@s1 0072                __end_of_MTOUCH_Button_isPressed 00FE  
                            __CFG_BOREN$NSLEEP 0000                                    _MTOUCH_Tick 0B62  
                       ?_Button_Reading_Update 0024               Button_Deviation_Update@deviation 0020  
                      __size_of_WDT_Initialize 0004                   MTOUCH_Button_Initialize@name 007A  
            __size_of_MTOUCH_Button_Initialize 0048                      ?_MTOUCH_Button_Initialize 0070  
                  __size_of_Sensor_Acquisition 0055                __size_of_Sensor_setScanFunction 0014  
                      ?_PIN_MANAGER_Initialize 0070                 __end_of_EUSART_SetErrorHandler 0B75  
                            __CFG_CLKOUTEN$OFF 0000                    ?_MTOUCH_Sensor_isCalibrated 0070  
                            MTOUCH_Random@seed 004A                    __size_of_Button_Tick_helper 002A  
              __end_of_Button_State_NotPressed 07CB  EUSART_SetFramingErrorHandler@interruptHandler 0070  
                 __end_of_Sensor_Sampled_Reset 0B9D                    __size_of_MTOUCH_Button_Tick 0029  
                                __pstringtext1 0800                  ??_MTOUCH_Button_InitializeAll 007D  
                     ??_Button_DefaultCallback 0071                  ??_MTOUCH_Sensor_InitializeAll 007C  
             __size_of_MTOUCH_Sensor_Calibrate 0001                         ??_MTOUCH_Sensor_Enable 0076  
                     ??_Sensor_DefaultCallback 0071           __end_of_Button_Reading_Update_Helper 024D  
        __size_of_Button_Reading_Update_Helper 0055                   _Button_Reading_Update_Helper 01F8  
            __size_of_MTOUCH_Button_ServiceAll 0012                      ?_MTOUCH_Button_ServiceAll 0070  
                Button_State_NotPressed@button 0026                             EUSART_Write@txData 0070  
                   __size_of_MTOUCH_Initialize 000D                 __end_of_PIN_MANAGER_Initialize 0019  
                       _Button_Baseline_Update 068B                     __end_of_DELAY_microseconds 0060  
                  MTOUCH_Button_isPressed@name 007A                     ??_MTOUCH_Sensor_wasSampled 0076  
